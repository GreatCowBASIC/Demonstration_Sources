'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program shows how to use a table to create special characters on the LED Matrix
''':
'''You must select the correct Pset constant to match your LED Matrix.  See Configuration below.
''':
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    27.01.2017
'''********************************************************************************
; ----- Configuration
  #chip 16f18855,32
  #config MCLRE=on
  #include <max7219_ledmatrix_driver.h>
  #option Explicit

  #startup InitPPS, 85
  Sub InitPPS
    #ifdef MAX7219_LEDMatrix_HardwareSPI
      UNLOCKPPS
              SSP1DATPPS = 0x0C;   //RB4->MSSP1:SDI1;
              RB5PPS = 0x15;   //RB5->MSSP1:SDO1;
              RB3PPS = 0x14;   //RB3->MSSP1:SCK1;
      LOCKPPS
    #endif
  End sub


; ----- Constants
  'Set SPI pins for the Max7219
  #define Max7219_DI    portb.4
  #define Max7219_DO    portb.5
  #define Max7219_SCK   portb.3
  #define Max7219_CS    portc.3

  'Specifics for device configuration
  #define MAX7219_X_Devices 4
  #define MAX7219_LEDMatrix_HardwareSPI     ' remove and make a comment out if you want to use Software SPI for this device

  'Choose one of the constants below to match the orientation of your LED Matrixes.
  'All the LED Matrixes must have the same orientation.
  #define Pset max7219_LEDMatrix_PSet_0
  '#define Pset max7219_LEDMatrix_PSet_90
  '#define Pset max7219_LEDMatrix_PSet_180
  '#define Pset max7219_LEDMatrix_PSet_270

'; ----- Main body of program commences here.


  dim myString as string  * 100
  dim xpos, xx, yy, px as byte


  do Forever

      GLCDCLS
      myString = "Space Invaders... if Arduino users can do it... so can GCBASIC users!!"
      Max7219_LEDMatrix_ScrollMessage ( myString, 1 )

      repeat 2

        Max7219_LEDMatrix_ClearBuffer
        for xpos = 0 to 24 step 8
          for xx = 0 to 7
          for yy = 0 to 8

            readtable MatrixSpaceInvaderA, (yy*8)+xx+1, px
            if px = 1 then
                pset xpos+xx,yy,1
            Else
                pset xpos+xx,yy,0
            end if

          Next
          next
        next
        Max7219_LEDMatrix_Update
        wait 1 s


        Max7219_LEDMatrix_ClearBuffer
        for xpos = 0 to 24 step 8
          for xx = 0 to 7
          for yy = 0 to 8

            readtable MatrixSpaceInvaderB, (yy*8)+xx+1, px
            if px = 1 then
                pset xpos+xx,yy,1
            Else
                pset xpos+xx,yy,0
            end if

          Next
          next
        next
        Max7219_LEDMatrix_Update
        wait 1 s

      end Repeat

  loop

Table MatrixSpaceInvaderA

  0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00
  0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00
  0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01
  0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00
  0x00, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00
  0x01, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01


End Table


Table MatrixSpaceInvaderB

  0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00
  0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00
  0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00
  0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01
  0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00

End Table


Table MatrixImage

  0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01
  0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00
  0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01
  0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00
  0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01
  0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00
  0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01
  0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00
  0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01

End Table
