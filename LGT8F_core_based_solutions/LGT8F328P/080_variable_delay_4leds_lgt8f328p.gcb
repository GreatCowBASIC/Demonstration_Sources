'''A demonstration program for GCBASIC
'''---------------------------------------------------------------------------------

'''
'''
''' GCBASIC will flash each LED sequentially with a delay read from an ADC port.
''' The LEDs use a method that shifts the port to the right. This means the each LED is set on sequentially.
'''
''' See http://gcbasic.sourceforge.net/help/_rotate.html
'''
''' In this demo we connect four LEDs and flash them.
''' Connect the LEDs via suitable resistors using a standard LED connection.
'''
'''
''' -------------------PORTC-----------------
''' Bit#:  -7---6---5---4---3---2---1---0---
''' PCB    NA--A6--A5--A4--A3--A2--A1--A0---
''' Constants
'''        ---------------|L4 |L3 |L2 |L1 |-  where L equates to LED
'''-----------------------------------------
'''
''' -------------------PORTE-----------------
''' Bit#:  -7---6---5---4---3---2---1---0---
''' PCB                          --A6-------
''' Constants
'''                               -ADC-
'''-----------------------------------------

''
'''@author  Evan Venn
'''@licence GPL
'''@version 1.0
'''@date    08/10/2020
'''********************************************************************************


; ----- Configuration
#chip  LGT8F328P
#option Explicit
'GCBASIC simplifies the configuration by setting the frequency and the configuration for you.   'Set constants to refer to the LEDs.
    #DEFINE LED1 portc.0
    #DEFINE LED2 portc.1
    #DEFINE LED3 portc.2
    #DEFINE LED4 portc.3

    'Set LED as an output
    Dir LED1 Out
    Dir LED2 Out
    Dir LED3 Out
    Dir LED4 Out

    'Define a variable to store our reading
    Dim readADCValue as word

    ''' Most programs run in a loop such as this one
    'Set the first LED on
    LED4 = 1

    Do

        'Make an 8 bit reading of the ADC port.  This returns a value of 0 to 255.  The ADC port supports 0 to 4095 [ReadAD12()] but the demo looks silly with big numbers. :-)
        readADCValue = readAD( ADC6 )

        'if readADCValue is 0 then set to 1.. just makes the LEDs look better...
        if readADCValue = 0 then
          readADCValue= 1
        end if

        'wait using readADCValue as the time parameter
        Wait readADCValue ms
        Set C Off
        Rotate portc Right
        'When the Carry flag is set to 1 then set the LED4 LED again.  The Carry flag is set when the bit 0 is 1 and PORTC is shifted to the right.
        If C = 1 Then LED4 = 1

    Loop
