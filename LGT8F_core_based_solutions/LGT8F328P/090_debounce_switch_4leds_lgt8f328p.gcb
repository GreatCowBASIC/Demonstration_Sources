'''A demonstration program for GCBASIC
'''---------------------------------------------------------------------------------
''' This demonstration uses a simple software routine to avoid the initial noise on the switch
''' pin. The code will inspect the switch status, but should overcome most of the noise from a switch.
'''
''' Some switches are worse than others.
'''
''' When the switch is held down, the LEDs will toggle.
'''
''' In this demo we connect four LEDs and a switch.
''' Connect the LEDs via suitable resistors using a standard LED connection.
'''
'''
''' -------------------PORTC-----------------
''' Bit#:  -7---6---5---4---3---2---1---0---
''' PCB    NA--A6--A5--A4--A3--A2--A1--A0---
''' Constants
''' LED    ---------------|L4 |L3 |L2 |L1 |-  where L equates to LED
'''-----------------------------------------
'''
''' Connect the switch via suitable resistors using a standard switch connection.
''' -------------------PORTE-----------------
''' Bit#:  -7---6---5---4---3---2---1---0---
''' PCB                  --A7--
''' Constants
''' SWITCH----------------|SW |--------------
'''-----------------------------------------
'''
'''
'''


'''@author  Evan Venn
'''@licence GPL
'''@version 1.0
'''@date    08/10/2020
'''********************************************************************************


; ----- Configuration
#chip  LGT8F328P
#option Explicit
'GCBASIC simplifies the configuration by setting the frequency and the configuration for you.   'Set constants to refer to the LEDs.

    #DEFINE LED1 portc.0
    #DEFINE LED2 portc.1
    #DEFINE LED3 portc.2
    #DEFINE LED4 portc.3

    'Set LED as an output
    Dir LED1 Out
    Dir LED2 Out
    Dir LED3 Out
    Dir LED4 Out

    #DEFINE SWITCH porte.3

    'Set Switch as an input
    Dir SWITCH In

    Dim lastKeyDown As Bit

    'Debouncing a switch
    Do Forever

        'push button pressed
        If  keyPressed() = TRUE Then
            LED1 = 1: LED2 = 1: LED3 = 1: LED4 = 1
        Else

            LED1 = 0: LED2 = 0: LED3 = 0: LED4 = 0
        End If

    Loop

' Debounce button or Debounce switch
Function keyPressed()

    dim ButtonCounter as byte
    #DEFINE BUTTONCOUNTMAX 5
    #DEFINE DOWN 0

    keyPressed  = FALSE

    If SWITCH = DOWN Then

        ButtonCounter = 0

        Do While SWITCH = DOWN
            wait 5 ms
            ButtonCounter++
            If ButtonCounter = BUTTONCOUNTMAX then
                keyPressed  = true
                exit function
            end if
        Loop

    end if

End Function
