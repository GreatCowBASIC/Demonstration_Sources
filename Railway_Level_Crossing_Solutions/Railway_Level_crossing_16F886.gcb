'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a level crossing solution.
''':    There are four sensors/switches connected to
''':          porta.0,porta.1, porta.6 and porta.7
''':    There are two relays connnected to
''':          portb.3 and portb.4 for moving the barrie up and down respectively.
''':    There are two leds connected to
''':          portb.0 and portb.1 for the warning lights.
''':    Finally, there is a sound device connect to
''':          portb.5
'''@author 	EvanV plus works of HughC
'''@licence	GPL
'''@version	1.0a
'''@date   	31.01.2015
'''********************************************************************************

; ----- Configuration
 #chip 16F886, 16
 #option explicit




; ----- Define Hardware settings
  #define LED1 PORTB.0
  #define LED2 PORTB.1
  #define GateUp PORTB.3
  #define GateDown PORTB.4
  #define SoundOut PORTB.5

  #define TrackSensor1 PORTA.1
  #define TrackSensor2 PORTA.0
  #define TrackSensor3 PORTA.7
  #define TrackSensor4 PORTA.6

  dir LED1 out
  dir LED2 out
  dir TrackSensor1 in
  dir TrackSensor2 in
  dir TrackSensor3 in
  dir TrackSensor4 in
  dir SoundOut out
  dir GateUp out
  dir GateDown out

; ----- Constants
  #define Timeout 50 ms 'Time for status of sensor to remain changed for before acting
  #define AfterCount 0 'Times to flash lights after train is clear
  #define UpTime 2 'Number of flashes taken for gate to rise
  #define DownTime 2 'Number of flashes taken for gate to fall
  #define GateDownComp 20 ms 'Extra time to move gate down for (was 40, 5)


; ----- Variables
  Dim RINGBELL, BELLTONE, GATEMOVING, TEMP, GATEMOVING as Byte

; ----- Main body of program commences here.

    Main:
     'Turn off lights initially
     SET LED1 OFF
     SET LED2 OFF

     'Wait for sensor to detect train
     wait until TrainPresent

     'Wait a while, then check again to avoid false triggering
     wait Timeout
     if NOT TrainPresent then goto Main

     'Lower gate
     LowerGate

     'Flash while the sensor detects train
    WinkLights:
     do while TrainPresent
      FlashLights
     loop

     'Flash again, then check to see if train is still absent
     FlashLights
     if TrainPresent then goto WinkLights

     'Delay after train has left
     if AfterCount <> 0 THEN
      for Temp = 1 to AfterCount
       FlashLights
      next
     end if

     'Raise Gate
     RaiseGate

     'Simulate lights being randomly turned off
     set LED1 on
     set LED2 off
     wait Random ms
    goto Main
    end

; ----- Support methods.  Subroutines and Functions




    function TrainPresent
     TrainPresent = False
     if TrackSensor1 ON then TrainPresent = True
     if TrackSensor2 ON then TrainPresent = True
     if TrackSensor3 ON then TrainPresent = True
     if TrackSensor4 ON then TrainPresent = True
    end function

    sub FlashLights
      set LED1 on
      set LED2 off
      BellDelay
      set LED1 off
      set LED2 on
      BellDelay
    end sub

    sub BellDelay
     'Must sound bell 3 times in 600 ms

     for RingBell = 1 to 3
      ShortTone 50, 2
      for BellTone = 150 to 250 step 2
       ShortTone BellTone, 1
      next
      wait 150 ms
     next
    end sub

    sub LowerGate
     Temp = DownTime
     GateMoving = 1
     set GateUp off
     set GateDown on
     wait GateDownComp

     do while GateMoving = 1
      set LED1 on
      set LED2 off
      BellDelay
      Temp -= 1
      if Temp = 0 then set GateDown off: GateMoving = 0

      set LED1 off
      set LED2 on
      BellDelay
      Temp -= 1
      if Temp = 0 then set GateDown off: GateMoving = 0
     loop

    end sub

    sub RaiseGate
     Temp = UpTime
     GateMoving = 1
     set GateDown off
     set GateUp on

     do while GateMoving = 1
      set LED1 on
      set LED2 off
      BellDelay
      Temp -= 1
      if Temp = 0 then set GateUp off: GateMoving = 0

      set LED1 off
      set LED2 on
      BellDelay
      Temp -= 1
      if Temp = 0 then set GateUp off: GateMoving = 0
     loop

    end sub
