;Include files (Libraries)
#include <UNO_mega328p.h>
#include "lnp_rxpin.h"

;Defines (Constants)
#define RED DIGITAL_2
#define YELLOW DIGITAL_3
#define GREEN DIGITAL_4
#define FEATHER DIGITAL_5
#define POINT_MOTOR DIGITAL_11
#define LNP_REC_HANDLER PointsLNPHandler
#define LIGHT_RED 0
#define LIGHT_YELLOW 1
#define LIGHT_FLASHING 2
#define LIGHT_GREEN 3
#define TRACK_DIVERGE 4
#define TRACK_STRAIGHT 0

;Variables
Dim InData As byte
Dim FlashCounter As byte
Dim LightState As byte
Dim TrackState As byte
Dim StatusSendCount As byte

'Set up
LNPInitialise
LightState = LIGHT_RED
TrackState = TRACK_DIVERGE
FlashCounter = 0
StatusSendCount = 0

'Main loop
Do Forever
	If LightState = LIGHT_RED Then
		Set RED On
		Set YELLOW Off
		Set GREEN Off
	Else If LightState = LIGHT_YELLOW Then
		Set RED Off
		Set YELLOW On
		Set GREEN Off
	Else If LightState = LIGHT_FLASHING Then
		FlashCounter = FlashCounter + 1
		If FlashCounter < 25 Then
			Set RED Off
			Set YELLOW On
			Set GREEN Off
		Else If FlashCounter < 50 Then
			Set RED Off
			Set YELLOW Off
			Set GREEN Off
		Else
			FlashCounter = 0
		End If
	Else If LightState = LIGHT_GREEN Then
		Set RED Off
		Set YELLOW Off
		Set GREEN On
	End If
	If TrackState = TRACK_DIVERGE Then

		'Set points for loop
		'Old value 1900 us, causes vibration 18/3/2023
		PulseOut POINT_MOTOR, 1850 us
		If LightState = LIGHT_RED Then
			Set FEATHER Off
		Else
			Set FEATHER On
		End If
	Else If TrackState = TRACK_STRAIGHT Then
		Set FEATHER Off

		'Set points for main line
		'old value 1310 causes vibration
		PulseOut POINT_MOTOR, 1360 us
	End If

	'Send status
	StatusSendCount = StatusSendCount + 1
	If StatusSendCount > 25 Then
		OutStatus = LightState
		If TrackState = TRACK_DIVERGE Then
			Set OutStatus.2 On
		End If
		SendLNPPair 4, OutStatus
		StatusSendCount = 0
	End If

	'Loop delay of 20 ms
	Wait 20 ms
Loop

Sub PointsLNPHandler
	'Process received LNP message
	'Controller sends pair of 3, status
	If LNPInBytes = 2 and LNPState = LNP_STATE_WAITING Then
		If LNPInBuffer(1) = 3 Then
			InData = LNPInBuffer(2)
			LightState = InData And 3
			If InData.2 Then
				TrackState = TRACK_DIVERGE
			Else
				TrackState = TRACK_STRAIGHT
			End If

			'Acknowledge (by triggering send in 2 * 20 ms and clearing in buffer)
			StatusSendCount = 2
			LNPInBytes = 0
		End If
	End If
End Sub

