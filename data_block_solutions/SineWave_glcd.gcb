/*
A demonstration program for GCBASIC.
--------------------------------------------------------------------------------------------------------------------------------
This program is a simple GLCD demonstration of the KS0108 GLCD capabilities.
This program draws a sine wave as defined by Manfred Mornhinweg <manfred AT ludens.cl>

Creating a sine wave is not hard from a data point of view, and accuracy isn't terribly important, when you have only 64 pixels to select from in this demo.

The wave tables starts from the first value after the starting-point zero. It properly includes the peak value just one time (although the neighboring 3 values to each side are the same, due to lack of resolution on that screen), and that makes the data set end exactly on the zero crossing (zero value).

When plotted, starts at the centerline, read and plot the full table with negative sign (upwards), then read and plot it again with positive sign (downwards), and the last value (zero) will fall overboard, not fitting on the display. So you have a complete sine wave there.

Or else, you could read the table backwards! In that case the starting zero is included in the table, and the last zero that falls overboard is not.

If you prefer, I can modify the table to have the zero in front. Or you can do it yourself. Just remove the zero from the end and put it in the front. The table is symmetric except for that zero.

DATA halfsine64 as byte   //64 points for 128x64 LCD
    2 , 3 , 5 , 6 , 8 , 9 , 10 , 12
    13 , 15 , 16 , 17 , 18 , 20 , 21 , 22
    23 , 24 , 25 , 26 , 27 , 27 , 28 , 29
    29 , 30 , 30 , 30 , 31 , 31 , 31 , 31
    31 , 31 , 31 , 30 , 30 , 30 , 29 , 29
    28 , 27 , 27 , 26 , 25 , 24 , 23 , 22
    21 , 20 , 18 , 17 , 16 , 15 , 13 , 12
    10 , 9 , 8 , 6 , 5 , 3 , 2 , 0
END DATA

========================
Visit my hobby homepage!
http://ludens.cl

This program has sinewave tables for other resolutions.  Enjoy!

The GLCD is connected to the microprocessor is as shown in the hardware section of this code.

@author  EvanV and ManfredM
@licence GPL
@version 1.0a
@date    10.12.2018
***********************************************************
*/

#CHIP 16f877
#OPTION Explicit

#INCLUDE <glcd.h>
// This is the Default value, not required.
#DEFINE GLCD_TYPE GLCD_TYPE_KS0108
    //The constant is required to support OLED fonts
    #DEFINE GLCD_OLED_FONT
    //The constant to disable the large fontset.
    #DEFINE GLCD_Disable_OLED_FONT2

    // #define GLCDDirection 1                          // Invert display, not always required

    #DEFINE GLCD_CS1 PORTb.1
    #DEFINE GLCD_CS2 PORTb.0
    //D0 to pin 7 on LCD
    #DEFINE GLCD_DB0 PORTD.0
    //D1 to pin 8 on LCD
    #DEFINE GLCD_DB1 PORTD.1
    //D2 to pin 9 on LCD
    #DEFINE GLCD_DB2 PORTD.2
    //D3 to pin 10 on LCD
    #DEFINE GLCD_DB3 PORTD.3
    //D4 to pin 11 on LCD
    #DEFINE GLCD_DB4 PORTD.4
    //D5 to pin 12 on LCD
    #DEFINE GLCD_DB5 PORTD.5
    //D6 to pin 13 on LCD
    #DEFINE GLCD_DB6 PORTD.6
    //D7 to pin 14 on LCD
    #DEFINE GLCD_DB7 PORTD.7

    #DEFINE GLCD_RS PORTb.2
    #DEFINE GLCD_Enable PORTb.5
    #DEFINE GLCD_RW PORTb.4
    #DEFINE GLCD_RESET PORTC.2


// Main program

    Dim xPos, yPos As Word
    Dim yoffset, sinecoordVal as Byte

    #IFNDEF GLCD_OLED_FONT
        GLCDPrint 10,24,  "Real PIC Simulator"
        GLCDPrint 20,32,  "on Graphic LCD"
        GLCDPrint 40,40,  "SineWave"
    #ENDIF

    #IFDEF GLCD_OLED_FONT
        GLCDPrint 27,24,  "Real PIC Simulator"
        GLCDPrint 34,32,  "on Graphic LCD"
        GLCDPrint 40,40,  "SineWave"
    #ENDIF

    Wait 2 s

    GLCDCLS
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING
#DEFINE USART_DELAY OFF

    Do
        ypos = 0
        yoffset = 31
        for xpos = 0 to 127  
                ProgramRead (@halfsine64 + ( xpos MOD 64 ), sinecoordVal )
                HserPrintByte sinecoordVal
                HserPrint","
                // Mod the number to ensure the select case works as expected
                Select Case xpos
                    Case 0 to 62
                        pset xpos, yoffset - sinecoordVal, 1
                    Case 63 to 127
                        pset xpos, yoffset + sinecoordVal, 1
                End Select
                ypos++
        next
    Loop

DATA halfsine64 as byte   //64 points for 128x64 LCD
    0, 2 , 3 , 5 , 6 , 8 , 9 , 10 , 12
    13 , 15 , 16 , 17 , 18 , 20 , 21 , 22
    23 , 24 , 25 , 26 , 27 , 27 , 28 , 29
    29 , 30 , 30 , 30 , 31 , 31 , 31 , 31
    31 , 31 , 31 , 30 , 30 , 30 , 29 , 29
    28 , 27 , 27 , 26 , 25 , 24 , 23 , 22
    21 , 20 , 18 , 17 , 16 , 15 , 13 , 12
    10 , 9 , 8 , 6 , 5 , 3 , 2
    END DATA

DATA quartersine480 as byte   //200 points for 800x480 LCD
    2 , 4 , 6 , 8 , 9 , 11 , 13 , 15 , 17 , 19
    21 , 22 , 24 , 26 , 28 , 30 , 32 , 34 , 36 , 37
    39 , 41 , 43 , 45 , 47 , 48 , 50 , 52 , 54 , 56
    58 , 59 , 61 , 63 , 65 , 67 , 68 , 70 , 72 , 74
    76 , 77 , 79 , 81 , 83 , 84 , 86 , 88 , 90 , 91
    93 , 95 , 97 , 98 , 100 , 102 , 103 , 105 , 107 , 109
    110 , 112 , 113 , 115 , 117 , 118 , 120 , 122 , 123 , 125
    126 , 128 , 130 , 131 , 133 , 134 , 136 , 137 , 139 , 140
    142 , 144 , 145 , 146 , 148 , 149 , 151 , 152 , 154 , 155
    157 , 158 , 159 , 161 , 162 , 164 , 165 , 166 , 168 , 169
    170 , 172 , 173 , 174 , 176 , 177 , 178 , 179 , 181 , 182
    183 , 184 , 185 , 187 , 188 , 189 , 190 , 191 , 192 , 193
    194 , 196 , 197 , 198 , 199 , 200 , 201 , 202 , 203 , 204
    205 , 206 , 207 , 208 , 209 , 209 , 210 , 211 , 212 , 213
    214 , 215 , 215 , 216 , 217 , 218 , 219 , 219 , 220 , 221
    222 , 222 , 223 , 224 , 224 , 225 , 225 , 226 , 227 , 227
    228 , 228 , 229 , 230 , 230 , 231 , 231 , 231 , 232 , 232
    233 , 233 , 234 , 234 , 234 , 235 , 235 , 235 , 236 , 236
    236 , 237 , 237 , 237 , 237 , 238 , 238 , 238 , 238 , 238
    238 , 239 , 239 , 239 , 239 , 239 , 239 , 239 , 239 , 239
    END DATA

DATA quartersine600 as word   //256 points for 1024x600 LCD
    2 , 4 , 6 , 7 , 9 , 11 , 13 , 15 , 17 , 18
    20 , 22 , 24 , 26 , 27 , 29 , 31 , 33 , 35 , 37
    38 , 40 , 42 , 44 , 46 , 47 , 49 , 51 , 53 , 55
    57 , 58 , 60 , 62 , 64 , 66 , 67 , 69 , 71 , 73
    74 , 76 , 78 , 80 , 82 , 83 , 85 , 87 , 89 , 90
    92 , 94 , 96 , 97 , 99 , 101 , 102 , 104 , 106 , 108
    109 , 111 , 113 , 114 , 116 , 118 , 119 , 121 , 123 , 125
    126 , 128 , 129 , 131 , 133 , 134 , 136 , 138 , 139 , 141
    143 , 144 , 146 , 147 , 149 , 151 , 152 , 154 , 155 , 157
    158 , 160 , 162 , 163 , 165 , 166 , 168 , 169 , 171 , 172
    174 , 175 , 177 , 178 , 180 , 181 , 183 , 184 , 185 , 187
    188 , 190 , 191 , 193 , 194 , 195 , 197 , 198 , 199 , 201
    202 , 203 , 205 , 206 , 207 , 209 , 210 , 211 , 213 , 214
    215 , 217 , 218 , 219 , 220 , 222 , 223 , 224 , 225 , 226
    228 , 229 , 230 , 231 , 232 , 233 , 235 , 236 , 237 , 238
    239 , 240 , 241 , 242 , 243 , 244 , 246 , 247 , 248 , 249
    250 , 251 , 252 , 253 , 254 , 255 , 256 , 256 , 257 , 258
    259 , 260 , 261 , 262 , 263 , 264 , 265 , 265 , 266 , 267
    268 , 269 , 270 , 270 , 271 , 272 , 273 , 273 , 274 , 275
    276 , 276 , 277 , 278 , 278 , 279 , 280 , 280 , 281 , 282
    282 , 283 , 283 , 284 , 284 , 285 , 286 , 286 , 287 , 287
    288 , 288 , 289 , 289 , 290 , 290 , 290 , 291 , 291 , 292
    292 , 293 , 293 , 293 , 294 , 294 , 294 , 295 , 295 , 295
    295 , 296 , 296 , 296 , 297 , 297 , 297 , 297 , 297 , 298
    298 , 298 , 298 , 298 , 298 , 298 , 299 , 299 , 299 , 299
    299 , 299 , 299 , 299 , 299 , 299
    END DATA
