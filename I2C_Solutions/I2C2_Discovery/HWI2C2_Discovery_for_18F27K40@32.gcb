'''A demonstration program for GCBASIC.
'''The program shows how the I2C2 bus can be used to extend the number of IO lines.
''':
''':This demonstration how to use the second hardware I2C port to discover all the attached I2C2 devices.
''':This demonstration is implemented on the second IC2 port on the 18F27K40 device.
''':To use the second I2C2 simply add <lowlevel\hwi2c2.h> as an include and then all the i2c2 commands are
''':availalbe with a suffice.
''':
''':
'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    Aug 2019
'''*************************************************************************

  'Chip Settings.
  #chip 18F27K40,32
  #option explicit

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.25
    'PinManager data: v1.75
    'Generated for 18f27k40
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18f27k40

    Sub InitPPS

            'Module: EUSART1
            RC6PPS = 0x0009    'TX1 > RC6
            'Module: MSSP2
            RC4PPS = 0x0012    'SDA2 > RC4
            SSP2DATPPS = 0x0014    'RC4 > SDA2 (bi-directional)
            RC3PPS = 0x0011    'SCK2 > RC3
            SSP2CLKPPS = 0x0013    'RC3 > SCK2 (bi-directional)


    End Sub
    'Template comment at the end of the config file


; ----- Define Hardware settings for HWI2C2
  ' Define I2C settings - CHANGE PORTS if required for your specific device.
  #define HI2C2_BAUD_RATE 100
  #define HI2C2_DATA PORTc.4
  #define HI2C2_CLOCK PORTc.3
  'Initialise I2C Master
  'I2C pins need to be input for SSP2 module
  Dir HI2C2_DATA in
  Dir HI2C2_CLOCK in
 'MASTER Second Port
  HI2C2Mode Master

  'USART settings
  #define USART_BAUD_RATE 9600
  #define USART_TX_BLOCKING

  #define SWITCH_DOWN         0
  #define SWITCH_UP           1

  #define SWITCH               PORTA.5


;----- Variables
         Dim DEVICEID, TESTID as Byte

; ----- Main body of program commences here.
         ' Now assumes Serial Terminal is operational
         wait 1 s



         HSerPrintCRLF 2
         HSerPrint "Hardware I2C2 Device Search for Microchip"
         HSerPrintCRLF
         HSerPrint ChipNameStr
         HSerPrintCRLF

          Dim DISPLAYNEWLINE as Byte

          Do Forever

                HSerPrint "     "
                for DeviceID = 0 to 15
                  HSerPrint hex(deviceID)
                  HSerPrint " "
                next

                for DeviceID = 0 to 255
                  DisplayNewLine = DeviceID % 16
                  if DisplayNewLine = 0 Then
                    HSerPrintCRLF
                    HSerPrint hex(DeviceID)
                    HSerPrint ": "
                  end if
                  HSerPrint " "
                  HI2C2Start
                  if HI2C2WaitMSSPTimeout <> True then

                    HI2C2Send ( deviceID )

                    if HI2C2AckPollState = false then
                      HSerPrint   hex(deviceID)
                    Else
                      HSerPrint "--"
                    end if
                    HI2C2Send ( 0)

                  end if
                  HI2C2Stop

                next

                HSerPrintCRLF 2
                HSerPrint   "End of Search"
                HSerPrintCRLF 2

                wait while switch = On
          Loop
          END
