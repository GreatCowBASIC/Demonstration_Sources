'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program searches for I2C devices and display their adresses to the attached PC terminal.
'''This program uses the software implementation of I2C for the Microchip microprocessors.
'''The hardware serial connections are shown in the program.
'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''********************************************************************************

; ----- Configuration
  #chip 18F47K42, 4
  #option explicit

      // PIC PPS Tool version: 0.0.6.5
    
    #startup InitPPS, 85
    #define PPSToolPart 18F47K42

    Sub InitPPS
            
            // Module: UART pin directions
            Dir PORTC.7 Out    ' Make TX1 pin an output
            // Module: UART1
            RC7PPS = 0x0013    // TX1 > RC7
        
        End Sub
    // Add this code segment to your GCBASIC source program

/*

  ------------PORTA---------------
  Bit#: -7---6---5---4---3---2---1---0---
  IO: ---------------------------------
  
  ------------PORTB----------------
  Bit#: -7---6---5---4---3---2---1---0---
  IO: ----------------------------------

  ------------PORTC----------------
  Bit#: -7---6---5---4---3---2---1---0---
  IO: --TX------------------------------
        PPS

  ------------PORTD----------------
  Bit#: -7---6---5---4---3---2---1---0---
  IO: ----------------------------------

  ------------PORTE---------------
  Bit#: -7---6---5---4---3---2---1---0---
  IO: -----------------------------------

*/

; ----- Define Hardware settings
  ' Define I2C settings - CHANGE PORTS
 #define I2C_MODE Master
 #define I2C_DATA   PORTC.4
 #define I2C_CLOCK  PORTC.3
 #define I2C_DISABLE_INTERRUPTS ON

 ' THIS CONFIG OF THE SERIAL PORT WORKS WITH A  MAX232 (or equiv) THEN TO PC
 #DEFINE USART_BAUD_RATE 9600
 #DEFINE USART_TX_BLOCKING
 #DEFINE USART_DELAY OFF
 
;----- Variables
  Dim DISPLAYNEWLINE as Byte


; ----- Main body of program commences here.
         ' Now assumes Serial Terminal is operational
  dim DeviceID as byte

'  HSerPrintCRLF
'  dim myMessage as String * 12
'  myMessage = "Software I2C"
'  HSerPrint myMessage
'  HSerPrintCRLF 2
  
  Do
      HSerPrintCRLF
      HSerPrint "Software I2C   Live Demo"
      HSerPrintCRLF 2

    HSerPrint "     "
    for DeviceID = 0 to 15
      HSerPrint hex(deviceID)
      HSerPrint " "
    next
    for DeviceID = 0 to 255
      DisplayNewLine = DeviceID % 16
      if DisplayNewLine = 0 Then
        HSerPrintCRLF
        HserPrint hex(DeviceID)
        HSerPrint ": "
      end if
      HSerPrint " "
      I2CStart
      I2CSend ( deviceID )

      if I2CSendState = True  then
        HSerPrint   hex(deviceID)
      else
        HSerPrint "--"
      end if
      I2CSend ( 0 )
      i2cstop


    Next
    HSerPrintCRLF 2
    HSerPrint   "End of Search"
    HSerPrintCRLF 2
  
    wait 3 s
  Loop

