'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''Attach a servo motor to the port specificied - this program will make it sweep back and forth dependent on the position of the potentiometer
'''
'''The constants support setting the frequency of the servo operations to 20ms ( 50 Hz ), adjust SERVOPERIOD to suit your application.
'''  The SERVOPERIOD will be less that 20000 us as the operations will take a number of us - hence, the adjustment. 
'''
'''This will not operate with a microcontroller clock frequency of less then 12Mhz
'''
'''@author        EvanV plus works of BillRoth
'''@licence GPL
'''@version 1.0
'''@date    02.01.2023
'''********************************************************************************

; ----- Configuration
#chip 18F27Q83,16
#option explicit


    // Change to suit requirements
    #DEFINE SERVOOUTCHANNEL1 PORTC.0
    DIR SERVOOUTCHANNEL1 OUT

    // Change to suit requirements
    #DEFINE ADCCHANNEL ANA0

    // Change to suit clock frequency and specifics of the servo - these parameters are for a Tower Pro SG90 servo
    #DEFINE SERVOPERIOD 19450  // In microseconds.  Adjust as needed
    #DEFINE FULL_CW     700    // Adjust as needed for CW full position - 500 is lower limit for TPSG9 servo
    #DEFINE FULL_CCW    2300   // Adjust as Needed for CCW full position - 3000 is uppoer limit for TPSG9 servo


    Dim PulsewidthChannel1, lastPulsewidthChannel1 as WORD

    Do
    
        //read adc ( range is 8bits/0 to 255 ) then scale to to FULL_CW and FULL_CCW
        PulsewidthChannel1 = SCALE ( Readad ( ADCCHANNEL ),0,255,FULL_CW,FULL_CCW)

        //If the value (therefore the ADC) is not equal to the last value then update the servo
        if lastPulsewidthChannel1 <> PulsewidthChannel1 Then
            Pulseout SERVOOUTCHANNEL1, PulsewidthChannel1 us
            Wait (SERVOPERIOD - PulsewidthChannel1) us
            lastPulsewidthChannel1 = PulsewidthChannel1
        end if

    Loop
