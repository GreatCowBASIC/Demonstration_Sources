;Program compiled by GCBASIC (1.00.00 Release Candidate 2022-11-06 (Windows 64 bit) : Build 1189) for Microchip PIC-AS
;  See the GCBASIC forums at http://sourceforge.net/projects/gcbasic/forums,
;  Check the documentation and Help at http://gcbasic.sourceforge.net/help/,
;or, email:
;   evanvennn at users dot sourceforge dot net

;********************************************************************************


;Set up the assembler options (Chip type, clock source, other bits and pieces)
;PROCESSOR   16F18126
 PAGEWIDTH   180
 RADIX       DEC
 TITLE       "d:\GreatCowBASICGits\Demonstration_Sources.git\trunk\Vendor_Boards\Microchip_Low_Pin_Count_Demo_Board\PICKit2_Board\16F18126\260_spi_glcd_using_SSD1331.s"
 SUBTITLE    "11-24-2022"

; Reverse lookup file(s)
; C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic16f18126.inc
; C:\Program Files\Microchip\xc8\v2.40\pic\dat\cfgmap\16f18126.cfgmap
; Alternative CONFIG file is to be found at C:\Program Files\Microchip\xc8\vX.YY\pic\dat\cfgdata as per Microchip support ticket #00730936 

;********************************************************************************

;********************************************************************************
;Explicit CONFIG
 CONFIG FCMEN=ON                                 ;C1 Reverselookup FCMEN = ON
 CONFIG CLKOUTEN=OFF                             ;C1 Reverselookup CLKOUTEN = OFF
 CONFIG RSTOSC=HFINTOSC_32MHz                    ;C1 Reverselookup RSTOSC = HFINTOSC_32MHZ
 CONFIG FEXTOSC=OFF                              ;C1 Reverselookup FEXTOSC = OFF
 CONFIG MCLRE=INTMCLR                            ;C1 Reverselookup MCLRE = INTMCLR
 CONFIG WDTE=OFF                                 ;C1 Reverselookup WDTE = OFF
 CONFIG LVP=OFF                                  ;C1 Reverselookup LVP = OFF
 CONFIG WRTSAF=OFF                               ;C1 Reverselookup WRTSAF = OFF
 CONFIG WRTD=OFF                                 ;C1 Reverselookup WRTD = OFF
 CONFIG WRTB=OFF                                 ;C1 Reverselookup WRTB = OFF
 CONFIG CPD=OFF                                  ;C1 Reverselookup CPD = OFF
 CONFIG CP=OFF                                   ;C1 Reverselookup CP = OFF
;Inferred CONFIG


;********************************************************************************
; The XC8 xc.inc include file.  This MUST be placed after the CONFIG statements.

 #include <xc.inc>

;********************************************************************************

;Set aside RAM memory locations for variables. All variables are global.
GLOBAL	BYTENUMBER
 BYTENUMBER                       EQU 32          ; 0X20
GLOBAL	CCOUNT
 CCOUNT                           EQU 33          ; 0X21
GLOBAL	CHARCODE
 CHARCODE                         EQU 34          ; 0X22
GLOBAL	CHARCOL
 CHARCOL                          EQU 35          ; 0X23
GLOBAL	CHARCOL_H
 CHARCOL_H                        EQU 36          ; 0X24
GLOBAL	CHARLOCX
 CHARLOCX                         EQU 37          ; 0X25
GLOBAL	CHARLOCX_H
 CHARLOCX_H                       EQU 38          ; 0X26
GLOBAL	CHARLOCY
 CHARLOCY                         EQU 39          ; 0X27
GLOBAL	CHARLOCY_H
 CHARLOCY_H                       EQU 40          ; 0X28
GLOBAL	COLSPERFONT
 COLSPERFONT                      EQU 41          ; 0X29
GLOBAL	CURRCHARCOL
 CURRCHARCOL                      EQU 42          ; 0X2A
GLOBAL	CURRCHARROW
 CURRCHARROW                      EQU 43          ; 0X2B
GLOBAL	CURRCHARVAL
 CURRCHARVAL                      EQU 44          ; 0X2C
GLOBAL	DDF_X
 DDF_X                            EQU 45          ; 0X2D
GLOBAL	DDF_X_H
 DDF_X_H                          EQU 46          ; 0X2E
GLOBAL	DDF_Y
 DDF_Y                            EQU 47          ; 0X2F
GLOBAL	DDF_Y_H
 DDF_Y_H                          EQU 48          ; 0X30
GLOBAL	DELAYTEMP
 DELAYTEMP                        EQU 112          ; 0X70
GLOBAL	DELAYTEMP2
 DELAYTEMP2                       EQU 113          ; 0X71
GLOBAL	DIM_STATE
 DIM_STATE                        EQU 49          ; 0X31
GLOBAL	DRAWLINE
 DRAWLINE                         EQU 50          ; 0X32
GLOBAL	DRAWLINE_H
 DRAWLINE_H                       EQU 51          ; 0X33
GLOBAL	FF
 FF                               EQU 52          ; 0X34
GLOBAL	FF_H
 FF_H                             EQU 53          ; 0X35
GLOBAL	FILLCIRCLEXX
 FILLCIRCLEXX                     EQU 54          ; 0X36
GLOBAL	FILLCIRCLEYY
 FILLCIRCLEYY                     EQU 55          ; 0X37
GLOBAL	GLCDBACKGROUND
 GLCDBACKGROUND                   EQU 56          ; 0X38
GLOBAL	GLCDBACKGROUND_H
 GLCDBACKGROUND_H                 EQU 57          ; 0X39
GLOBAL	GLCDCOLOUR
 GLCDCOLOUR                       EQU 58          ; 0X3A
GLOBAL	GLCDCOLOUR_H
 GLCDCOLOUR_H                     EQU 59          ; 0X3B
GLOBAL	GLCDDEVICEHEIGHT
 GLCDDEVICEHEIGHT                 EQU 60          ; 0X3C
GLOBAL	GLCDDEVICEHEIGHT_H
 GLCDDEVICEHEIGHT_H               EQU 61          ; 0X3D
GLOBAL	GLCDDEVICEWIDTH
 GLCDDEVICEWIDTH                  EQU 62          ; 0X3E
GLOBAL	GLCDDEVICEWIDTH_H
 GLCDDEVICEWIDTH_H                EQU 63          ; 0X3F
GLOBAL	GLCDFNTDEFAULT
 GLCDFNTDEFAULT                   EQU 64          ; 0X40
GLOBAL	GLCDFNTDEFAULTHEIGHT
 GLCDFNTDEFAULTHEIGHT             EQU 65          ; 0X41
GLOBAL	GLCDFNTDEFAULTSIZE
 GLCDFNTDEFAULTSIZE               EQU 66          ; 0X42
GLOBAL	GLCDFONTWIDTH
 GLCDFONTWIDTH                    EQU 67          ; 0X43
GLOBAL	GLCDFOREGROUND
 GLCDFOREGROUND                   EQU 68          ; 0X44
GLOBAL	GLCDFOREGROUND_H
 GLCDFOREGROUND_H                 EQU 69          ; 0X45
GLOBAL	GLCDPRINTLEN
 GLCDPRINTLEN                     EQU 70          ; 0X46
GLOBAL	GLCDPRINTLOC
 GLCDPRINTLOC                     EQU 71          ; 0X47
GLOBAL	GLCDPRINTLOC_H
 GLCDPRINTLOC_H                   EQU 72          ; 0X48
GLOBAL	GLCDPRINT_STRING_COUNTER
 GLCDPRINT_STRING_COUNTER         EQU 73          ; 0X49
GLOBAL	GLCDTEMP
 GLCDTEMP                         EQU 74          ; 0X4A
GLOBAL	GLCDTEMP_H
 GLCDTEMP_H                       EQU 75          ; 0X4B
GLOBAL	GLCDX
 GLCDX                            EQU 76          ; 0X4C
GLOBAL	GLCDX_H
 GLCDX_H                          EQU 77          ; 0X4D
GLOBAL	GLCDY
 GLCDY                            EQU 78          ; 0X4E
GLOBAL	GLCDY_H
 GLCDY_H                          EQU 79          ; 0X4F
GLOBAL	GLCD_YORDINATE
 GLCD_YORDINATE                   EQU 80          ; 0X50
GLOBAL	GLCD_YORDINATE_H
 GLCD_YORDINATE_H                 EQU 81          ; 0X51
GLOBAL	INXRADIUS
 INXRADIUS                        EQU 82          ; 0X52
GLOBAL	INXRADIUS_H
 INXRADIUS_H                      EQU 83          ; 0X53
GLOBAL	LCDVALUE
 LCDVALUE                         EQU 84          ; 0X54
GLOBAL	LCDVALUE_E
 LCDVALUE_E                       EQU 87          ; 0X57
GLOBAL	LCDVALUE_H
 LCDVALUE_H                       EQU 85          ; 0X55
GLOBAL	LCDVALUE_U
 LCDVALUE_U                       EQU 86          ; 0X56
GLOBAL	LINECOLOUR
 LINECOLOUR                       EQU 88          ; 0X58
GLOBAL	LINECOLOUR_H
 LINECOLOUR_H                     EQU 89          ; 0X59
GLOBAL	LINEDIFFX
 LINEDIFFX                        EQU 90          ; 0X5A
GLOBAL	LINEDIFFX_H
 LINEDIFFX_H                      EQU 91          ; 0X5B
GLOBAL	LINEDIFFX_X2
 LINEDIFFX_X2                     EQU 92          ; 0X5C
GLOBAL	LINEDIFFX_X2_H
 LINEDIFFX_X2_H                   EQU 93          ; 0X5D
GLOBAL	LINEDIFFY
 LINEDIFFY                        EQU 94          ; 0X5E
GLOBAL	LINEDIFFY_H
 LINEDIFFY_H                      EQU 95          ; 0X5F
GLOBAL	LINEDIFFY_X2
 LINEDIFFY_X2                     EQU 96          ; 0X60
GLOBAL	LINEDIFFY_X2_H
 LINEDIFFY_X2_H                   EQU 97          ; 0X61
GLOBAL	LINEERR
 LINEERR                          EQU 98          ; 0X62
GLOBAL	LINEERR_H
 LINEERR_H                        EQU 99          ; 0X63
GLOBAL	LINESTEPX
 LINESTEPX                        EQU 100          ; 0X64
GLOBAL	LINESTEPX_H
 LINESTEPX_H                      EQU 101          ; 0X65
GLOBAL	LINESTEPY
 LINESTEPY                        EQU 102          ; 0X66
GLOBAL	LINESTEPY_H
 LINESTEPY_H                      EQU 103          ; 0X67
GLOBAL	LINEX1
 LINEX1                           EQU 104          ; 0X68
GLOBAL	LINEX1_H
 LINEX1_H                         EQU 105          ; 0X69
GLOBAL	LINEX2
 LINEX2                           EQU 106          ; 0X6A
GLOBAL	LINEX2_H
 LINEX2_H                         EQU 107          ; 0X6B
GLOBAL	LINEY1
 LINEY1                           EQU 108          ; 0X6C
GLOBAL	LINEY1_H
 LINEY1_H                         EQU 109          ; 0X6D
GLOBAL	LINEY2
 LINEY2                           EQU 110          ; 0X6E
GLOBAL	LINEY2_H
 LINEY2_H                         EQU 111          ; 0X6F
GLOBAL	LOCALCHARCODE
 LOCALCHARCODE                    EQU 160          ; 0XA0
GLOBAL	LOCALCHARCODE_H
 LOCALCHARCODE_H                  EQU 161          ; 0XA1
GLOBAL	LONGNUMBER
 LONGNUMBER                       EQU 162          ; 0XA2
GLOBAL	LONGNUMBER_E
 LONGNUMBER_E                     EQU 165          ; 0XA5
GLOBAL	LONGNUMBER_H
 LONGNUMBER_H                     EQU 163          ; 0XA3
GLOBAL	LONGNUMBER_U
 LONGNUMBER_U                     EQU 164          ; 0XA4
GLOBAL	OLDGLCDFONTWIDTH
 OLDGLCDFONTWIDTH                 EQU 166          ; 0XA6
GLOBAL	OUTSTRING
 OUTSTRING                        EQU 10183          ; 0X27C7
GLOBAL	PAD
 PAD                              EQU 10142          ; 0X279E
GLOBAL	PRINTLOCX
 PRINTLOCX                        EQU 167          ; 0XA7
GLOBAL	PRINTLOCX_H
 PRINTLOCX_H                      EQU 168          ; 0XA8
GLOBAL	PRINTLOCY
 PRINTLOCY                        EQU 169          ; 0XA9
GLOBAL	PRINTLOCY_H
 PRINTLOCY_H                      EQU 170          ; 0XAA
GLOBAL	RADIUSERR
 RADIUSERR                        EQU 171          ; 0XAB
GLOBAL	RADIUSERR_H
 RADIUSERR_H                      EQU 172          ; 0XAC
GLOBAL	ROWSPERFONT
 ROWSPERFONT                      EQU 173          ; 0XAD
GLOBAL	SPICLOCKMODE
 SPICLOCKMODE                     EQU 174          ; 0XAE
GLOBAL	SPICURRENTMODE
 SPICURRENTMODE                   EQU 175          ; 0XAF
GLOBAL	SPITXDATA
 SPITXDATA                        EQU 176          ; 0XB0
GLOBAL	SSD1331BYTESTOSEND
 SSD1331BYTESTOSEND               EQU 177          ; 0XB1
GLOBAL	SSD1331BYTESTOSENDCOUNTER
 SSD1331BYTESTOSENDCOUNTER        EQU 178          ; 0XB2
GLOBAL	SSD1331ROTATION
 SSD1331ROTATION                  EQU 179          ; 0XB3
GLOBAL	SSD1331SENDBYTE
 SSD1331SENDBYTE                  EQU 180          ; 0XB4
GLOBAL	SSD1331_COMMAND
 SSD1331_COMMAND                  EQU 10129          ; 0X2791
GLOBAL	STR
 STR                              EQU 10112          ; 0X2780
GLOBAL	STRINGLOCX
 STRINGLOCX                       EQU 181          ; 0XB5
GLOBAL	STRINGLOCX_H
 STRINGLOCX_H                     EQU 182          ; 0XB6
GLOBAL	STRINGPOINTER
 STRINGPOINTER                    EQU 183          ; 0XB7
GLOBAL	SYSARRAYTEMP1
 SYSARRAYTEMP1                    EQU 184          ; 0XB8
GLOBAL	SYSARRAYTEMP2
 SYSARRAYTEMP2                    EQU 185          ; 0XB9
GLOBAL	SYSBYTETEMPA
 SYSBYTETEMPA                     EQU 117          ; 0X75
GLOBAL	SYSBYTETEMPB
 SYSBYTETEMPB                     EQU 121          ; 0X79
GLOBAL	SYSBYTETEMPX
 SYSBYTETEMPX                     EQU 112          ; 0X70
GLOBAL	SYSCALCTEMPA
 SYSCALCTEMPA                     EQU 117          ; 0X75
GLOBAL	SYSCALCTEMPA_E
 SYSCALCTEMPA_E                   EQU 120          ; 0X78
GLOBAL	SYSCALCTEMPA_H
 SYSCALCTEMPA_H                   EQU 118          ; 0X76
GLOBAL	SYSCALCTEMPA_U
 SYSCALCTEMPA_U                   EQU 119          ; 0X77
GLOBAL	SYSCALCTEMPX
 SYSCALCTEMPX                     EQU 112          ; 0X70
GLOBAL	SYSCALCTEMPX_H
 SYSCALCTEMPX_H                   EQU 113          ; 0X71
GLOBAL	SYSCHARCOUNT
 SYSCHARCOUNT                     EQU 186          ; 0XBA
GLOBAL	SYSCHARSHANDLER
 SYSCHARSHANDLER                  EQU 187          ; 0XBB
GLOBAL	SYSCHARSHANDLER_H
 SYSCHARSHANDLER_H                EQU 188          ; 0XBC
GLOBAL	SYSDIVLOOP
 SYSDIVLOOP                       EQU 116          ; 0X74
GLOBAL	SYSDIVMULTA
 SYSDIVMULTA                      EQU 119          ; 0X77
GLOBAL	SYSDIVMULTA_H
 SYSDIVMULTA_H                    EQU 120          ; 0X78
GLOBAL	SYSDIVMULTB
 SYSDIVMULTB                      EQU 123          ; 0X7B
GLOBAL	SYSDIVMULTB_H
 SYSDIVMULTB_H                    EQU 124          ; 0X7C
GLOBAL	SYSDIVMULTX
 SYSDIVMULTX                      EQU 114          ; 0X72
GLOBAL	SYSDIVMULTX_H
 SYSDIVMULTX_H                    EQU 115          ; 0X73
GLOBAL	SYSFORLOOPSTEP2
 SYSFORLOOPSTEP2                  EQU 189          ; 0XBD
GLOBAL	SYSFORLOOPSTEP2_H
 SYSFORLOOPSTEP2_H                EQU 190          ; 0XBE
GLOBAL	SYSINTEGERTEMPA
 SYSINTEGERTEMPA                  EQU 117          ; 0X75
GLOBAL	SYSINTEGERTEMPA_H
 SYSINTEGERTEMPA_H                EQU 118          ; 0X76
GLOBAL	SYSINTEGERTEMPB
 SYSINTEGERTEMPB                  EQU 121          ; 0X79
GLOBAL	SYSINTEGERTEMPB_H
 SYSINTEGERTEMPB_H                EQU 122          ; 0X7A
GLOBAL	SYSINTEGERTEMPX
 SYSINTEGERTEMPX                  EQU 112          ; 0X70
GLOBAL	SYSINTEGERTEMPX_H
 SYSINTEGERTEMPX_H                EQU 113          ; 0X71
GLOBAL	SYSLCDPRINTDATAHANDLER
 SYSLCDPRINTDATAHANDLER           EQU 191          ; 0XBF
GLOBAL	SYSLCDPRINTDATAHANDLER_H
 SYSLCDPRINTDATAHANDLER_H         EQU 192          ; 0XC0
GLOBAL	SYSLONGDIVMULTA
 SYSLONGDIVMULTA                  EQU 193          ; 0XC1
GLOBAL	SYSLONGDIVMULTA_E
 SYSLONGDIVMULTA_E                EQU 196          ; 0XC4
GLOBAL	SYSLONGDIVMULTA_H
 SYSLONGDIVMULTA_H                EQU 194          ; 0XC2
GLOBAL	SYSLONGDIVMULTA_U
 SYSLONGDIVMULTA_U                EQU 195          ; 0XC3
GLOBAL	SYSLONGDIVMULTB
 SYSLONGDIVMULTB                  EQU 197          ; 0XC5
GLOBAL	SYSLONGDIVMULTB_E
 SYSLONGDIVMULTB_E                EQU 200          ; 0XC8
GLOBAL	SYSLONGDIVMULTB_H
 SYSLONGDIVMULTB_H                EQU 198          ; 0XC6
GLOBAL	SYSLONGDIVMULTB_U
 SYSLONGDIVMULTB_U                EQU 199          ; 0XC7
GLOBAL	SYSLONGDIVMULTX
 SYSLONGDIVMULTX                  EQU 201          ; 0XC9
GLOBAL	SYSLONGDIVMULTX_E
 SYSLONGDIVMULTX_E                EQU 204          ; 0XCC
GLOBAL	SYSLONGDIVMULTX_H
 SYSLONGDIVMULTX_H                EQU 202          ; 0XCA
GLOBAL	SYSLONGDIVMULTX_U
 SYSLONGDIVMULTX_U                EQU 203          ; 0XCB
GLOBAL	SYSLONGTEMPA
 SYSLONGTEMPA                     EQU 117          ; 0X75
GLOBAL	SYSLONGTEMPA_E
 SYSLONGTEMPA_E                   EQU 120          ; 0X78
GLOBAL	SYSLONGTEMPA_H
 SYSLONGTEMPA_H                   EQU 118          ; 0X76
GLOBAL	SYSLONGTEMPA_U
 SYSLONGTEMPA_U                   EQU 119          ; 0X77
GLOBAL	SYSLONGTEMPB
 SYSLONGTEMPB                     EQU 121          ; 0X79
GLOBAL	SYSLONGTEMPB_E
 SYSLONGTEMPB_E                   EQU 124          ; 0X7C
GLOBAL	SYSLONGTEMPB_H
 SYSLONGTEMPB_H                   EQU 122          ; 0X7A
GLOBAL	SYSLONGTEMPB_U
 SYSLONGTEMPB_U                   EQU 123          ; 0X7B
GLOBAL	SYSLONGTEMPX
 SYSLONGTEMPX                     EQU 112          ; 0X70
GLOBAL	SYSLONGTEMPX_E
 SYSLONGTEMPX_E                   EQU 115          ; 0X73
GLOBAL	SYSLONGTEMPX_H
 SYSLONGTEMPX_H                   EQU 113          ; 0X71
GLOBAL	SYSLONGTEMPX_U
 SYSLONGTEMPX_U                   EQU 114          ; 0X72
GLOBAL	SYSPRINTBUFFER
 SYSPRINTBUFFER                   EQU 10118          ; 0X2786
GLOBAL	SYSPRINTBUFFLEN
 SYSPRINTBUFFLEN                  EQU 205          ; 0XCD
GLOBAL	SYSREPEATTEMP1
 SYSREPEATTEMP1                   EQU 206          ; 0XCE
GLOBAL	SYSREPEATTEMP2
 SYSREPEATTEMP2                   EQU 207          ; 0XCF
GLOBAL	SYSREPEATTEMP2_H
 SYSREPEATTEMP2_H                 EQU 208          ; 0XD0
GLOBAL	SYSSIGNBYTE
 SYSSIGNBYTE                      EQU 125          ; 0X7D
GLOBAL	SYSSTRDATA
 SYSSTRDATA                       EQU 209          ; 0XD1
GLOBAL	SYSSTRINGA
 SYSSTRINGA                       EQU 119          ; 0X77
GLOBAL	SYSSTRINGA_H
 SYSSTRINGA_H                     EQU 120          ; 0X78
GLOBAL	SYSSTRINGLENGTH
 SYSSTRINGLENGTH                  EQU 118          ; 0X76
GLOBAL	SYSSTRINGTEMP
 SYSSTRINGTEMP                    EQU 210          ; 0XD2
GLOBAL	SYSSTRLEN
 SYSSTRLEN                        EQU 211          ; 0XD3
GLOBAL	SYSSYSINSTRING3HANDLER
 SYSSYSINSTRING3HANDLER           EQU 212          ; 0XD4
GLOBAL	SYSSYSINSTRING3HANDLER_H
 SYSSYSINSTRING3HANDLER_H         EQU 213          ; 0XD5
GLOBAL	SYSSYSINSTRINGHANDLER
 SYSSYSINSTRINGHANDLER            EQU 214          ; 0XD6
GLOBAL	SYSSYSINSTRINGHANDLER_H
 SYSSYSINSTRINGHANDLER_H          EQU 215          ; 0XD7
GLOBAL	SYSTEMP1
 SYSTEMP1                         EQU 216          ; 0XD8
GLOBAL	SYSTEMP1_E
 SYSTEMP1_E                       EQU 219          ; 0XDB
GLOBAL	SYSTEMP1_H
 SYSTEMP1_H                       EQU 217          ; 0XD9
GLOBAL	SYSTEMP1_U
 SYSTEMP1_U                       EQU 218          ; 0XDA
GLOBAL	SYSTEMP2
 SYSTEMP2                         EQU 220          ; 0XDC
GLOBAL	SYSTEMP2_H
 SYSTEMP2_H                       EQU 221          ; 0XDD
GLOBAL	SYSTEMP3
 SYSTEMP3                         EQU 222          ; 0XDE
GLOBAL	SYSVALTEMP
 SYSVALTEMP                       EQU 223          ; 0XDF
GLOBAL	SYSVALTEMP_H
 SYSVALTEMP_H                     EQU 224          ; 0XE0
GLOBAL	SYSWAITTEMPMS
 SYSWAITTEMPMS                    EQU 114          ; 0X72
GLOBAL	SYSWAITTEMPMS_H
 SYSWAITTEMPMS_H                  EQU 115          ; 0X73
GLOBAL	SYSWAITTEMPS
 SYSWAITTEMPS                     EQU 116          ; 0X74
GLOBAL	SYSWAITTEMPUS
 SYSWAITTEMPUS                    EQU 117          ; 0X75
GLOBAL	SYSWAITTEMPUS_H
 SYSWAITTEMPUS_H                  EQU 118          ; 0X76
GLOBAL	SYSWORDTEMPA
 SYSWORDTEMPA                     EQU 117          ; 0X75
GLOBAL	SYSWORDTEMPA_H
 SYSWORDTEMPA_H                   EQU 118          ; 0X76
GLOBAL	SYSWORDTEMPB
 SYSWORDTEMPB                     EQU 121          ; 0X79
GLOBAL	SYSWORDTEMPB_H
 SYSWORDTEMPB_H                   EQU 122          ; 0X7A
GLOBAL	SYSWORDTEMPX
 SYSWORDTEMPX                     EQU 112          ; 0X70
GLOBAL	SYSWORDTEMPX_H
 SYSWORDTEMPX_H                   EQU 113          ; 0X71
GLOBAL	WORDNUMBER
 WORDNUMBER                       EQU 225          ; 0XE1
GLOBAL	WORDNUMBER_H
 WORDNUMBER_H                     EQU 226          ; 0XE2
GLOBAL	XCHAR
 XCHAR                            EQU 227          ; 0XE3
GLOBAL	XOFFSET
 XOFFSET                          EQU 228          ; 0XE4
GLOBAL	XOFFSET_H
 XOFFSET_H                        EQU 229          ; 0XE5
GLOBAL	XRADIUS
 XRADIUS                          EQU 230          ; 0XE6
GLOBAL	XRADIUS_H
 XRADIUS_H                        EQU 231          ; 0XE7
GLOBAL	YCALC1
 YCALC1                           EQU 232          ; 0XE8
GLOBAL	YCALC1_H
 YCALC1_H                         EQU 233          ; 0XE9
GLOBAL	YCALC2
 YCALC2                           EQU 234          ; 0XEA
GLOBAL	YCALC2_H
 YCALC2_H                         EQU 235          ; 0XEB
GLOBAL	YOFFSET
 YOFFSET                          EQU 236          ; 0XEC
GLOBAL	YOFFSET_H
 YOFFSET_H                        EQU 237          ; 0XED
GLOBAL	YORDINATE
 YORDINATE                        EQU 238          ; 0XEE
GLOBAL	_HEXPICAS
 _HEXPICAS                        EQU 10108          ; 0X277C

;********************************************************************************

;ALIAS VARIABLES
GLOBAL	AFSR0
 AFSR0                            EQU 4
GLOBAL	AFSR0_H
 AFSR0_H                          EQU 5
GLOBAL	SYSPAD_0
 SYSPAD_0                         EQU 3134
GLOBAL	SYSSSD1331_COMMAND_0
 SYSSSD1331_COMMAND_0             EQU 3121
GLOBAL	SYSSSD1331_COMMAND_1
 SYSSSD1331_COMMAND_1             EQU 3122
GLOBAL	SYSSSD1331_COMMAND_10
 SYSSSD1331_COMMAND_10            EQU 3131
GLOBAL	SYSSSD1331_COMMAND_2
 SYSSSD1331_COMMAND_2             EQU 3123
GLOBAL	SYSSSD1331_COMMAND_3
 SYSSSD1331_COMMAND_3             EQU 3124
GLOBAL	SYSSSD1331_COMMAND_4
 SYSSSD1331_COMMAND_4             EQU 3125
GLOBAL	SYSSSD1331_COMMAND_5
 SYSSSD1331_COMMAND_5             EQU 3126
GLOBAL	SYSSSD1331_COMMAND_6
 SYSSSD1331_COMMAND_6             EQU 3127
GLOBAL	SYSSSD1331_COMMAND_7
 SYSSSD1331_COMMAND_7             EQU 3128
GLOBAL	SYSSSD1331_COMMAND_8
 SYSSSD1331_COMMAND_8             EQU 3129
GLOBAL	SYSSSD1331_COMMAND_9
 SYSSSD1331_COMMAND_9             EQU 3130
GLOBAL	SYSSTR_0
 SYSSTR_0                         EQU 3104
GLOBAL	SYS_HEXPICAS_0
 SYS_HEXPICAS_0                   EQU 3052
GLOBAL	SYS_HEXPICAS_1
 SYS_HEXPICAS_1                   EQU 3053
GLOBAL	SYS_HEXPICAS_2
 SYS_HEXPICAS_2                   EQU 3054

;********************************************************************************

 PSECT   PROGMEM0,delta=2, abs
 RESETVEC:
;VECTORS
	ORG	0
	PAGESEL	BASPROGRAMSTART
	GOTO	BASPROGRAMSTART
	ORG	4
	RETFIE

;********************************************************************************

;START OF PROGRAM MEMORY PAGE 0
	ORG	5
GLOBAL	BASPROGRAMSTART
BASPROGRAMSTART:
;CALL INITIALISATION ROUTINES
	CALL	INITSYS
	CALL	INITPPS
	CALL	INITGLCD_SSD1331
	PAGESEL	$

;START OF THE MAIN PROGRAM
;''A demonstration program for GCBASIC.
;''--------------------------------------------------------------------------------------------------------------------------------
;''This program is a simple GLCD demonstration of the SPI capabilities using an GLCD SSD1331.
;''It is a nice graphical LCD, suitable for a lot of various projects.
;''This program draws lines, boxes, circles and prints strings and numbers.
;''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
;'':
;''This has been tested using the hardware and software SPI option.  If you change from hardware SPI when using PPS, you will need to power cycle the chip.
;'':
;'':
;''@author  EvanV
;''@licence GPL
;''@version 1.0
;''@date    31.11.2022
;''********************************************************************************
;Chip Settings
;' -------------------PORTA----------------
;' Bit#:  -7---6---5---4---3---2---1---0---
;' IO:   -------------SDO-SW------SCK-ADC--
;'-----------------------------------------
;'
;' -------------------PORTB----------------
;' Bit#:  -7---6---5---4---3---2---1---0---
;' IO:    ---------------------------------
;'-----------------------------------------
;'
;' ------------------PORTC-----------------
;' Bit#:  -7---6---5---4---3---2---1---0---
;' IO:    ----TX---------LED--RST--CS--DC--
;'-----------------------------------------s
;Template comment at the start of the config file
;
;Template comment at the end of the config file
;This is a PPS chip, so, needs to make the PPS match these assignments
;Pin mappings for GLCD
;
;Uncomment out the next line... enable or disable the PPS!!!
;
;
;
;' ********************** DEMO REALLY STARTS HERE ************************************************
;GLCD selected OLED font set.
;GLCDfntDefaultsize = 1
	MOVLW	1
	MOVWF	GLCDFNTDEFAULTSIZE
;GLCDCLS  ' supports GLCDBackground as default
;GLCDCLS  also support passing color parameter.
;GLCDCLS [color]
;GLCDRotate ( Landscape )
;
;Dim CCOUNT, BYTENUMBER, OLDFONT, OLDFONT as Byte
;CCount = 31
	MOVLW	31
	MOVWF	CCOUNT
;dim longNumber as long
;longNumber = 0 ' max value = 4294967290
	BANKSEL	LONGNUMBER
	CLRF	LONGNUMBER
	CLRF	LONGNUMBER_H
	CLRF	LONGNUMBER_U
	CLRF	LONGNUMBER_E
;dim wordNumber as Word
;dim outstring as string
;wordNumber = 0
	CLRF	WORDNUMBER
	CLRF	WORDNUMBER_H
;byteNumber = 0
	BANKSEL	BYTENUMBER
	CLRF	BYTENUMBER
;GLCDSetContrast ( 0x80 )
	MOVLW	128
	MOVWF	DIM_STATE
	FCALL	SETCONTRAST_SSD1331
;SetPowerMode_SSD1331(0x1A)                    'Explicit commmands for this device
	MOVLW	26
	MOVWF	DIM_STATE
	FCALL	SETPOWERMODE_SSD1331
;SetBrightness_SSD1331( 0xFF )                 'Explicit commmands for this device - full brightness
	MOVLW	255
	MOVWF	DIM_STATE
	FCALL	SETBRIGHTNESS_SSD1331
;GLCDPrintStringLN "Great Cow BASIC"
	MOVLW	LOW STRINGTABLE1
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE1) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINTSTRINGLN
;GLCDPrintStringLN ""
	MOVLW	LOW STRINGTABLE2
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE2) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINTSTRINGLN
;GLCDPrintStringLN "2022"
	MOVLW	LOW STRINGTABLE3
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE3) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINTSTRINGLN
;GLCDPrintStringLN "SSD1331 GLCD"
	MOVLW	LOW STRINGTABLE4
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE4) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINTSTRINGLN
;GLCDPrintStringLN ""
	MOVLW	LOW STRINGTABLE2
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE2) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINTSTRINGLN
;GLCDPrintStringLN "by Anobium"
	MOVLW	LOW STRINGTABLE5
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE5) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINTSTRINGLN
;wait 5 s
	MOVLW	5
	MOVWF	SYSWAITTEMPS
	FCALL	DELAY_S
;repeat 2
	MOVLW	2
	BANKSEL	SYSREPEATTEMP1
	MOVWF	SYSREPEATTEMP1
GLOBAL	SYSREPEATLOOP1
SYSREPEATLOOP1:
;GLCDRotate ( Landscape )
	MOVLW	1
	MOVWF	SSD1331ROTATION
	BANKSEL	STATUS
	FCALL	GLCDROTATE_SSD1331
;GLCDCLS SSD1331_BLUE
	MOVLW	31
	MOVWF	GLCDBACKGROUND
	CLRF	GLCDBACKGROUND_H
	FCALL	GLCDCLS_SSD1331
;GLCDForeground = SSD1331_MAROON
	CLRF	GLCDFOREGROUND
	MOVLW	128
	MOVWF	GLCDFOREGROUND_H
;GLCDPrint ( 2, 2, "GLCDPrint String" )
	MOVLW	2
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	2
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVLW	LOW STRINGTABLE6
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE6) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINT4
;GLCDForeground = SSD1331_WHITE
	MOVLW	255
	MOVWF	GLCDFOREGROUND
	MOVWF	GLCDFOREGROUND_H
;GLCDPrint ( 2, 12, "GLCDPrint String" )
	MOVLW	2
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	12
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVLW	LOW STRINGTABLE6
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE6) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINT4
;GLCDForeground = SSD1331_RED
	CLRF	GLCDFOREGROUND
	MOVLW	248
	MOVWF	GLCDFOREGROUND_H
;GLCDPrint ( 2,30, "GLCDPrint String" )
	MOVLW	2
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	30
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVLW	LOW STRINGTABLE6
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE6) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINT4
;FilledBox 50,40,55,45,SSD1331_RED
	MOVLW	50
	MOVWF	LINEX1
	CLRF	LINEX1_H
	MOVLW	40
	MOVWF	LINEY1
	CLRF	LINEY1_H
	MOVLW	55
	MOVWF	LINEX2
	CLRF	LINEX2_H
	MOVLW	45
	MOVWF	LINEY2
	CLRF	LINEY2_H
	CLRF	LINECOLOUR
	MOVLW	248
	MOVWF	LINECOLOUR_H
	FCALL	FILLEDBOX_SSD1331
;wait 2 s
	MOVLW	2
	MOVWF	SYSWAITTEMPS
	FCALL	DELAY_S
;longNumber = 0xFFFFFFFF
	MOVLW	255
	BANKSEL	LONGNUMBER
	MOVWF	LONGNUMBER
	MOVWF	LONGNUMBER_H
	MOVWF	LONGNUMBER_U
	MOVWF	LONGNUMBER_E
;wordNumber = 0xFFFF
	MOVLW	255
	MOVWF	WORDNUMBER
	MOVWF	WORDNUMBER_H
;byteNumber = 0xFF
	MOVLW	255
	BANKSEL	BYTENUMBER
	MOVWF	BYTENUMBER
;GLCDRotate ( Portrait )
	MOVLW	4
	BANKSEL	SSD1331ROTATION
	MOVWF	SSD1331ROTATION
	BANKSEL	STATUS
	FCALL	GLCDROTATE_SSD1331
;GLCDCLS SSD1331_RED
	CLRF	GLCDBACKGROUND
	MOVLW	248
	MOVWF	GLCDBACKGROUND_H
	FCALL	GLCDCLS_SSD1331
;GLCDForeground = SSD1331_MAROON
	CLRF	GLCDFOREGROUND
	MOVLW	128
	MOVWF	GLCDFOREGROUND_H
;GLCDPrint ( 2, 2, bytenumber )
	MOVLW	2
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	2
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	BANKSEL	BYTENUMBER
	MOVF	BYTENUMBER,W
	MOVWF	LCDVALUE
	CLRF	LCDVALUE_H
	CLRF	LCDVALUE_U
	CLRF	LCDVALUE_E
	FCALL	GLCDPRINT7
;GLCDForeground = SSD1331_BLACK
	CLRF	GLCDFOREGROUND
	CLRF	GLCDFOREGROUND_H
;GLCDPrint ( 2, 12, wordNumber )
	MOVLW	2
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	12
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVF	WORDNUMBER,W
	BANKSEL	LCDVALUE
	MOVWF	LCDVALUE
	BANKSEL	WORDNUMBER_H
	MOVF	WORDNUMBER_H,W
	BANKSEL	LCDVALUE_H
	MOVWF	LCDVALUE_H
	CLRF	LCDVALUE_U
	CLRF	LCDVALUE_E
	FCALL	GLCDPRINT7
;GLCDForeground = SSD1331_CYAN
	MOVLW	255
	MOVWF	GLCDFOREGROUND
	MOVLW	7
	MOVWF	GLCDFOREGROUND_H
;GLCDPrint ( 2,30, longnumber )
	MOVLW	2
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	30
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVF	LONGNUMBER,W
	BANKSEL	LCDVALUE
	MOVWF	LCDVALUE
	BANKSEL	LONGNUMBER_H
	MOVF	LONGNUMBER_H,W
	BANKSEL	LCDVALUE_H
	MOVWF	LCDVALUE_H
	BANKSEL	LONGNUMBER_U
	MOVF	LONGNUMBER_U,W
	BANKSEL	LCDVALUE_U
	MOVWF	LCDVALUE_U
	BANKSEL	LONGNUMBER_E
	MOVF	LONGNUMBER_E,W
	BANKSEL	LCDVALUE_E
	MOVWF	LCDVALUE_E
	FCALL	GLCDPRINT7
;wait 2 s
	MOVLW	2
	MOVWF	SYSWAITTEMPS
	FCALL	DELAY_S
;end Repeat
	BANKSEL	SYSREPEATTEMP1
	DECFSZ	SYSREPEATTEMP1,F
	GOTO	SYSREPEATLOOP1
GLOBAL	SYSREPEATLOOPEND1
SYSREPEATLOOPEND1:
;GLCDCLS SSD1331_BLUE
	MOVLW	31
	BANKSEL	GLCDBACKGROUND
	MOVWF	GLCDBACKGROUND
	CLRF	GLCDBACKGROUND_H
	FCALL	GLCDCLS_SSD1331
;GLCDRotate ( Landscape )
	MOVLW	1
	BANKSEL	SSD1331ROTATION
	MOVWF	SSD1331ROTATION
	BANKSEL	STATUS
	FCALL	GLCDROTATE_SSD1331
;GLCDForeground = SSD1331_White
	MOVLW	255
	MOVWF	GLCDFOREGROUND
	MOVWF	GLCDFOREGROUND_H
;Prepare the static components of the screen
;GLCDPrint ( 2,   2, "SSD1331 Library")                         ; Print some text
	MOVLW	2
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	2
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVLW	LOW STRINGTABLE7
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE7) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINT4
;GLCDPrint ( 2,   9, "PrintStr")                                ; Print some text
	MOVLW	2
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	9
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVLW	LOW STRINGTABLE8
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE8) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINT4
;GLCDPrint ( 64,  2, ChipMhz)                                   ; Print chip speed
	MOVLW	64
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	2
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVLW	32
	BANKSEL	LCDVALUE
	MOVWF	LCDVALUE
	CLRF	LCDVALUE_H
	CLRF	LCDVALUE_U
	CLRF	LCDVALUE_E
	FCALL	GLCDPRINT7
;GLCDPrint ( 74,  2, "Mhz")                                     ; Print some text
	MOVLW	74
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	2
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVLW	LOW STRINGTABLE9
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	(HIGH STRINGTABLE9) | 128
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINT4
;GLCDDrawString( 2,18,"DrawStr")                                ; Draw some text
	MOVLW	2
	BANKSEL	STRINGLOCX
	MOVWF	STRINGLOCX
	CLRF	STRINGLOCX_H
	MOVLW	18
	BANKSEL	CHARLOCY
	MOVWF	CHARLOCY
	CLRF	CHARLOCY_H
	MOVLW	LOW STRINGTABLE10
	BANKSEL	SYSCHARSHANDLER
	MOVWF	SYSCHARSHANDLER
	MOVLW	(HIGH STRINGTABLE10) | 128
	MOVWF	SYSCHARSHANDLER_H
	BANKSEL	GLCDFOREGROUND
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	FCALL	GLCDDRAWSTRING_SSD1331
;box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1                            ; Draw a box
	CLRF	LINEX1
	CLRF	LINEX1_H
	CLRF	LINEY1
	CLRF	LINEY1_H
	MOVLW	95
	MOVWF	LINEX2
	CLRF	LINEX2_H
	MOVLW	63
	MOVWF	LINEY2
	CLRF	LINEY2_H
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	FCALL	BOX
;box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1    ; Draw a box
	MOVLW	91
	MOVWF	LINEX1
	CLRF	LINEX1_H
	MOVLW	59
	MOVWF	LINEY1
	CLRF	LINEY1_H
	MOVLW	95
	MOVWF	LINEX2
	CLRF	LINEX2_H
	MOVLW	63
	MOVWF	LINEY2
	CLRF	LINEY2_H
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	FCALL	BOX
;Circle( 32,41,10)                                              ; Draw a circle
	MOVLW	32
	BANKSEL	XOFFSET
	MOVWF	XOFFSET
	CLRF	XOFFSET_H
	MOVLW	41
	MOVWF	YOFFSET
	CLRF	YOFFSET_H
	MOVLW	10
	BANKSEL	INXRADIUS
	MOVWF	INXRADIUS
	CLRF	INXRADIUS_H
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	MOVF	GLCD_YORDINATE,W
	BANKSEL	YORDINATE
	MOVWF	YORDINATE
	BANKSEL	STATUS
	FCALL	CIRCLE
;line 50,31,0,31                                                ; Draw a line
	MOVLW	50
	MOVWF	LINEX1
	CLRF	LINEX1_H
	MOVLW	31
	MOVWF	LINEY1
	CLRF	LINEY1_H
	CLRF	LINEX2
	CLRF	LINEX2_H
	MOVLW	31
	MOVWF	LINEY2
	CLRF	LINEY2_H
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	FCALL	_LINE
;DO forever
GLOBAL	SYSDOLOOP_S1
SYSDOLOOP_S1:
;for CCount = 32 to 127
;LEGACY METHOD
	MOVLW	31
	MOVWF	CCOUNT
GLOBAL	SYSFORLOOP1
SYSFORLOOP1:
	INCF	CCOUNT,F
;outstring = hex(longNumber_E )
	BANKSEL	LONGNUMBER_E
	MOVF	LONGNUMBER_E,W
	MOVWF	SYSVALTEMP
	BANKSEL	STATUS
	FCALL	FN__HEXPICAS
	MOVLW	LOW OUTSTRING
	MOVWF	FSR1L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR1H
	MOVLW	LOW _HEXPICAS
	MOVWF	FSR0L
	MOVLW	HIGH _HEXPICAS
	MOVWF	FSR0H
	FCALL	SYSCOPYSTRING
;outstring = outstring+hex(longNumber_E )
	BANKSEL	LONGNUMBER_E
	MOVF	LONGNUMBER_E,W
	MOVWF	SYSVALTEMP
	BANKSEL	STATUS
	FCALL	FN__HEXPICAS
	MOVLW	LOW OUTSTRING
	MOVWF	FSR1L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR1H
	CLRF	SYSSTRINGLENGTH
	MOVLW	LOW OUTSTRING
	MOVWF	FSR0L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR0H
	FCALL	SYSCOPYSTRINGPART
	MOVLW	LOW _HEXPICAS
	MOVWF	FSR0L
	MOVLW	HIGH _HEXPICAS
	MOVWF	FSR0H
	FCALL	SYSCOPYSTRINGPART
	MOVLW	LOW OUTSTRING
	MOVWF	FSR0L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR0H
	MOVF	SYSSTRINGLENGTH,W
	MOVWF	INDF0
;outstring = outstring+hex(longNumber_H )
	BANKSEL	LONGNUMBER_H
	MOVF	LONGNUMBER_H,W
	MOVWF	SYSVALTEMP
	BANKSEL	STATUS
	FCALL	FN__HEXPICAS
	MOVLW	LOW OUTSTRING
	MOVWF	FSR1L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR1H
	CLRF	SYSSTRINGLENGTH
	MOVLW	LOW OUTSTRING
	MOVWF	FSR0L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR0H
	FCALL	SYSCOPYSTRINGPART
	MOVLW	LOW _HEXPICAS
	MOVWF	FSR0L
	MOVLW	HIGH _HEXPICAS
	MOVWF	FSR0H
	FCALL	SYSCOPYSTRINGPART
	MOVLW	LOW OUTSTRING
	MOVWF	FSR0L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR0H
	MOVF	SYSSTRINGLENGTH,W
	MOVWF	INDF0
;outstring = outstring+hex(longNumber )
	BANKSEL	LONGNUMBER
	MOVF	LONGNUMBER,W
	MOVWF	SYSVALTEMP
	BANKSEL	STATUS
	FCALL	FN__HEXPICAS
	MOVLW	LOW OUTSTRING
	MOVWF	FSR1L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR1H
	CLRF	SYSSTRINGLENGTH
	MOVLW	LOW OUTSTRING
	MOVWF	FSR0L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR0H
	FCALL	SYSCOPYSTRINGPART
	MOVLW	LOW _HEXPICAS
	MOVWF	FSR0L
	MOVLW	HIGH _HEXPICAS
	MOVWF	FSR0H
	FCALL	SYSCOPYSTRINGPART
	MOVLW	LOW OUTSTRING
	MOVWF	FSR0L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR0H
	MOVF	SYSSTRINGLENGTH,W
	MOVWF	INDF0
;outstring = outstring+"h"
	MOVLW	LOW OUTSTRING
	MOVWF	FSR1L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR1H
	CLRF	SYSSTRINGLENGTH
	MOVLW	LOW OUTSTRING
	MOVWF	FSR0L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR0H
	FCALL	SYSCOPYSTRINGPART
	MOVLW	LOW STRINGTABLE11
	MOVWF	SYSSTRINGA
	MOVLW	(HIGH STRINGTABLE11) & 127
	MOVWF	SYSSTRINGA_H
	FCALL	SYSREADSTRINGPART
	MOVLW	LOW OUTSTRING
	MOVWF	FSR0L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR0H
	MOVF	SYSSTRINGLENGTH,W
	MOVWF	INDF0
;GLCDPrint ( 46 ,  36,  Outstring  )                        ; Print a HEX string
	MOVLW	46
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	36
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVLW	LOW OUTSTRING
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	HIGH OUTSTRING
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINT4
;GLCDPrint ( 46 ,  44, pad(str(wordNumber), 30 ) )          ; Print a padded string
	MOVLW	46
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	44
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	MOVF	WORDNUMBER,W
	MOVWF	SYSVALTEMP
	MOVF	WORDNUMBER_H,W
	MOVWF	SYSVALTEMP_H
	BANKSEL	STATUS
	FCALL	FN_STR
	MOVLW	LOW STR
	BANKSEL	SYSSYSINSTRINGHANDLER
	MOVWF	SYSSYSINSTRINGHANDLER
	MOVLW	HIGH STR
	MOVWF	SYSSYSINSTRINGHANDLER_H
	MOVLW	30
	MOVWF	SYSSTRLEN
	MOVLW	LOW STRINGTABLE59
	MOVWF	SYSSYSINSTRING3HANDLER
	MOVLW	(HIGH STRINGTABLE59) | 128
	MOVWF	SYSSYSINSTRING3HANDLER_H
	BANKSEL	STATUS
	FCALL	FN_PAD
	MOVLW	LOW PAD
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	HIGH PAD
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINT4
;GLCDPrint ( 46 ,  52, pad(str(byteNumber), 30 ) )          ; Print a padded string
	MOVLW	46
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	CLRF	PRINTLOCX_H
	MOVLW	52
	MOVWF	PRINTLOCY
	CLRF	PRINTLOCY_H
	BANKSEL	BYTENUMBER
	MOVF	BYTENUMBER,W
	BANKSEL	SYSVALTEMP
	MOVWF	SYSVALTEMP
	CLRF	SYSVALTEMP_H
	BANKSEL	STATUS
	FCALL	FN_STR
	MOVLW	LOW STR
	BANKSEL	SYSSYSINSTRINGHANDLER
	MOVWF	SYSSYSINSTRINGHANDLER
	MOVLW	HIGH STR
	MOVWF	SYSSYSINSTRINGHANDLER_H
	MOVLW	30
	MOVWF	SYSSTRLEN
	MOVLW	LOW STRINGTABLE59
	MOVWF	SYSSYSINSTRING3HANDLER
	MOVLW	(HIGH STRINGTABLE59) | 128
	MOVWF	SYSSYSINSTRING3HANDLER_H
	BANKSEL	STATUS
	FCALL	FN_PAD
	MOVLW	LOW PAD
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVLW	HIGH PAD
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	FCALL	GLCDPRINT4
;box (46,19,56,28)                                          ; Draw a Box
	MOVLW	46
	MOVWF	LINEX1
	CLRF	LINEX1_H
	MOVLW	19
	MOVWF	LINEY1
	CLRF	LINEY1_H
	MOVLW	56
	MOVWF	LINEX2
	CLRF	LINEX2_H
	MOVLW	28
	MOVWF	LINEY2
	CLRF	LINEY2_H
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	FCALL	BOX
;filledbox (47,20,55,27,SSD1331_BLUE)                       ; Draw a Box
	MOVLW	47
	MOVWF	LINEX1
	CLRF	LINEX1_H
	MOVLW	20
	MOVWF	LINEY1
	CLRF	LINEY1_H
	MOVLW	55
	MOVWF	LINEX2
	CLRF	LINEX2_H
	MOVLW	27
	MOVWF	LINEY2
	CLRF	LINEY2_H
	MOVLW	31
	MOVWF	LINECOLOUR
	CLRF	LINECOLOUR_H
	FCALL	FILLEDBOX_SSD1331
;GLCDDrawChar(49, 20, CCount )                              ; Draw a character
	MOVLW	49
	MOVWF	CHARLOCX
	CLRF	CHARLOCX_H
	MOVLW	20
	MOVWF	CHARLOCY
	CLRF	CHARLOCY_H
	MOVF	CCOUNT,W
	MOVWF	CHARCODE
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	FCALL	GLCDDRAWCHAR_SSD1331
;outString = str( CCount )                                  ; Prepare a string
	MOVF	CCOUNT,W
	BANKSEL	SYSVALTEMP
	MOVWF	SYSVALTEMP
	CLRF	SYSVALTEMP_H
	BANKSEL	STATUS
	FCALL	FN_STR
	MOVLW	LOW OUTSTRING
	MOVWF	FSR1L
	MOVLW	HIGH OUTSTRING
	MOVWF	FSR1H
	MOVLW	LOW STR
	MOVWF	FSR0L
	MOVLW	HIGH STR
	MOVWF	FSR0H
	FCALL	SYSCOPYSTRING
;GLCDDrawString(64, 19, pad(outString,5) )                  ; Draw a string
	MOVLW	64
	BANKSEL	STRINGLOCX
	MOVWF	STRINGLOCX
	CLRF	STRINGLOCX_H
	MOVLW	19
	BANKSEL	CHARLOCY
	MOVWF	CHARLOCY
	CLRF	CHARLOCY_H
	MOVLW	LOW OUTSTRING
	BANKSEL	SYSSYSINSTRINGHANDLER
	MOVWF	SYSSYSINSTRINGHANDLER
	MOVLW	HIGH OUTSTRING
	MOVWF	SYSSYSINSTRINGHANDLER_H
	MOVLW	5
	MOVWF	SYSSTRLEN
	MOVLW	LOW STRINGTABLE59
	MOVWF	SYSSYSINSTRING3HANDLER
	MOVLW	(HIGH STRINGTABLE59) | 128
	MOVWF	SYSSYSINSTRING3HANDLER_H
	BANKSEL	STATUS
	FCALL	FN_PAD
	MOVLW	LOW PAD
	BANKSEL	SYSCHARSHANDLER
	MOVWF	SYSCHARSHANDLER
	MOVLW	HIGH PAD
	MOVWF	SYSCHARSHANDLER_H
	BANKSEL	GLCDFOREGROUND
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	FCALL	GLCDDRAWSTRING_SSD1331
;filledbox 3,43,11,51, wordNumber                           ; Draw a filled box
	MOVLW	3
	MOVWF	LINEX1
	CLRF	LINEX1_H
	MOVLW	43
	MOVWF	LINEY1
	CLRF	LINEY1_H
	MOVLW	11
	MOVWF	LINEX2
	CLRF	LINEX2_H
	MOVLW	51
	MOVWF	LINEY2
	CLRF	LINEY2_H
	BANKSEL	WORDNUMBER
	MOVF	WORDNUMBER,W
	BANKSEL	LINECOLOUR
	MOVWF	LINECOLOUR
	BANKSEL	WORDNUMBER_H
	MOVF	WORDNUMBER_H,W
	BANKSEL	LINECOLOUR_H
	MOVWF	LINECOLOUR_H
	FCALL	FILLEDBOX_SSD1331
;FilledCircle( 32,41,8, longNumber )                   ; Draw a filled box
	MOVLW	32
	BANKSEL	XOFFSET
	MOVWF	XOFFSET
	CLRF	XOFFSET_H
	MOVLW	41
	MOVWF	YOFFSET
	CLRF	YOFFSET_H
	MOVLW	8
	MOVWF	XRADIUS
	CLRF	XRADIUS_H
	MOVF	LONGNUMBER,W
	BANKSEL	LINECOLOUR
	MOVWF	LINECOLOUR
	BANKSEL	LONGNUMBER_H
	MOVF	LONGNUMBER_H,W
	BANKSEL	LINECOLOUR_H
	MOVWF	LINECOLOUR_H
	FCALL	FILLEDCIRCLE
;line 0,63,50,31                                            ; Draw a line
	CLRF	LINEX1
	CLRF	LINEX1_H
	MOVLW	63
	MOVWF	LINEY1
	CLRF	LINEY1_H
	MOVLW	50
	MOVWF	LINEX2
	CLRF	LINEX2_H
	MOVLW	31
	MOVWF	LINEY2
	CLRF	LINEY2_H
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	FCALL	_LINE
;Do some simple maths
;longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
	MOVLW	7
	BANKSEL	LONGNUMBER
	ADDWF	LONGNUMBER,F
	MOVLW	0
	ADDWFC	LONGNUMBER_H,F
	MOVLW	0
	ADDWFC	LONGNUMBER_U,F
	MOVLW	0
	ADDWFC	LONGNUMBER_E,F
;longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
	MOVLW	3
	ADDWF	WORDNUMBER,F
	MOVLW	0
	ADDWFC	WORDNUMBER_H,F
;longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
	BANKSEL	BYTENUMBER
	INCF	BYTENUMBER,F
;wait 25 ms
	MOVLW	25
	MOVWF	SYSWAITTEMPMS
	CLRF	SYSWAITTEMPMS_H
	FCALL	DELAY_MS
;NEXT
	MOVLW	127
	SUBWF	CCOUNT,W
	BTFSS	STATUS,0
	GOTO	SYSFORLOOP1
GLOBAL	SYSFORLOOPEND1
SYSFORLOOPEND1:
;LOOP
	GOTO	SYSDOLOOP_S1
GLOBAL	SYSDOLOOP_E1
SYSDOLOOP_E1:
;end
	GOTO	BASPROGRAMEND
GLOBAL	BASPROGRAMEND
BASPROGRAMEND:
	SLEEP
	GOTO	BASPROGRAMEND

;********************************************************************************

;SOURCE: GLCD.H (1569)
GLOBAL	FILLEDCIRCLE
FILLEDCIRCLE:
;Circle fill Code is merely a modification of the midpoint
;circle algorithem which is an adaption of Bresenham's line algorithm
;http://en.wikipedia.org/wiki/Midpoint_circle_algorithm
;http://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm
;dim ff, ddF_x, ddF_y as integer
;dim YCalc2, YCalc1 as word
;ff = 1 - xradius
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	SUBLW	1
	BANKSEL	FF
	MOVWF	FF
	MOVLW	0
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	MOVF	XRADIUS_H,W
	SUBWFB	SYSTEMP3,W
	BANKSEL	FF_H
	MOVWF	FF_H
;ddF_x = 1
	MOVLW	1
	MOVWF	DDF_X
	CLRF	DDF_X_H
;ddF_y = -2 * xradius
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	XRADIUS_H,W
	MOVWF	SYSINTEGERTEMPA_H
	MOVLW	254
	MOVWF	SYSINTEGERTEMPB
	MOVLW	255
	MOVWF	SYSINTEGERTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSMULTSUBINT
	MOVF	SYSINTEGERTEMPX,W
	MOVWF	DDF_Y
	MOVF	SYSINTEGERTEMPX_H,W
	MOVWF	DDF_Y_H
;FillCircleXX = 0
	CLRF	FILLCIRCLEXX
;FillCircleYY = xradius
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	BANKSEL	FILLCIRCLEYY
	MOVWF	FILLCIRCLEYY
;Fill in the center between the two halves
;YCalc2 = yoffset+xradius
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	ADDWF	YOFFSET,W
	MOVWF	YCALC2
	MOVF	XRADIUS_H,W
	ADDWFC	YOFFSET_H,W
	MOVWF	YCALC2_H
;YCalc1 = yoffset-xradius
	MOVF	XRADIUS,W
	SUBWF	YOFFSET,W
	MOVWF	YCALC1
	MOVF	XRADIUS_H,W
	SUBWFB	YOFFSET_H,W
	MOVWF	YCALC1_H
;Line( xoffset, YCalc1 , xoffset, YCalc2, LineColour)
	MOVF	XOFFSET,W
	BANKSEL	LINEX1
	MOVWF	LINEX1
	BANKSEL	XOFFSET_H
	MOVF	XOFFSET_H,W
	BANKSEL	LINEX1_H
	MOVWF	LINEX1_H
	BANKSEL	YCALC1
	MOVF	YCALC1,W
	BANKSEL	LINEY1
	MOVWF	LINEY1
	BANKSEL	YCALC1_H
	MOVF	YCALC1_H,W
	BANKSEL	LINEY1_H
	MOVWF	LINEY1_H
	BANKSEL	XOFFSET
	MOVF	XOFFSET,W
	BANKSEL	LINEX2
	MOVWF	LINEX2
	BANKSEL	XOFFSET_H
	MOVF	XOFFSET_H,W
	BANKSEL	LINEX2_H
	MOVWF	LINEX2_H
	BANKSEL	YCALC2
	MOVF	YCALC2,W
	BANKSEL	LINEY2
	MOVWF	LINEY2
	BANKSEL	YCALC2_H
	MOVF	YCALC2_H,W
	BANKSEL	LINEY2_H
	MOVWF	LINEY2_H
	FCALL	_LINE
;do while (FillCircleXX < FillCircleYY)
GLOBAL	SYSDOLOOP_S4
SYSDOLOOP_S4:
	MOVF	FILLCIRCLEYY,W
	SUBWF	FILLCIRCLEXX,W
	BTFSC	STATUS,0
	GOTO	SYSDOLOOP_E4
;if ff >= 0 then
	MOVF	FF,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	FF_H,W
	MOVWF	SYSINTEGERTEMPA_H
	CLRF	SYSINTEGERTEMPB
	CLRF	SYSINTEGERTEMPB_H
	FCALL	SYSCOMPLESSTHANINT
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF12
;FillCircleYY--
	DECF	FILLCIRCLEYY,F
;ddF_y += 2
	MOVLW	2
	ADDWF	DDF_Y,F
	MOVLW	0
	ADDWFC	DDF_Y_H,F
;ff += ddF_y
	MOVF	DDF_Y,W
	ADDWF	FF,F
	MOVF	DDF_Y_H,W
	ADDWFC	FF_H,F
;end if
GLOBAL	ENDIF12
ENDIF12:
;FillCircleXX++
	INCF	FILLCIRCLEXX,F
;ddF_x += 2
	MOVLW	2
	ADDWF	DDF_X,F
	MOVLW	0
	ADDWFC	DDF_X_H,F
;ff += ddF_x
	MOVF	DDF_X,W
	ADDWF	FF,F
	MOVF	DDF_X_H,W
	ADDWFC	FF_H,F
;Now draw vertical lines between the points on the circle rather than
;draw the points of the circle. This draws lines between the
;perimeter points on the upper and lower quadrants of the 2 halves of the circle.
;Line(xoffset+FillCircleXX, yoffset+FillCircleYY, xoffset+FillCircleXX, yoffset-FillCircleYY, LineColour);
	MOVF	FILLCIRCLEXX,W
	BANKSEL	XOFFSET
	ADDWF	XOFFSET,W
	BANKSEL	LINEX1
	MOVWF	LINEX1
	MOVLW	0
	BANKSEL	XOFFSET_H
	ADDWFC	XOFFSET_H,W
	BANKSEL	LINEX1_H
	MOVWF	LINEX1_H
	MOVF	FILLCIRCLEYY,W
	BANKSEL	YOFFSET
	ADDWF	YOFFSET,W
	BANKSEL	LINEY1
	MOVWF	LINEY1
	MOVLW	0
	BANKSEL	YOFFSET_H
	ADDWFC	YOFFSET_H,W
	BANKSEL	LINEY1_H
	MOVWF	LINEY1_H
	MOVF	FILLCIRCLEXX,W
	BANKSEL	XOFFSET
	ADDWF	XOFFSET,W
	BANKSEL	LINEX2
	MOVWF	LINEX2
	MOVLW	0
	BANKSEL	XOFFSET_H
	ADDWFC	XOFFSET_H,W
	BANKSEL	LINEX2_H
	MOVWF	LINEX2_H
	MOVF	FILLCIRCLEYY,W
	BANKSEL	YOFFSET
	SUBWF	YOFFSET,W
	BANKSEL	LINEY2
	MOVWF	LINEY2
	MOVLW	0
	BANKSEL	YOFFSET_H
	SUBWFB	YOFFSET_H,W
	BANKSEL	LINEY2_H
	MOVWF	LINEY2_H
	FCALL	_LINE
;Line(xoffset-FillCircleXX, yoffset+FillCircleYY, xoffset-FillCircleXX, yoffset-FillCircleYY, LineColour);
	MOVF	FILLCIRCLEXX,W
	BANKSEL	XOFFSET
	SUBWF	XOFFSET,W
	BANKSEL	LINEX1
	MOVWF	LINEX1
	MOVLW	0
	BANKSEL	XOFFSET_H
	SUBWFB	XOFFSET_H,W
	BANKSEL	LINEX1_H
	MOVWF	LINEX1_H
	MOVF	FILLCIRCLEYY,W
	BANKSEL	YOFFSET
	ADDWF	YOFFSET,W
	BANKSEL	LINEY1
	MOVWF	LINEY1
	MOVLW	0
	BANKSEL	YOFFSET_H
	ADDWFC	YOFFSET_H,W
	BANKSEL	LINEY1_H
	MOVWF	LINEY1_H
	MOVF	FILLCIRCLEXX,W
	BANKSEL	XOFFSET
	SUBWF	XOFFSET,W
	BANKSEL	LINEX2
	MOVWF	LINEX2
	MOVLW	0
	BANKSEL	XOFFSET_H
	SUBWFB	XOFFSET_H,W
	BANKSEL	LINEX2_H
	MOVWF	LINEX2_H
	MOVF	FILLCIRCLEYY,W
	BANKSEL	YOFFSET
	SUBWF	YOFFSET,W
	BANKSEL	LINEY2
	MOVWF	LINEY2
	MOVLW	0
	BANKSEL	YOFFSET_H
	SUBWFB	YOFFSET_H,W
	BANKSEL	LINEY2_H
	MOVWF	LINEY2_H
	FCALL	_LINE
;Line(xoffset+FillCircleYY, yoffset+FillCircleXX, FillCircleYY+xoffset, yoffset-FillCircleXX, LineColour);
	MOVF	FILLCIRCLEYY,W
	BANKSEL	XOFFSET
	ADDWF	XOFFSET,W
	BANKSEL	LINEX1
	MOVWF	LINEX1
	MOVLW	0
	BANKSEL	XOFFSET_H
	ADDWFC	XOFFSET_H,W
	BANKSEL	LINEX1_H
	MOVWF	LINEX1_H
	MOVF	FILLCIRCLEXX,W
	BANKSEL	YOFFSET
	ADDWF	YOFFSET,W
	BANKSEL	LINEY1
	MOVWF	LINEY1
	MOVLW	0
	BANKSEL	YOFFSET_H
	ADDWFC	YOFFSET_H,W
	BANKSEL	LINEY1_H
	MOVWF	LINEY1_H
	BANKSEL	XOFFSET
	MOVF	XOFFSET,W
	BANKSEL	FILLCIRCLEYY
	ADDWF	FILLCIRCLEYY,W
	MOVWF	LINEX2
	MOVLW	0
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	MOVF	XOFFSET_H,W
	ADDWFC	SYSTEMP3,W
	BANKSEL	LINEX2_H
	MOVWF	LINEX2_H
	MOVF	FILLCIRCLEXX,W
	BANKSEL	YOFFSET
	SUBWF	YOFFSET,W
	BANKSEL	LINEY2
	MOVWF	LINEY2
	MOVLW	0
	BANKSEL	YOFFSET_H
	SUBWFB	YOFFSET_H,W
	BANKSEL	LINEY2_H
	MOVWF	LINEY2_H
	FCALL	_LINE
;Line(xoffset-FillCircleYY, yoffset+FillCircleXX, xoffset-FillCircleYY, yoffset-FillCircleXX, LineColour);
	MOVF	FILLCIRCLEYY,W
	BANKSEL	XOFFSET
	SUBWF	XOFFSET,W
	BANKSEL	LINEX1
	MOVWF	LINEX1
	MOVLW	0
	BANKSEL	XOFFSET_H
	SUBWFB	XOFFSET_H,W
	BANKSEL	LINEX1_H
	MOVWF	LINEX1_H
	MOVF	FILLCIRCLEXX,W
	BANKSEL	YOFFSET
	ADDWF	YOFFSET,W
	BANKSEL	LINEY1
	MOVWF	LINEY1
	MOVLW	0
	BANKSEL	YOFFSET_H
	ADDWFC	YOFFSET_H,W
	BANKSEL	LINEY1_H
	MOVWF	LINEY1_H
	MOVF	FILLCIRCLEYY,W
	BANKSEL	XOFFSET
	SUBWF	XOFFSET,W
	BANKSEL	LINEX2
	MOVWF	LINEX2
	MOVLW	0
	BANKSEL	XOFFSET_H
	SUBWFB	XOFFSET_H,W
	BANKSEL	LINEX2_H
	MOVWF	LINEX2_H
	MOVF	FILLCIRCLEXX,W
	BANKSEL	YOFFSET
	SUBWF	YOFFSET,W
	BANKSEL	LINEY2
	MOVWF	LINEY2
	MOVLW	0
	BANKSEL	YOFFSET_H
	SUBWFB	YOFFSET_H,W
	BANKSEL	LINEY2_H
	MOVWF	LINEY2_H
	FCALL	_LINE
;loop
	GOTO	SYSDOLOOP_S4
GLOBAL	SYSDOLOOP_E4
SYSDOLOOP_E4:
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (121)
GLOBAL	INITGLCD_SSD1331
INITGLCD_SSD1331:
;Mapped to global variables to same RAM
;dim SSD1331_GLCD_HEIGHT, SSD1331_GLCD_WIDTH as word
;Setup code for SSD1331 controllers
;Pin directions
;Dir SSD1331_CS Out
	BCF	TRISC,1
;Dir SSD1331_DC Out
	BCF	TRISC,0
;Dir SSD1331_RST Out
	BCF	TRISC,2
;Dir SSD1331_DO Out
	BCF	TRISA,4
;Dir SSD1331_SCK Out
	BCF	TRISA,1
;harware SPI mode
;asm showdebug SPI constant used equates to HWSPIMODESCRIPT
;SPIMode HWSPIMODESCRIPT, 0
	MOVLW	13
	BANKSEL	SPICURRENTMODE
	MOVWF	SPICURRENTMODE
	CLRF	SPICLOCKMODE
	BANKSEL	STATUS
	FCALL	SPIMODE705
;Set SSD1331_CS On
	BSF	LATC,1
;Set SSD1331_DC Off
	BCF	LATC,0
;Reset display
;Wait 200 ms
	MOVLW	200
	MOVWF	SYSWAITTEMPMS
	CLRF	SYSWAITTEMPMS_H
	FCALL	DELAY_MS
;Set SSD1331_RST Off
	BCF	LATC,2
;Wait 200 us
	MOVLW	2
	MOVWF	DELAYTEMP2
GLOBAL	DELAYUSO1
DELAYUSO1:
	CLRF	DELAYTEMP
GLOBAL	DELAYUS1
DELAYUS1:
	DECFSZ	DELAYTEMP,F
	GOTO	DELAYUS1
	DECFSZ	DELAYTEMP2,F
	GOTO	DELAYUSO1
	MOVLW	19
	MOVWF	DELAYTEMP
GLOBAL	DELAYUS2
DELAYUS2:
	DECFSZ	DELAYTEMP,F
	GOTO	DELAYUS2
;Set SSD1331_RST On
	BSF	LATC,2
;initialize sequence
;SendCommand_SSD1331(0xAE)    'OLED display OFF
	MOVLW	174
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xAE)    'OLED display OFF
	MOVLW	174
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xAE)    'OLED display OFF
	MOVLW	174
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x75)    ' Set Row Address */
	MOVLW	117
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x00)    ' Start = 0 */
	BANKSEL	SSD1331SENDBYTE
	CLRF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x3F)    ' End = 63 */
	MOVLW	63
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x15)    ' Set Column Address */
	MOVLW	21
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x00)    ' Start = 0 */
	BANKSEL	SSD1331SENDBYTE
	CLRF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x5F)    ' End = 95 */
	MOVLW	95
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xA0)    'Set remap & data format 0111 0000
	MOVLW	160
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x72)    ' RGB colour
	MOVLW	114
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xA1)    'set display start row RAM
	MOVLW	161
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x00)
	BANKSEL	SSD1331SENDBYTE
	CLRF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xA2)    'set display offset
	MOVLW	162
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x00)
	BANKSEL	SSD1331SENDBYTE
	CLRF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xA4)    'Set Display Mode
	MOVLW	164
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xA8)    'Set Multiplex Ratio
	MOVLW	168
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x3F)
	MOVLW	63
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xAD)    'Set Master Configuration
	MOVLW	173
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x8F)    '(External VCC Supply Selected)
	MOVLW	143
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xB0)    'Set Power Saving Mode
	MOVLW	176
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x1A)
	MOVLW	26
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xB1)    'Set Phase 1 & 2 Period Adjustment
	MOVLW	177
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x74)
	MOVLW	116
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xB3)    'Set Display Clock Divide Ratio / Oscillator Frequency
	MOVLW	179
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xD0)
	MOVLW	208
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x8A)    'Set Second Pre-charge Speed of Color A
	MOVLW	138
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x81)
	MOVLW	129
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x8B)    'Set Second Pre-charge Speed of Color B
	MOVLW	139
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x82)
	MOVLW	130
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x8C)    'Set Second Pre-charge Speed of Color C
	MOVLW	140
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x83)
	MOVLW	131
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xBB)    'Set Pre-charge Level
	MOVLW	187
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x3E)
	MOVLW	62
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xBE)    'Set VCOMH
	MOVLW	190
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x3E)
	MOVLW	62
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x87)    'Set Master Current Control
	MOVLW	135
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x0F)
	MOVLW	15
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x81)    'Set Contrast Control for Color &#129;gA&#129;h
	MOVLW	129
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x80)
	MOVLW	128
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x82)    'Set Contrast Control for Color &#129;gB&#129;h
	MOVLW	130
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x80)
	MOVLW	128
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x83)    'Set Contrast Control for Color &#129;gC&#129;h
	MOVLW	131
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x80)
	MOVLW	128
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0xAF)    'display ON
	MOVLW	175
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;Default Colours
;GLCDForeground = SSD1331_WHITE
	MOVLW	255
	MOVWF	GLCDFOREGROUND
	MOVWF	GLCDFOREGROUND_H
;GLCDBACKGROUND = SSD1331_BLACK
	CLRF	GLCDBACKGROUND
	CLRF	GLCDBACKGROUND_H
;Variables required for device
;SSD1331_GLCD_WIDTH = GLCD_WIDTH
	MOVLW	96
	MOVWF	GLCDDEVICEWIDTH
	CLRF	GLCDDEVICEWIDTH_H
;SSD1331_GLCD_HEIGHT = GLCD_HEIGHT
	MOVLW	64
	MOVWF	GLCDDEVICEHEIGHT
	CLRF	GLCDDEVICEHEIGHT_H
;GLCDFontWidth = 5
	MOVLW	5
	MOVWF	GLCDFONTWIDTH
;GLCDfntDefault = 0
	CLRF	GLCDFNTDEFAULT
;GLCDfntDefaultsize = 1
	MOVLW	1
	MOVWF	GLCDFNTDEFAULTSIZE
;GLCDfntDefaultHeight = 7  'used by GLCDPrintString and GLCDPrintStringLn
	MOVLW	7
	MOVWF	GLCDFNTDEFAULTHEIGHT
;Prepare screen - this sets SSD1331Rotation
;GLCDRotate_SSD1331 ( LANDSCAPE )
	MOVLW	1
	BANKSEL	SSD1331ROTATION
	MOVWF	SSD1331ROTATION
	BANKSEL	STATUS
	FCALL	GLCDROTATE_SSD1331
;GLCDCLS
	LJMP	GLCDCLS_SSD1331

;********************************************************************************

;SOURCE: 260_SPI_GLCD_USING_SSD1331.GCB (43)
GLOBAL	INITPPS
INITPPS:
;Module: SPI1
;RA4PPS = 0x1C;      //RA4->MSSP1:SDO1;
	MOVLW	28
	BANKSEL	RA4PPS
	MOVWF	RA4PPS
;SSP1CLKPPS = 0x1;   //RA1->MSSP1:SCK1;
	MOVLW	1
	BANKSEL	SSP1CLKPPS
	MOVWF	SSP1CLKPPS
;RA1PPS = 0x1B;      //RA1->MSSP1:SCK1;
	MOVLW	27
	BANKSEL	RA1PPS
	MOVWF	RA1PPS
	BANKSEL	STATUS
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (159)
GLOBAL	INITSYS
INITSYS:
;asm showdebug This code block sets the internal oscillator to ChipMHz
;asm showdebug Default settings for microcontrollers with _OSCCON1_
;Default OSCCON1 typically, NOSC HFINTOSC; NDIV 1 - Common as this simply sets the HFINTOSC
;OSCCON1 = 0x60
	MOVLW	96
	BANKSEL	OSCCON1
	MOVWF	OSCCON1
;Default value typically, CSWHOLD may proceed; SOSCPWR Low power
;OSCCON3 = 0x00
	CLRF	OSCCON3
;Default value typically, MFOEN disabled; LFOEN disabled; ADOEN disabled; SOSCEN disabled; EXTOEN disabled; HFOEN disabled
;OSCEN = 0x00
	CLRF	OSCEN
;Default value
;OSCTUNE = 0x00
	CLRF	OSCTUNE
;asm showdebug The MCU is a chip family ChipFamily
;asm showdebug OSCCON type is 102
;OSCFRQ = 0b00000101
	MOVLW	5
	MOVWF	OSCFRQ
;asm showdebug _Complete_the_chip_setup_of_BSR,ADCs,ANSEL_and_other_key_setup_registers_or_register_bits
;Ensure all ports are set for digital I/O and, turn off A/D
;SET ADFM OFF
	BANKSEL	ADCON0
	BCF	ADCON0,2
;Switch off A/D Var(ADCON0)
;SET ADCON0.ADON OFF
	BCF	ADCON0,7
;ANSELA = 0
	BANKSEL	ANSELA
	CLRF	ANSELA
;ANSELC = 0
	CLRF	ANSELC
;Set comparator register bits for many MCUs with register CM2CON0
;C2EN = 0
	BANKSEL	CM2CON0
	BCF	CM2CON0,7
;C1EN = 0
	BCF	CM1CON0,7
;
;'Turn off all ports
;PORTA = 0
	BANKSEL	PORTA
	CLRF	PORTA
;PORTC = 0
	CLRF	PORTC
	RETURN

;********************************************************************************

GLOBAL	OLEDFONT1DATA
OLEDFONT1DATA:
	MOVF	SYSSTRINGA,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSSTRINGA_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	165
	MOVWF	SYSWORDTEMPB
	MOVLW	1
	MOVWF	SYSWORDTEMPB_H
	FCALL	SYSCOMPLESSTHAN16
	BTFSS	SYSBYTETEMPX,0
	RETLW	0
	MOVF	SYSSTRINGA, W
	ADDLW	LOW TABLEOLEDFONT1DATA
	MOVWF	SYSSTRINGA
	MOVLW	(HIGH TABLEOLEDFONT1DATA) & 127
	BTFSC	STATUS,0
	ADDLW	1
	ADDWF	SYSSTRINGA_H, W
	MOVWF	PCLATH
	MOVF	SYSSTRINGA, W
	MOVWF	PCL
GLOBAL	TABLEOLEDFONT1DATA
TABLEOLEDFONT1DATA:
	RETLW	165
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	94
	RETLW	3
	RETLW	6
	RETLW	0
	RETLW	6
	RETLW	5
	RETLW	40
	RETLW	124
	RETLW	40
	RETLW	124
	RETLW	40
	RETLW	5
	RETLW	36
	RETLW	42
	RETLW	127
	RETLW	42
	RETLW	16
	RETLW	3
	RETLW	98
	RETLW	24
	RETLW	70
	RETLW	5
	RETLW	48
	RETLW	76
	RETLW	90
	RETLW	36
	RETLW	80
	RETLW	1
	RETLW	6
	RETLW	2
	RETLW	60
	RETLW	66
	RETLW	2
	RETLW	66
	RETLW	60
	RETLW	5
	RETLW	40
	RETLW	16
	RETLW	124
	RETLW	16
	RETLW	40
	RETLW	3
	RETLW	16
	RETLW	56
	RETLW	16
	RETLW	1
	RETLW	192
	RETLW	3
	RETLW	16
	RETLW	16
	RETLW	16
	RETLW	1
	RETLW	64
	RETLW	3
	RETLW	96
	RETLW	24
	RETLW	6
	RETLW	4
	RETLW	60
	RETLW	66
	RETLW	66
	RETLW	60
	RETLW	3
	RETLW	68
	RETLW	126
	RETLW	64
	RETLW	4
	RETLW	68
	RETLW	98
	RETLW	82
	RETLW	76
	RETLW	3
	RETLW	74
	RETLW	74
	RETLW	52
	RETLW	4
	RETLW	30
	RETLW	16
	RETLW	124
	RETLW	16
	RETLW	3
	RETLW	78
	RETLW	74
	RETLW	50
	RETLW	4
	RETLW	60
	RETLW	74
	RETLW	74
	RETLW	48
	RETLW	3
	RETLW	98
	RETLW	18
	RETLW	14
	RETLW	4
	RETLW	52
	RETLW	74
	RETLW	74
	RETLW	52
	RETLW	4
	RETLW	12
	RETLW	82
	RETLW	82
	RETLW	60
	RETLW	1
	RETLW	72
	RETLW	2
	RETLW	128
	RETLW	104
	RETLW	3
	RETLW	16
	RETLW	40
	RETLW	68
	RETLW	3
	RETLW	40
	RETLW	40
	RETLW	40
	RETLW	3
	RETLW	68
	RETLW	40
	RETLW	16
	RETLW	3
	RETLW	2
	RETLW	82
	RETLW	12
	RETLW	5
	RETLW	56
	RETLW	68
	RETLW	84
	RETLW	84
	RETLW	88
	RETLW	4
	RETLW	124
	RETLW	18
	RETLW	18
	RETLW	124
	RETLW	4
	RETLW	126
	RETLW	74
	RETLW	74
	RETLW	52
	RETLW	4
	RETLW	60
	RETLW	66
	RETLW	66
	RETLW	36
	RETLW	4
	RETLW	126
	RETLW	66
	RETLW	66
	RETLW	60
	RETLW	3
	RETLW	126
	RETLW	74
	RETLW	74
	RETLW	3
	RETLW	126
	RETLW	10
	RETLW	10
	RETLW	4
	RETLW	60
	RETLW	66
	RETLW	82
	RETLW	52
	RETLW	4
	RETLW	126
	RETLW	8
	RETLW	8
	RETLW	126
	RETLW	3
	RETLW	66
	RETLW	126
	RETLW	66
	RETLW	3
	RETLW	66
	RETLW	66
	RETLW	62
	RETLW	4
	RETLW	126
	RETLW	8
	RETLW	20
	RETLW	98
	RETLW	3
	RETLW	126
	RETLW	64
	RETLW	64
	RETLW	5
	RETLW	126
	RETLW	4
	RETLW	8
	RETLW	4
	RETLW	126
	RETLW	5
	RETLW	126
	RETLW	4
	RETLW	24
	RETLW	32
	RETLW	126
	RETLW	4
	RETLW	60
	RETLW	66
	RETLW	66
	RETLW	60
	RETLW	4
	RETLW	126
	RETLW	18
	RETLW	18
	RETLW	12
	RETLW	4
	RETLW	60
	RETLW	66
	RETLW	66
	RETLW	188
	RETLW	4
	RETLW	126
	RETLW	18
	RETLW	18
	RETLW	108
	RETLW	4
	RETLW	68
	RETLW	74
	RETLW	74
	RETLW	48
	RETLW	3
	RETLW	2
	RETLW	126
	RETLW	2
	RETLW	4
	RETLW	62
	RETLW	64
	RETLW	64
	RETLW	62
	RETLW	5
	RETLW	6
	RETLW	24
	RETLW	96
	RETLW	24
	RETLW	6
	RETLW	5
	RETLW	62
	RETLW	64
	RETLW	62
	RETLW	64
	RETLW	62
	RETLW	5
	RETLW	66
	RETLW	36
	RETLW	24
	RETLW	36
	RETLW	66
	RETLW	4
	RETLW	158
	RETLW	160
	RETLW	160
	RETLW	126
	RETLW	4
	RETLW	98
	RETLW	82
	RETLW	74
	RETLW	70
	RETLW	2
	RETLW	126
	RETLW	66
	RETLW	3
	RETLW	6
	RETLW	24
	RETLW	96
	RETLW	2
	RETLW	66
	RETLW	126
	RETLW	3
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	4
	RETLW	128
	RETLW	128
	RETLW	128
	RETLW	128
	RETLW	2
	RETLW	4
	RETLW	8
	RETLW	4
	RETLW	32
	RETLW	84
	RETLW	84
	RETLW	120
	RETLW	4
	RETLW	126
	RETLW	68
	RETLW	68
	RETLW	56
	RETLW	4
	RETLW	56
	RETLW	68
	RETLW	68
	RETLW	40
	RETLW	4
	RETLW	56
	RETLW	68
	RETLW	68
	RETLW	126
	RETLW	4
	RETLW	56
	RETLW	84
	RETLW	84
	RETLW	88
	RETLW	2
	RETLW	124
	RETLW	10
	RETLW	4
	RETLW	152
	RETLW	164
	RETLW	164
	RETLW	124
	RETLW	4
	RETLW	126
	RETLW	4
	RETLW	4
	RETLW	120
	RETLW	1
	RETLW	122
	RETLW	2
	RETLW	64
	RETLW	58
	RETLW	4
	RETLW	126
	RETLW	16
	RETLW	40
	RETLW	68
	RETLW	1
	RETLW	126
	RETLW	5
	RETLW	124
	RETLW	4
	RETLW	120
	RETLW	4
	RETLW	120
	RETLW	4
	RETLW	124
	RETLW	4
	RETLW	4
	RETLW	120
	RETLW	4
	RETLW	56
	RETLW	68
	RETLW	68
	RETLW	56
	RETLW	4
	RETLW	252
	RETLW	36
	RETLW	36
	RETLW	24
	RETLW	4
	RETLW	24
	RETLW	36
	RETLW	36
	RETLW	252
	RETLW	2
	RETLW	124
	RETLW	4
	RETLW	4
	RETLW	72
	RETLW	84
	RETLW	84
	RETLW	32
	RETLW	3
	RETLW	4
	RETLW	62
	RETLW	68
	RETLW	4
	RETLW	60
	RETLW	64
	RETLW	64
	RETLW	60
	RETLW	5
	RETLW	12
	RETLW	48
	RETLW	64
	RETLW	48
	RETLW	12
	RETLW	5
	RETLW	60
	RETLW	64
	RETLW	60
	RETLW	64
	RETLW	60
	RETLW	5
	RETLW	68
	RETLW	40
	RETLW	16
	RETLW	40
	RETLW	68
	RETLW	4
	RETLW	156
	RETLW	160
	RETLW	160
	RETLW	124
	RETLW	3
	RETLW	100
	RETLW	84
	RETLW	76
	RETLW	3
	RETLW	8
	RETLW	54
	RETLW	65
	RETLW	1
	RETLW	255
	RETLW	3
	RETLW	65
	RETLW	54
	RETLW	8
	RETLW	4
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	1

;********************************************************************************

;SOURCE: SYSTEM.H (3078)
GLOBAL	SYSCOMPEQUAL
SYSCOMPEQUAL:
;Dim SysByteTempA, SysByteTempB, SysByteTempX as byte
;clrf SysByteTempX
	CLRF	SYSBYTETEMPX
;movf SysByteTempA, W
	MOVF	SYSBYTETEMPA, W
;subwf SysByteTempB, W
	SUBWF	SYSBYTETEMPB, W
;btfsc STATUS, Z
	BTFSC	STATUS,2
;comf SysByteTempX,F
	COMF	SYSBYTETEMPX,F
	RETURN

;********************************************************************************

;START OF PROGRAM MEMORY PAGE 1
	PSECT	PROGMEM1,CLASS=CODE,SPACE=SPACE_CODE,DELTA=2, ABS, OVRLD 
	ORG	2048
GLOBAL	OLEDFONT2
OLEDFONT2:
	MOVF	SYSSTRINGA,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSSTRINGA_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	145
	MOVWF	SYSWORDTEMPB
	MOVLW	7
	MOVWF	SYSWORDTEMPB_H
	FCALL	SYSCOMPLESSTHAN16
	BTFSS	SYSBYTETEMPX,0
	RETLW	0
	MOVF	SYSSTRINGA, W
	ADDLW	LOW TABLEOLEDFONT2
	MOVWF	SYSSTRINGA
	MOVLW	(HIGH TABLEOLEDFONT2) & 127
	BTFSC	STATUS,0
	ADDLW	1
	ADDWF	SYSSTRINGA_H, W
	MOVWF	PCLATH
	MOVF	SYSSTRINGA, W
	MOVWF	PCL
GLOBAL	TABLEOLEDFONT2
TABLEOLEDFONT2:
	RETLW	147
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	254
	RETLW	27
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	30
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	30
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	1
	RETLW	32
	RETLW	25
	RETLW	160
	RETLW	7
	RETLW	120
	RETLW	1
	RETLW	38
	RETLW	25
	RETLW	160
	RETLW	7
	RETLW	120
	RETLW	1
	RETLW	38
	RETLW	1
	RETLW	32
	RETLW	1
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	28
	RETLW	24
	RETLW	38
	RETLW	16
	RETLW	66
	RETLW	16
	RETLW	255
	RETLW	63
	RETLW	130
	RETLW	17
	RETLW	2
	RETLW	15
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	28
	RETLW	16
	RETLW	34
	RETLW	8
	RETLW	34
	RETLW	4
	RETLW	34
	RETLW	3
	RETLW	156
	RETLW	0
	RETLW	64
	RETLW	14
	RETLW	48
	RETLW	17
	RETLW	8
	RETLW	17
	RETLW	4
	RETLW	17
	RETLW	2
	RETLW	14
	RETLW	0
	RETLW	7
	RETLW	128
	RETLW	8
	RETLW	92
	RETLW	16
	RETLW	98
	RETLW	16
	RETLW	162
	RETLW	17
	RETLW	50
	RETLW	19
	RETLW	28
	RETLW	28
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	22
	RETLW	128
	RETLW	1
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	30
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	224
	RETLW	7
	RETLW	24
	RETLW	24
	RETLW	12
	RETLW	48
	RETLW	4
	RETLW	32
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	4
	RETLW	32
	RETLW	12
	RETLW	48
	RETLW	24
	RETLW	24
	RETLW	224
	RETLW	7
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	240
	RETLW	0
	RETLW	78
	RETLW	0
	RETLW	240
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	224
	RETLW	31
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	152
	RETLW	0
	RETLW	120
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	64
	RETLW	0
	RETLW	48
	RETLW	0
	RETLW	12
	RETLW	0
	RETLW	3
	RETLW	192
	RETLW	0
	RETLW	48
	RETLW	0
	RETLW	12
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	240
	RETLW	3
	RETLW	12
	RETLW	12
	RETLW	2
	RETLW	16
	RETLW	2
	RETLW	16
	RETLW	2
	RETLW	16
	RETLW	12
	RETLW	12
	RETLW	240
	RETLW	3
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	4
	RETLW	16
	RETLW	4
	RETLW	16
	RETLW	4
	RETLW	16
	RETLW	254
	RETLW	31
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	6
	RETLW	24
	RETLW	2
	RETLW	20
	RETLW	2
	RETLW	18
	RETLW	2
	RETLW	17
	RETLW	194
	RETLW	16
	RETLW	60
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	2
	RETLW	16
	RETLW	66
	RETLW	16
	RETLW	66
	RETLW	16
	RETLW	66
	RETLW	16
	RETLW	188
	RETLW	15
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	3
	RETLW	192
	RETLW	2
	RETLW	32
	RETLW	2
	RETLW	24
	RETLW	2
	RETLW	4
	RETLW	2
	RETLW	254
	RETLW	31
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	62
	RETLW	16
	RETLW	34
	RETLW	16
	RETLW	34
	RETLW	16
	RETLW	66
	RETLW	8
	RETLW	130
	RETLW	7
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	240
	RETLW	7
	RETLW	76
	RETLW	8
	RETLW	34
	RETLW	16
	RETLW	34
	RETLW	16
	RETLW	34
	RETLW	16
	RETLW	66
	RETLW	8
	RETLW	128
	RETLW	7
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	24
	RETLW	2
	RETLW	7
	RETLW	194
	RETLW	0
	RETLW	50
	RETLW	0
	RETLW	10
	RETLW	0
	RETLW	6
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	28
	RETLW	15
	RETLW	162
	RETLW	16
	RETLW	66
	RETLW	16
	RETLW	66
	RETLW	16
	RETLW	162
	RETLW	16
	RETLW	162
	RETLW	9
	RETLW	28
	RETLW	6
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	120
	RETLW	0
	RETLW	132
	RETLW	16
	RETLW	2
	RETLW	17
	RETLW	2
	RETLW	17
	RETLW	2
	RETLW	17
	RETLW	132
	RETLW	12
	RETLW	248
	RETLW	3
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	96
	RETLW	24
	RETLW	96
	RETLW	24
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	96
	RETLW	152
	RETLW	96
	RETLW	120
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	3
	RETLW	0
	RETLW	3
	RETLW	128
	RETLW	4
	RETLW	128
	RETLW	4
	RETLW	64
	RETLW	8
	RETLW	64
	RETLW	8
	RETLW	32
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	128
	RETLW	4
	RETLW	128
	RETLW	4
	RETLW	128
	RETLW	4
	RETLW	128
	RETLW	4
	RETLW	128
	RETLW	4
	RETLW	128
	RETLW	4
	RETLW	128
	RETLW	4
	RETLW	128
	RETLW	4
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	32
	RETLW	16
	RETLW	64
	RETLW	8
	RETLW	64
	RETLW	8
	RETLW	128
	RETLW	4
	RETLW	128
	RETLW	4
	RETLW	0
	RETLW	3
	RETLW	0
	RETLW	3
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	14
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	27
	RETLW	130
	RETLW	0
	RETLW	66
	RETLW	0
	RETLW	38
	RETLW	0
	RETLW	28
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	240
	RETLW	3
	RETLW	24
	RETLW	12
	RETLW	4
	RETLW	24
	RETLW	226
	RETLW	19
	RETLW	18
	RETLW	20
	RETLW	10
	RETLW	22
	RETLW	138
	RETLW	27
	RETLW	252
	RETLW	7
	RETLW	0
	RETLW	4
	RETLW	0
	RETLW	4
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	14
	RETLW	128
	RETLW	3
	RETLW	112
	RETLW	2
	RETLW	24
	RETLW	2
	RETLW	48
	RETLW	2
	RETLW	192
	RETLW	2
	RETLW	0
	RETLW	3
	RETLW	0
	RETLW	12
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	136
	RETLW	16
	RETLW	136
	RETLW	16
	RETLW	136
	RETLW	16
	RETLW	136
	RETLW	16
	RETLW	72
	RETLW	17
	RETLW	48
	RETLW	14
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	192
	RETLW	3
	RETLW	48
	RETLW	12
	RETLW	16
	RETLW	8
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	24
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	16
	RETLW	8
	RETLW	224
	RETLW	7
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	8
	RETLW	17
	RETLW	8
	RETLW	17
	RETLW	8
	RETLW	17
	RETLW	8
	RETLW	17
	RETLW	8
	RETLW	17
	RETLW	8
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	192
	RETLW	3
	RETLW	48
	RETLW	12
	RETLW	16
	RETLW	8
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	17
	RETLW	8
	RETLW	17
	RETLW	24
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	248
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	248
	RETLW	31
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	248
	RETLW	15
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	128
	RETLW	0
	RETLW	128
	RETLW	1
	RETLW	64
	RETLW	2
	RETLW	32
	RETLW	4
	RETLW	16
	RETLW	4
	RETLW	8
	RETLW	8
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	56
	RETLW	0
	RETLW	224
	RETLW	1
	RETLW	0
	RETLW	7
	RETLW	0
	RETLW	6
	RETLW	192
	RETLW	1
	RETLW	56
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	16
	RETLW	0
	RETLW	96
	RETLW	0
	RETLW	128
	RETLW	1
	RETLW	0
	RETLW	6
	RETLW	0
	RETLW	8
	RETLW	248
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	224
	RETLW	7
	RETLW	16
	RETLW	8
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	16
	RETLW	8
	RETLW	224
	RETLW	7
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	1
	RETLW	136
	RETLW	0
	RETLW	112
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	224
	RETLW	7
	RETLW	16
	RETLW	8
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	48
	RETLW	16
	RETLW	72
	RETLW	224
	RETLW	71
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	1
	RETLW	8
	RETLW	3
	RETLW	136
	RETLW	4
	RETLW	112
	RETLW	8
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	112
	RETLW	24
	RETLW	72
	RETLW	16
	RETLW	136
	RETLW	16
	RETLW	136
	RETLW	16
	RETLW	8
	RETLW	17
	RETLW	8
	RETLW	9
	RETLW	24
	RETLW	14
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	248
	RETLW	31
	RETLW	8
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	248
	RETLW	7
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	8
	RETLW	248
	RETLW	7
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	48
	RETLW	0
	RETLW	192
	RETLW	1
	RETLW	0
	RETLW	6
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	7
	RETLW	192
	RETLW	0
	RETLW	48
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	224
	RETLW	3
	RETLW	0
	RETLW	28
	RETLW	0
	RETLW	15
	RETLW	224
	RETLW	0
	RETLW	192
	RETLW	1
	RETLW	0
	RETLW	14
	RETLW	0
	RETLW	28
	RETLW	224
	RETLW	3
	RETLW	24
	RETLW	0
	RETLW	8
	RETLW	16
	RETLW	16
	RETLW	8
	RETLW	32
	RETLW	4
	RETLW	64
	RETLW	2
	RETLW	128
	RETLW	1
	RETLW	128
	RETLW	1
	RETLW	64
	RETLW	2
	RETLW	32
	RETLW	4
	RETLW	16
	RETLW	8
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	96
	RETLW	0
	RETLW	128
	RETLW	0
	RETLW	0
	RETLW	31
	RETLW	128
	RETLW	0
	RETLW	64
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	8
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	8
	RETLW	24
	RETLW	8
	RETLW	20
	RETLW	8
	RETLW	18
	RETLW	8
	RETLW	17
	RETLW	136
	RETLW	16
	RETLW	72
	RETLW	16
	RETLW	40
	RETLW	16
	RETLW	24
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	254
	RETLW	127
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	12
	RETLW	0
	RETLW	48
	RETLW	0
	RETLW	192
	RETLW	0
	RETLW	0
	RETLW	3
	RETLW	0
	RETLW	12
	RETLW	0
	RETLW	48
	RETLW	0
	RETLW	64
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	254
	RETLW	127
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	4
	RETLW	0
	RETLW	3
	RETLW	224
	RETLW	0
	RETLW	56
	RETLW	0
	RETLW	14
	RETLW	0
	RETLW	112
	RETLW	0
	RETLW	128
	RETLW	3
	RETLW	0
	RETLW	4
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	12
	RETLW	32
	RETLW	18
	RETLW	32
	RETLW	17
	RETLW	32
	RETLW	17
	RETLW	32
	RETLW	9
	RETLW	192
	RETLW	31
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	254
	RETLW	31
	RETLW	64
	RETLW	8
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	96
	RETLW	8
	RETLW	128
	RETLW	7
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	128
	RETLW	7
	RETLW	64
	RETLW	8
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	128
	RETLW	7
	RETLW	64
	RETLW	24
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	64
	RETLW	8
	RETLW	254
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	128
	RETLW	7
	RETLW	64
	RETLW	9
	RETLW	32
	RETLW	17
	RETLW	32
	RETLW	17
	RETLW	32
	RETLW	17
	RETLW	32
	RETLW	17
	RETLW	192
	RETLW	17
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	252
	RETLW	31
	RETLW	36
	RETLW	0
	RETLW	34
	RETLW	0
	RETLW	34
	RETLW	0
	RETLW	34
	RETLW	0
	RETLW	34
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	128
	RETLW	7
	RETLW	64
	RETLW	152
	RETLW	32
	RETLW	144
	RETLW	32
	RETLW	144
	RETLW	32
	RETLW	144
	RETLW	64
	RETLW	72
	RETLW	224
	RETLW	63
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	254
	RETLW	31
	RETLW	128
	RETLW	0
	RETLW	64
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	192
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	38
	RETLW	0
	RETLW	230
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	128
	RETLW	32
	RETLW	128
	RETLW	32
	RETLW	128
	RETLW	38
	RETLW	128
	RETLW	230
	RETLW	127
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	254
	RETLW	31
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	3
	RETLW	128
	RETLW	4
	RETLW	64
	RETLW	4
	RETLW	64
	RETLW	8
	RETLW	32
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	254
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	224
	RETLW	31
	RETLW	64
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	192
	RETLW	31
	RETLW	64
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	192
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	224
	RETLW	31
	RETLW	192
	RETLW	0
	RETLW	64
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	192
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	128
	RETLW	7
	RETLW	64
	RETLW	8
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	64
	RETLW	8
	RETLW	128
	RETLW	7
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	224
	RETLW	255
	RETLW	64
	RETLW	8
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	96
	RETLW	8
	RETLW	128
	RETLW	7
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	128
	RETLW	7
	RETLW	64
	RETLW	24
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	64
	RETLW	8
	RETLW	224
	RETLW	255
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	224
	RETLW	31
	RETLW	128
	RETLW	0
	RETLW	64
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	224
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	192
	RETLW	24
	RETLW	32
	RETLW	17
	RETLW	32
	RETLW	17
	RETLW	32
	RETLW	18
	RETLW	32
	RETLW	18
	RETLW	32
	RETLW	12
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	248
	RETLW	15
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	224
	RETLW	15
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	8
	RETLW	224
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	192
	RETLW	1
	RETLW	0
	RETLW	6
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	16
	RETLW	0
	RETLW	12
	RETLW	0
	RETLW	3
	RETLW	192
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	96
	RETLW	0
	RETLW	128
	RETLW	7
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	14
	RETLW	192
	RETLW	1
	RETLW	128
	RETLW	1
	RETLW	0
	RETLW	14
	RETLW	0
	RETLW	24
	RETLW	128
	RETLW	7
	RETLW	96
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	32
	RETLW	16
	RETLW	64
	RETLW	8
	RETLW	128
	RETLW	4
	RETLW	0
	RETLW	3
	RETLW	0
	RETLW	3
	RETLW	128
	RETLW	4
	RETLW	64
	RETLW	8
	RETLW	32
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	32
	RETLW	128
	RETLW	192
	RETLW	128
	RETLW	0
	RETLW	131
	RETLW	0
	RETLW	70
	RETLW	0
	RETLW	56
	RETLW	0
	RETLW	24
	RETLW	0
	RETLW	6
	RETLW	0
	RETLW	1
	RETLW	192
	RETLW	0
	RETLW	32
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	32
	RETLW	16
	RETLW	32
	RETLW	24
	RETLW	32
	RETLW	20
	RETLW	32
	RETLW	18
	RETLW	32
	RETLW	17
	RETLW	160
	RETLW	16
	RETLW	96
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	252
	RETLW	62
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	254
	RETLW	127
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	2
	RETLW	64
	RETLW	252
	RETLW	62
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	3
	RETLW	128
	RETLW	0
	RETLW	128
	RETLW	0
	RETLW	128
	RETLW	0
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	1
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	0
	RETLW	2
	RETLW	128
	RETLW	1
	RETLW	0
	RETLW	0
	RETLW	128
	RETLW	31
	RETLW	192
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	16
	RETLW	16
	RETLW	32
	RETLW	16
	RETLW	192
	RETLW	16
	RETLW	128
	RETLW	31
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	192
	RETLW	3
	RETLW	48
	RETLW	12
	RETLW	16
	RETLW	8
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	16
	RETLW	8
	RETLW	144
	RETLW	8
	RETLW	176
	RETLW	24
	RETLW	208

;********************************************************************************

;OVERLOADED SIGNATURE: BYTE:BYTE:, SOURCE: HWSPI.H (382)
GLOBAL	SPIMODE705
SPIMODE705:
;Supports Legacy SPI via MSSP module
;added for 16f18855
;added for 16f18855
;added for 16f18855
;Turn off SPI
;(Prevents any weird glitches during setup)
;Set SSPCON1.SSPEN Off ;(Prevents any weird glitches during setup)
	BANKSEL	SSP1CON1
	BCF	SSP1CON1,5
;Set clock pulse settings
;Set SSPSTAT.SMP Off
	BCF	SSP1STAT,7
;Set SSPSTAT.CKE Off
	BCF	SSP1STAT,6
;If SPIClockMode.0 = Off Then
	BANKSEL	SPICLOCKMODE
	BTFSC	SPICLOCKMODE,0
	GOTO	ENDIF52
;Set SSPSTAT.CKE On
	BANKSEL	SSP1STAT
	BSF	SSP1STAT,6
;End If
GLOBAL	ENDIF52
ENDIF52:
;Set SSPCON1.CKP Off
	BANKSEL	SSP1CON1
	BCF	SSP1CON1,4
;If SPIClockMode.1 = On Then
	BANKSEL	SPICLOCKMODE
	BTFSS	SPICLOCKMODE,1
	GOTO	ENDIF53
;Set SSPCON1.CKP On
	BANKSEL	SSP1CON1
	BSF	SSP1CON1,4
;End If
GLOBAL	ENDIF53
ENDIF53:
;Select mode and clock
;Set some mode bits off, can set on later
;Set SSPCON1.SSPM3 Off
	BANKSEL	SSP1CON1
	BCF	SSP1CON1,3
;Set SSPCON1.SSPM2 Off
	BCF	SSP1CON1,2
;Set SSPCON1.SSPM1 Off
	BCF	SSP1CON1,1
;Set SSPCON1.SSPM0 Off
	BCF	SSP1CON1,0
;Select Case SPICurrentMode
;Case MasterSSPADDMode   '1010
GLOBAL	SYSSELECT4CASE1
SYSSELECT4CASE1:
	MOVLW	16
	BANKSEL	SPICURRENTMODE
	SUBWF	SPICURRENTMODE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT4CASE2
;Set SSPCON1.SSPM3 On
	BANKSEL	SSP1CON1
	BSF	SSP1CON1,3
;Set SSPCON1.SSPM1 On
	BSF	SSP1CON1,1
;SSP1ADD = 1
	MOVLW	1
	MOVWF	SSP1ADD
;Case MasterUltraFast
	GOTO	SYSSELECTEND4
GLOBAL	SYSSELECT4CASE2
SYSSELECT4CASE2:
	MOVLW	14
	SUBWF	SPICURRENTMODE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT4CASE3
;Nothing to do on PIC
;Case MasterFast
	GOTO	SYSSELECTEND4
GLOBAL	SYSSELECT4CASE3
SYSSELECT4CASE3:
	MOVLW	13
	SUBWF	SPICURRENTMODE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT4CASE4
;Nothing to do
;Case Master
	GOTO	SYSSELECTEND4
GLOBAL	SYSSELECT4CASE4
SYSSELECT4CASE4:
	MOVLW	12
	SUBWF	SPICURRENTMODE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT4CASE5
;Set SSPCON1.SSPM0 On
	BANKSEL	SSP1CON1
	BSF	SSP1CON1,0
;Case MasterSlow
	GOTO	SYSSELECTEND4
GLOBAL	SYSSELECT4CASE5
SYSSELECT4CASE5:
	MOVLW	11
	SUBWF	SPICURRENTMODE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT4CASE6
;Set SSPCON1.SSPM1 On
	BANKSEL	SSP1CON1
	BSF	SSP1CON1,1
;Case Slave
	GOTO	SYSSELECTEND4
GLOBAL	SYSSELECT4CASE6
SYSSELECT4CASE6:
	MOVF	SPICURRENTMODE,F
	BTFSS	STATUS,2
	GOTO	SYSSELECT4CASE7
;Set SSPCON1.SSPM2 On
	BANKSEL	SSP1CON1
	BSF	SSP1CON1,2
;Set SSPCON1.SSPM0 On
	BSF	SSP1CON1,0
;Case SlaveSS
	GOTO	SYSSELECTEND4
GLOBAL	SYSSELECT4CASE7
SYSSELECT4CASE7:
	DECF	SPICURRENTMODE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECTEND4
;Set SSPCON1.SSPM2 On
	BANKSEL	SSP1CON1
	BSF	SSP1CON1,2
;End Select
GLOBAL	SYSSELECTEND4
SYSSELECTEND4:
;Enable SPI
;Set SSPCON1.SSPEN On
	BANKSEL	SSP1CON1
	BSF	SSP1CON1,5
	BANKSEL	STATUS
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (3413)
GLOBAL	SYSCOMPLESSTHAN16
SYSCOMPLESSTHAN16:
;dim SysWordTempA as word
;dim SysWordTempB as word
;dim SysByteTempX as byte
;clrf SysByteTempX
	CLRF	SYSBYTETEMPX
;Test High, exit if more
;movf SysWordTempA_H,W
	MOVF	SYSWORDTEMPA_H,W
;subwf SysWordTempB_H,W
	SUBWF	SYSWORDTEMPB_H,W
;btfss STATUS,C
	BTFSS	STATUS,0
;return
	RETURN
;Test high, exit true if less
;movf SysWordTempB_H,W
	MOVF	SYSWORDTEMPB_H,W
;subwf SysWordTempA_H,W
	SUBWF	SYSWORDTEMPA_H,W
;btfss STATUS,C
	BTFSS	STATUS,0
;goto SCLT16True
	GOTO	SCLT16TRUE
;Test Low, exit if more or equal
;movf SysWordTempB,W
	MOVF	SYSWORDTEMPB,W
;subwf SysWordTempA,W
	SUBWF	SYSWORDTEMPA,W
;btfsc STATUS,C
	BTFSC	STATUS,0
;return
	RETURN
GLOBAL	SCLT16TRUE
SCLT16TRUE:
;comf SysByteTempX,F
	COMF	SYSBYTETEMPX,F
	RETURN

;********************************************************************************

;START OF PROGRAM MEMORY PAGE 2
	PSECT	PROGMEM2,CLASS=CODE,SPACE=SPACE_CODE,DELTA=2, ABS, OVRLD 
	ORG	4096
;SOURCE: GLCD.H (1489)
GLOBAL	BOX
BOX:
;dim GLCDTemp as word
;Make sure that starting point (1) is always less than end point (2)
;If LineX1 > LineX2 Then
	MOVF	LINEX1,W
	MOVWF	SYSWORDTEMPB
	MOVF	LINEX1_H,W
	MOVWF	SYSWORDTEMPB_H
	MOVF	LINEX2,W
	MOVWF	SYSWORDTEMPA
	MOVF	LINEX2_H,W
	MOVWF	SYSWORDTEMPA_H
	FCALL	SYSCOMPLESSTHAN16
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF7
;GLCDTemp = LineX1
	MOVF	LINEX1,W
	MOVWF	GLCDTEMP
	MOVF	LINEX1_H,W
	MOVWF	GLCDTEMP_H
;LineX1 = LineX2
	MOVF	LINEX2,W
	MOVWF	LINEX1
	MOVF	LINEX2_H,W
	MOVWF	LINEX1_H
;LineX2 = GLCDTemp
	MOVF	GLCDTEMP,W
	MOVWF	LINEX2
	MOVF	GLCDTEMP_H,W
	MOVWF	LINEX2_H
;End If
GLOBAL	ENDIF7
ENDIF7:
;If LineY1 > LineY2 Then
	MOVF	LINEY1,W
	MOVWF	SYSWORDTEMPB
	MOVF	LINEY1_H,W
	MOVWF	SYSWORDTEMPB_H
	MOVF	LINEY2,W
	MOVWF	SYSWORDTEMPA
	MOVF	LINEY2_H,W
	MOVWF	SYSWORDTEMPA_H
	FCALL	SYSCOMPLESSTHAN16
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF8
;GLCDTemp = LineY1
	MOVF	LINEY1,W
	MOVWF	GLCDTEMP
	MOVF	LINEY1_H,W
	MOVWF	GLCDTEMP_H
;LineY1 = LineY2
	MOVF	LINEY2,W
	MOVWF	LINEY1
	MOVF	LINEY2_H,W
	MOVWF	LINEY1_H
;LineY2 = GLCDTemp
	MOVF	GLCDTEMP,W
	MOVWF	LINEY2
	MOVF	GLCDTEMP_H,W
	MOVWF	LINEY2_H
;End If
GLOBAL	ENDIF8
ENDIF8:
;dim DrawLine as word
;Draw lines going across
;For DrawLine = LineX1 To LineX2
	MOVF	LINEX1,W
	MOVWF	DRAWLINE
	MOVF	LINEX1_H,W
	MOVWF	DRAWLINE_H
GLOBAL	SYSFORLOOP4
SYSFORLOOP4:
;PSet DrawLine, LineY1, LineColour
	MOVF	DRAWLINE,W
	MOVWF	GLCDX
	MOVF	DRAWLINE_H,W
	MOVWF	GLCDX_H
	MOVF	LINEY1,W
	MOVWF	GLCDY
	MOVF	LINEY1_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;PSet DrawLine, LineY2, LineColour
	MOVF	DRAWLINE,W
	MOVWF	GLCDX
	MOVF	DRAWLINE_H,W
	MOVWF	GLCDX_H
	MOVF	LINEY2,W
	MOVWF	GLCDY
	MOVF	LINEY2_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	DRAWLINE,W
	SUBWF	LINEX2,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	BANKSEL	DRAWLINE_H
	MOVF	DRAWLINE_H,W
	SUBWFB	LINEX2_H,W
	BANKSEL	SYSTEMP1_H
	MOVWF	SYSTEMP1_H
	MOVF	SYSTEMP1,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSTEMP1_H,W
	MOVWF	SYSWORDTEMPA_H
	CLRF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL16
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF9
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	INCF	DRAWLINE,F
	BTFSC	STATUS,2
	INCF	DRAWLINE_H,F
	GOTO	SYSFORLOOP4
;END IF
GLOBAL	ENDIF9
ENDIF9:
GLOBAL	SYSFORLOOPEND4
SYSFORLOOPEND4:
;Draw lines going down
;For DrawLine = LineY1 To LineY2
	MOVF	LINEY1,W
	MOVWF	DRAWLINE
	MOVF	LINEY1_H,W
	MOVWF	DRAWLINE_H
GLOBAL	SYSFORLOOP5
SYSFORLOOP5:
;PSet LineX1, DrawLine, LineColour
	MOVF	LINEX1,W
	MOVWF	GLCDX
	MOVF	LINEX1_H,W
	MOVWF	GLCDX_H
	MOVF	DRAWLINE,W
	MOVWF	GLCDY
	MOVF	DRAWLINE_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;PSet LineX2, DrawLine, LineColour
	MOVF	LINEX2,W
	MOVWF	GLCDX
	MOVF	LINEX2_H,W
	MOVWF	GLCDX_H
	MOVF	DRAWLINE,W
	MOVWF	GLCDY
	MOVF	DRAWLINE_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	DRAWLINE,W
	SUBWF	LINEY2,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	BANKSEL	DRAWLINE_H
	MOVF	DRAWLINE_H,W
	SUBWFB	LINEY2_H,W
	BANKSEL	SYSTEMP1_H
	MOVWF	SYSTEMP1_H
	MOVF	SYSTEMP1,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSTEMP1_H,W
	MOVWF	SYSWORDTEMPA_H
	CLRF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL16
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF10
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	INCF	DRAWLINE,F
	BTFSC	STATUS,2
	INCF	DRAWLINE_H,F
	GOTO	SYSFORLOOP5
;END IF
GLOBAL	ENDIF10
ENDIF10:
GLOBAL	SYSFORLOOPEND5
SYSFORLOOPEND5:
	RETURN

;********************************************************************************

;SOURCE: GLCD.H (1536)
GLOBAL	CIRCLE
CIRCLE:
;dim  radiusErr, xradius as Integer
;xradius = Inxradius
	MOVF	INXRADIUS,W
	BANKSEL	XRADIUS
	MOVWF	XRADIUS
	BANKSEL	INXRADIUS_H
	MOVF	INXRADIUS_H,W
	BANKSEL	XRADIUS_H
	MOVWF	XRADIUS_H
;radiusErr = -(xradius/2)
	MOVF	XRADIUS,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	XRADIUS_H,W
	MOVWF	SYSINTEGERTEMPA_H
	MOVLW	2
	MOVWF	SYSINTEGERTEMPB
	CLRF	SYSINTEGERTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSDIVSUBINT
	MOVF	SYSINTEGERTEMPA,W
	BANKSEL	SYSTEMP2
	MOVWF	SYSTEMP2
	MOVF	SYSINTEGERTEMPA_H,W
	MOVWF	SYSTEMP2_H
	COMF	SYSTEMP2,W
	MOVWF	RADIUSERR
	COMF	SYSTEMP2_H,W
	MOVWF	RADIUSERR_H
	INCF	RADIUSERR,F
	BTFSC	STATUS,2
	INCF	RADIUSERR_H,F
;Do While xradius >=  yordinate
GLOBAL	SYSDOLOOP_S3
SYSDOLOOP_S3:
	MOVF	XRADIUS,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	XRADIUS_H,W
	MOVWF	SYSINTEGERTEMPA_H
	MOVF	YORDINATE,W
	MOVWF	SYSINTEGERTEMPB
	CLRF	SYSINTEGERTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPLESSTHANINT
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	SYSDOLOOP_E3
;Pset ((xoffset + xradius), (yoffset + yordinate), LineColour)
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	ADDWF	XOFFSET,W
	BANKSEL	GLCDX
	MOVWF	GLCDX
	BANKSEL	XRADIUS_H
	MOVF	XRADIUS_H,W
	ADDWFC	XOFFSET_H,W
	BANKSEL	GLCDX_H
	MOVWF	GLCDX_H
	BANKSEL	YORDINATE
	MOVF	YORDINATE,W
	ADDWF	YOFFSET,W
	BANKSEL	GLCDY
	MOVWF	GLCDY
	MOVLW	0
	BANKSEL	YOFFSET_H
	ADDWFC	YOFFSET_H,W
	BANKSEL	GLCDY_H
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Pset ((xoffset + yordinate), (yoffset + xradius), LineColour)
	BANKSEL	YORDINATE
	MOVF	YORDINATE,W
	ADDWF	XOFFSET,W
	BANKSEL	GLCDX
	MOVWF	GLCDX
	MOVLW	0
	BANKSEL	XOFFSET_H
	ADDWFC	XOFFSET_H,W
	BANKSEL	GLCDX_H
	MOVWF	GLCDX_H
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	ADDWF	YOFFSET,W
	BANKSEL	GLCDY
	MOVWF	GLCDY
	BANKSEL	XRADIUS_H
	MOVF	XRADIUS_H,W
	ADDWFC	YOFFSET_H,W
	BANKSEL	GLCDY_H
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Pset ((xoffset - xradius), (yoffset + yordinate), LineColour)
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	SUBWF	XOFFSET,W
	BANKSEL	GLCDX
	MOVWF	GLCDX
	BANKSEL	XRADIUS_H
	MOVF	XRADIUS_H,W
	SUBWFB	XOFFSET_H,W
	BANKSEL	GLCDX_H
	MOVWF	GLCDX_H
	BANKSEL	YORDINATE
	MOVF	YORDINATE,W
	ADDWF	YOFFSET,W
	BANKSEL	GLCDY
	MOVWF	GLCDY
	MOVLW	0
	BANKSEL	YOFFSET_H
	ADDWFC	YOFFSET_H,W
	BANKSEL	GLCDY_H
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Pset ((xoffset - yordinate), (yoffset + xradius), LineColour)
	BANKSEL	YORDINATE
	MOVF	YORDINATE,W
	SUBWF	XOFFSET,W
	BANKSEL	GLCDX
	MOVWF	GLCDX
	MOVLW	0
	BANKSEL	XOFFSET_H
	SUBWFB	XOFFSET_H,W
	BANKSEL	GLCDX_H
	MOVWF	GLCDX_H
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	ADDWF	YOFFSET,W
	BANKSEL	GLCDY
	MOVWF	GLCDY
	BANKSEL	XRADIUS_H
	MOVF	XRADIUS_H,W
	ADDWFC	YOFFSET_H,W
	BANKSEL	GLCDY_H
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Pset ((xoffset - xradius), (yoffset - yordinate), LineColour)
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	SUBWF	XOFFSET,W
	BANKSEL	GLCDX
	MOVWF	GLCDX
	BANKSEL	XRADIUS_H
	MOVF	XRADIUS_H,W
	SUBWFB	XOFFSET_H,W
	BANKSEL	GLCDX_H
	MOVWF	GLCDX_H
	BANKSEL	YORDINATE
	MOVF	YORDINATE,W
	SUBWF	YOFFSET,W
	BANKSEL	GLCDY
	MOVWF	GLCDY
	MOVLW	0
	BANKSEL	YOFFSET_H
	SUBWFB	YOFFSET_H,W
	BANKSEL	GLCDY_H
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Pset ((xoffset - yordinate), (yoffset - xradius), LineColour)
	BANKSEL	YORDINATE
	MOVF	YORDINATE,W
	SUBWF	XOFFSET,W
	BANKSEL	GLCDX
	MOVWF	GLCDX
	MOVLW	0
	BANKSEL	XOFFSET_H
	SUBWFB	XOFFSET_H,W
	BANKSEL	GLCDX_H
	MOVWF	GLCDX_H
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	SUBWF	YOFFSET,W
	BANKSEL	GLCDY
	MOVWF	GLCDY
	BANKSEL	XRADIUS_H
	MOVF	XRADIUS_H,W
	SUBWFB	YOFFSET_H,W
	BANKSEL	GLCDY_H
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Pset ((xoffset + xradius), (yoffset - yordinate), LineColour)
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	ADDWF	XOFFSET,W
	BANKSEL	GLCDX
	MOVWF	GLCDX
	BANKSEL	XRADIUS_H
	MOVF	XRADIUS_H,W
	ADDWFC	XOFFSET_H,W
	BANKSEL	GLCDX_H
	MOVWF	GLCDX_H
	BANKSEL	YORDINATE
	MOVF	YORDINATE,W
	SUBWF	YOFFSET,W
	BANKSEL	GLCDY
	MOVWF	GLCDY
	MOVLW	0
	BANKSEL	YOFFSET_H
	SUBWFB	YOFFSET_H,W
	BANKSEL	GLCDY_H
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Pset ((xoffset + yordinate), (yoffset - xradius), LineColour)
	BANKSEL	YORDINATE
	MOVF	YORDINATE,W
	ADDWF	XOFFSET,W
	BANKSEL	GLCDX
	MOVWF	GLCDX
	MOVLW	0
	BANKSEL	XOFFSET_H
	ADDWFC	XOFFSET_H,W
	BANKSEL	GLCDX_H
	MOVWF	GLCDX_H
	BANKSEL	XRADIUS
	MOVF	XRADIUS,W
	SUBWF	YOFFSET,W
	BANKSEL	GLCDY
	MOVWF	GLCDY
	BANKSEL	XRADIUS_H
	MOVF	XRADIUS_H,W
	SUBWFB	YOFFSET_H,W
	BANKSEL	GLCDY_H
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;yordinate ++
	BANKSEL	YORDINATE
	INCF	YORDINATE,F
;If radiusErr < 0 Then
	MOVF	RADIUSERR,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	RADIUSERR_H,W
	MOVWF	SYSINTEGERTEMPA_H
	CLRF	SYSINTEGERTEMPB
	CLRF	SYSINTEGERTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPLESSTHANINT
	BTFSS	SYSBYTETEMPX,0
	GOTO	ELSE11_1
;radiusErr = radiusErr + 2 * yordinate + 1
	BCF	STATUS,0
	BANKSEL	YORDINATE
	RLF	YORDINATE,W
	MOVWF	SYSTEMP3
	ADDWF	RADIUSERR,W
	MOVWF	SYSTEMP2
	MOVLW	0
	ADDWFC	RADIUSERR_H,W
	MOVWF	SYSTEMP2_H
	MOVLW	1
	ADDWF	SYSTEMP2,W
	MOVWF	RADIUSERR
	MOVLW	0
	ADDWFC	SYSTEMP2_H,W
	MOVWF	RADIUSERR_H
;else
	GOTO	ENDIF11
GLOBAL	ELSE11_1
ELSE11_1:
;xradius --
	MOVLW	1
	BANKSEL	XRADIUS
	SUBWF	XRADIUS,F
	MOVLW	0
	SUBWFB	XRADIUS_H,F
;radiusErr = radiusErr + 2 * (yordinate - xradius + 1)
	MOVF	XRADIUS,W
	SUBWF	YORDINATE,W
	MOVWF	SYSTEMP2
	CLRF	SYSTEMP3
	MOVF	XRADIUS_H,W
	SUBWFB	SYSTEMP3,W
	MOVWF	SYSTEMP2_H
	MOVLW	1
	ADDWF	SYSTEMP2,W
	MOVWF	SYSTEMP1
	MOVLW	0
	ADDWFC	SYSTEMP2_H,W
	MOVWF	SYSTEMP1_H
	MOVF	SYSTEMP1,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	SYSTEMP1_H,W
	MOVWF	SYSINTEGERTEMPA_H
	MOVLW	2
	MOVWF	SYSINTEGERTEMPB
	CLRF	SYSINTEGERTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSMULTSUBINT
	MOVF	SYSINTEGERTEMPX,W
	BANKSEL	RADIUSERR
	ADDWF	RADIUSERR,F
	MOVF	SYSINTEGERTEMPX_H,W
	ADDWFC	RADIUSERR_H,F
;end if
GLOBAL	ENDIF11
ENDIF11:
;Loop
	GOTO	SYSDOLOOP_S3
GLOBAL	SYSDOLOOP_E3
SYSDOLOOP_E3:
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (243)
GLOBAL	GLCDCLS_SSD1331
GLCDCLS_SSD1331:
;dim PrintLocX, PrintLocY as word
;initialise global variable. Required variable for Circle in all DEVICE DRIVERS- DO NOT DELETE
;GLCD_yordinate = 0
	CLRF	GLCD_YORDINATE
	CLRF	GLCD_YORDINATE_H
;PrintLocX = 0
	BANKSEL	PRINTLOCX
	CLRF	PRINTLOCX
	CLRF	PRINTLOCX_H
;PrintLocY = 0
	CLRF	PRINTLOCY
	CLRF	PRINTLOCY_H
;SSD1331_Command(0) = SSD1331_GAC_CLEAR_WINDOW
	MOVLW	37
	BANKSEL	SYSSSD1331_COMMAND_0
	MOVWF	SYSSSD1331_COMMAND_0
;SSD1331_Command(1) = 0
	CLRF	SYSSSD1331_COMMAND_1
;SSD1331_Command(2) = 0
	CLRF	SYSSSD1331_COMMAND_2
;SSD1331_Command(3) = SSD1331_GLCD_WIDTH-1
	BANKSEL	GLCDDEVICEWIDTH
	DECF	GLCDDEVICEWIDTH,W
	BANKSEL	SYSSSD1331_COMMAND_3
	MOVWF	SYSSSD1331_COMMAND_3
;SSD1331_Command(4) = SSD1331_GLCD_HEIGHT-1
	BANKSEL	GLCDDEVICEHEIGHT
	DECF	GLCDDEVICEHEIGHT,W
	BANKSEL	SYSSSD1331_COMMAND_4
	MOVWF	SYSSSD1331_COMMAND_4
;SendMultipleCommand_SSD1331( 5 )
	MOVLW	5
	BANKSEL	SSD1331BYTESTOSEND
	MOVWF	SSD1331BYTESTOSEND
	BANKSEL	STATUS
	FCALL	SENDMULTIPLECOMMAND_SSD1331
;wait SSD1331_GLCDCLS_Delay us
	MOVLW	5
	MOVWF	DELAYTEMP2
GLOBAL	DELAYUSO3
DELAYUSO3:
	CLRF	DELAYTEMP
GLOBAL	DELAYUS3
DELAYUS3:
	DECFSZ	DELAYTEMP,F
	GOTO	DELAYUS3
	DECFSZ	DELAYTEMP2,F
	GOTO	DELAYUSO3
	MOVLW	48
	MOVWF	DELAYTEMP
GLOBAL	DELAYUS4
DELAYUS4:
	DECFSZ	DELAYTEMP,F
	GOTO	DELAYUS4
;SSD1331_Command(0) = SSD1331_GAC_FILL_ENABLE_DISABLE
	MOVLW	38
	BANKSEL	SYSSSD1331_COMMAND_0
	MOVWF	SYSSSD1331_COMMAND_0
;SSD1331_Command(1) = 1     'fill 1, empty 0
	MOVLW	1
	MOVWF	SYSSSD1331_COMMAND_1
;SendMultipleCommand_SSD1331( 2 )
	MOVLW	2
	BANKSEL	SSD1331BYTESTOSEND
	MOVWF	SSD1331BYTESTOSEND
	BANKSEL	STATUS
	FCALL	SENDMULTIPLECOMMAND_SSD1331
;SSD1331_Command(0) = SSD1331_GAC_DRAW_RECTANGLE
	MOVLW	34
	BANKSEL	SYSSSD1331_COMMAND_0
	MOVWF	SYSSSD1331_COMMAND_0
;SSD1331_Command(1) = 0
	CLRF	SYSSSD1331_COMMAND_1
;SSD1331_Command(2) = 0
	CLRF	SYSSSD1331_COMMAND_2
;if SSD1331Rotation.0 = 1 then
	BANKSEL	SSD1331ROTATION
	BTFSS	SSD1331ROTATION,0
	GOTO	ELSE13_1
;SSD1331_Command(3) = SSD1331_GLCD_WIDTH-1
	BANKSEL	GLCDDEVICEWIDTH
	DECF	GLCDDEVICEWIDTH,W
	BANKSEL	SYSSSD1331_COMMAND_3
	MOVWF	SYSSSD1331_COMMAND_3
;SSD1331_Command(4) = SSD1331_GLCD_HEIGHT-1
	BANKSEL	GLCDDEVICEHEIGHT
	DECF	GLCDDEVICEHEIGHT,W
	BANKSEL	SYSSSD1331_COMMAND_4
	MOVWF	SYSSSD1331_COMMAND_4
;Else
	GOTO	ENDIF13
GLOBAL	ELSE13_1
ELSE13_1:
;SSD1331_Command(4) = SSD1331_GLCD_WIDTH-1
	BANKSEL	GLCDDEVICEWIDTH
	DECF	GLCDDEVICEWIDTH,W
	BANKSEL	SYSSSD1331_COMMAND_4
	MOVWF	SYSSSD1331_COMMAND_4
;SSD1331_Command(3) = SSD1331_GLCD_HEIGHT-1
	BANKSEL	GLCDDEVICEHEIGHT
	DECF	GLCDDEVICEHEIGHT,W
	BANKSEL	SYSSSD1331_COMMAND_3
	MOVWF	SYSSSD1331_COMMAND_3
;end if
GLOBAL	ENDIF13
ENDIF13:
;SSD1331_Command(5) = (GLCDBackground / 0x800 ) * 2    '((GLCDBackground>> 11) << 1)       ' Outline Blue
	BANKSEL	GLCDBACKGROUND
	MOVF	GLCDBACKGROUND,W
	MOVWF	SYSWORDTEMPA
	MOVF	GLCDBACKGROUND_H,W
	MOVWF	SYSWORDTEMPA_H
	CLRF	SYSWORDTEMPB
	MOVLW	8
	MOVWF	SYSWORDTEMPB_H
	FCALL	SYSDIVSUB16
	MOVF	SYSWORDTEMPA,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	MOVF	SYSWORDTEMPA_H,W
	MOVWF	SYSTEMP1_H
	MOVF	SYSTEMP1,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSTEMP1_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	2
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSMULTSUB16
	MOVF	SYSWORDTEMPX,W
	BANKSEL	SYSSSD1331_COMMAND_5
	MOVWF	SYSSSD1331_COMMAND_5
;SSD1331_Command(6) = (GLCDBackground / 0x20 ) & 0x3f  '((GLCDBackground>> 5 ) & 0x3F)     ' Outline Green
	BANKSEL	GLCDBACKGROUND
	MOVF	GLCDBACKGROUND,W
	MOVWF	SYSWORDTEMPA
	MOVF	GLCDBACKGROUND_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	32
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	FCALL	SYSDIVSUB16
	MOVF	SYSWORDTEMPA,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	MOVF	SYSWORDTEMPA_H,W
	MOVWF	SYSTEMP1_H
	MOVLW	63
	ANDWF	SYSTEMP1,W
	BANKSEL	SYSSSD1331_COMMAND_6
	MOVWF	SYSSSD1331_COMMAND_6
;SSD1331_Command(7) = (GLCDBackground * 2 ) & 0x3f     '((GLCDBackground<< 1 ) & 0x3F)     ' Outline Red
	BANKSEL	GLCDBACKGROUND
	MOVF	GLCDBACKGROUND,W
	MOVWF	SYSWORDTEMPA
	MOVF	GLCDBACKGROUND_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	2
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	FCALL	SYSMULTSUB16
	MOVF	SYSWORDTEMPX,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	MOVF	SYSWORDTEMPX_H,W
	MOVWF	SYSTEMP1_H
	MOVLW	63
	ANDWF	SYSTEMP1,W
	BANKSEL	SYSSSD1331_COMMAND_7
	MOVWF	SYSSSD1331_COMMAND_7
;SSD1331_Command(8) = (GLCDBackground / 0x800 ) * 2    '((GLCDBackground>> 11) << 1)       ' fill Blue
	BANKSEL	GLCDBACKGROUND
	MOVF	GLCDBACKGROUND,W
	MOVWF	SYSWORDTEMPA
	MOVF	GLCDBACKGROUND_H,W
	MOVWF	SYSWORDTEMPA_H
	CLRF	SYSWORDTEMPB
	MOVLW	8
	MOVWF	SYSWORDTEMPB_H
	FCALL	SYSDIVSUB16
	MOVF	SYSWORDTEMPA,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	MOVF	SYSWORDTEMPA_H,W
	MOVWF	SYSTEMP1_H
	MOVF	SYSTEMP1,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSTEMP1_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	2
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSMULTSUB16
	MOVF	SYSWORDTEMPX,W
	BANKSEL	SYSSSD1331_COMMAND_8
	MOVWF	SYSSSD1331_COMMAND_8
;SSD1331_Command(9) = (GLCDBackground / 0x20 ) & 0x3f  '((GLCDBackground>> 5 ) & 0x3F)     ' fill Green
	BANKSEL	GLCDBACKGROUND
	MOVF	GLCDBACKGROUND,W
	MOVWF	SYSWORDTEMPA
	MOVF	GLCDBACKGROUND_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	32
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	FCALL	SYSDIVSUB16
	MOVF	SYSWORDTEMPA,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	MOVF	SYSWORDTEMPA_H,W
	MOVWF	SYSTEMP1_H
	MOVLW	63
	ANDWF	SYSTEMP1,W
	BANKSEL	SYSSSD1331_COMMAND_9
	MOVWF	SYSSSD1331_COMMAND_9
;SSD1331_Command(10)= (GLCDBackground * 2 ) & 0x3f     '((GLCDBackground<< 1 ) & 0x3F)     ' fill Red
	BANKSEL	GLCDBACKGROUND
	MOVF	GLCDBACKGROUND,W
	MOVWF	SYSWORDTEMPA
	MOVF	GLCDBACKGROUND_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	2
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	FCALL	SYSMULTSUB16
	MOVF	SYSWORDTEMPX,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	MOVF	SYSWORDTEMPX_H,W
	MOVWF	SYSTEMP1_H
	MOVLW	63
	ANDWF	SYSTEMP1,W
	BANKSEL	SYSSSD1331_COMMAND_10
	MOVWF	SYSSSD1331_COMMAND_10
;SendMultipleCommand_SSD1331( 11 )
	MOVLW	11
	BANKSEL	SSD1331BYTESTOSEND
	MOVWF	SSD1331BYTESTOSEND
	BANKSEL	STATUS
	FCALL	SENDMULTIPLECOMMAND_SSD1331
;wait SSD1331_GLCDCLS_Delay us
	MOVLW	5
	MOVWF	DELAYTEMP2
GLOBAL	DELAYUSO5
DELAYUSO5:
	CLRF	DELAYTEMP
GLOBAL	DELAYUS5
DELAYUS5:
	DECFSZ	DELAYTEMP,F
	GOTO	DELAYUS5
	DECFSZ	DELAYTEMP2,F
	GOTO	DELAYUSO5
	MOVLW	48
	MOVWF	DELAYTEMP
GLOBAL	DELAYUS6
DELAYUS6:
	DECFSZ	DELAYTEMP,F
	GOTO	DELAYUS6
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (321)
GLOBAL	GLCDDRAWCHAR_SSD1331
GLCDDRAWCHAR_SSD1331:
;This has got a tad complex
;We have three major pieces
;1 The preamble - this just adjusted color and the input character
;2 The code that deals with GCB fontset
;3 The code that deals with OLED fontset
;
;You can make independent change to section 2 and 3 but they are mutual exclusive with many common pieces
;dim CharCol, CharRow, GLCDTemp as word
;CharCode -= 15
	MOVLW	15
	SUBWF	CHARCODE,F
;CharCol=0
	CLRF	CHARCOL
	CLRF	CHARCOL_H
;Calculate the pointer to the OLED fonts.
;These fonts are not multiple tables one is a straight list the other is a lookup table with data.
;Dim LocalCharCode as word
;Get key information and set up the fonts parameters
;Select case GLCDfntDefaultSize
;case 1 'This font is two font tables of an index and data
GLOBAL	SYSSELECT1CASE1
SYSSELECT1CASE1:
	DECF	GLCDFNTDEFAULTSIZE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT1CASE2
;CharCode = CharCode - 16
	MOVLW	16
	SUBWF	CHARCODE,F
;ReadTable OLEDFont1Index, CharCode, LocalCharCode
	MOVF	CHARCODE,W
	MOVWF	SYSSTRINGA
	FCALL	OLEDFONT1INDEX
	BANKSEL	LOCALCHARCODE
	MOVWF	LOCALCHARCODE
	BANKSEL	CHARCODE
	MOVF	CHARCODE,W
	MOVWF	SYSSTRINGA
	FCALL	OLEDFONT1INDEX_H
	BANKSEL	LOCALCHARCODE_H
	MOVWF	LOCALCHARCODE_H
;ReadTable OLEDFont1Data, LocalCharCode , COLSperfont
	MOVF	LOCALCHARCODE,W
	MOVWF	SYSSTRINGA
	MOVF	LOCALCHARCODE_H,W
	MOVWF	SYSSTRINGA_H
	BANKSEL	STATUS
	FCALL	OLEDFONT1DATA
	MOVWF	COLSPERFONT
;If the char is the ASC(32) a SPACE set the fontwidth =1 (not 2)
;if LocalCharCode = 1 then
	BANKSEL	LOCALCHARCODE
	MOVF	LOCALCHARCODE,W
	MOVWF	SYSWORDTEMPA
	MOVF	LOCALCHARCODE_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	1
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL16
	BTFSS	SYSBYTETEMPX,0
	GOTO	ELSE15_1
;GLCDFontWidth = 1
	MOVLW	1
	MOVWF	GLCDFONTWIDTH
;else
	GOTO	ENDIF15
GLOBAL	ELSE15_1
ELSE15_1:
;GLCDFontWidth = COLSperfont+1
	INCF	COLSPERFONT,W
	MOVWF	GLCDFONTWIDTH
;end if
GLOBAL	ENDIF15
ENDIF15:
;ROWSperfont = 7  'which is really 8 as we start at 0
	MOVLW	7
	BANKSEL	ROWSPERFONT
	MOVWF	ROWSPERFONT
;case 2 'This is one font table
	GOTO	SYSSELECTEND1
GLOBAL	SYSSELECT1CASE2
SYSSELECT1CASE2:
	MOVLW	2
	SUBWF	GLCDFNTDEFAULTSIZE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECTEND1
;CharCode = CharCode - 17
	MOVLW	17
	SUBWF	CHARCODE,F
;Pointer to table of font elements
;LocalCharCode = (CharCode * 20)
	MOVF	CHARCODE,W
	MOVWF	SYSWORDTEMPA
	CLRF	SYSWORDTEMPA_H
	MOVLW	20
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	FCALL	SYSMULTSUB16
	MOVF	SYSWORDTEMPX,W
	BANKSEL	LOCALCHARCODE
	MOVWF	LOCALCHARCODE
	MOVF	SYSWORDTEMPX_H,W
	MOVWF	LOCALCHARCODE_H
;COLSperfont = 9  'which is really 10 as we start at 0
	MOVLW	9
	BANKSEL	COLSPERFONT
	MOVWF	COLSPERFONT
;ROWSperfont=15  'which is really 16 as we start at 0
	MOVLW	15
	BANKSEL	ROWSPERFONT
	MOVWF	ROWSPERFONT
;End Select
GLOBAL	SYSSELECTEND1
SYSSELECTEND1:
;The main loop - loop throught the number of columns
;For CurrCharCol = 0 to COLSperfont  'number of columns in the font , with two row of data
	BANKSEL	CURRCHARCOL
	CLRF	CURRCHARCOL
GLOBAL	SYSFORLOOP7
SYSFORLOOP7:
;Index the pointer to the code that we are looking for as we need to do this lookup many times getting more font data
;LocalCharCode++
	BANKSEL	LOCALCHARCODE
	INCF	LOCALCHARCODE,F
	BTFSC	STATUS,2
	INCF	LOCALCHARCODE_H,F
;Select case GLCDfntDefaultSize
;case 1
GLOBAL	SYSSELECT2CASE1
SYSSELECT2CASE1:
	BANKSEL	GLCDFNTDEFAULTSIZE
	DECF	GLCDFNTDEFAULTSIZE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT2CASE2
;ReadTable OLEDFont1Data, LocalCharCode, CurrCharVal
	BANKSEL	LOCALCHARCODE
	MOVF	LOCALCHARCODE,W
	MOVWF	SYSSTRINGA
	MOVF	LOCALCHARCODE_H,W
	MOVWF	SYSSTRINGA_H
	BANKSEL	STATUS
	FCALL	OLEDFONT1DATA
	MOVWF	CURRCHARVAL
;case 2
	GOTO	SYSSELECTEND2
GLOBAL	SYSSELECT2CASE2
SYSSELECT2CASE2:
	MOVLW	2
	SUBWF	GLCDFNTDEFAULTSIZE,W
	BTFSS	STATUS,2
	GOTO	SYSSELECTEND2
;Read this 20 times... (0..COLSperfont) [ * 2 ]
;ReadTable OLEDFont2, LocalCharCode, CurrCharVal
	BANKSEL	LOCALCHARCODE
	MOVF	LOCALCHARCODE,W
	MOVWF	SYSSTRINGA
	MOVF	LOCALCHARCODE_H,W
	MOVWF	SYSSTRINGA_H
	BANKSEL	STATUS
	FCALL	OLEDFONT2
	MOVWF	CURRCHARVAL
;End Select
GLOBAL	SYSSELECTEND2
SYSSELECTEND2:
;we handle 8 or 16 pixels of height
;For CurrCharRow = 0 to ROWSperfont
	CLRF	CURRCHARROW
GLOBAL	SYSFORLOOP8
SYSFORLOOP8:
;Set the pixel
;If CurrCharVal.0 = 0 Then
	BTFSC	CURRCHARVAL,0
	GOTO	ELSE16_1
;PSet CharLocX + CurrCharCol, CharLocY + CurrCharRow, GLCDBackground
	MOVF	CURRCHARCOL,W
	ADDWF	CHARLOCX,W
	MOVWF	GLCDX
	MOVLW	0
	ADDWFC	CHARLOCX_H,W
	MOVWF	GLCDX_H
	MOVF	CURRCHARROW,W
	ADDWF	CHARLOCY,W
	MOVWF	GLCDY
	MOVLW	0
	ADDWFC	CHARLOCY_H,W
	MOVWF	GLCDY_H
	MOVF	GLCDBACKGROUND,W
	MOVWF	GLCDCOLOUR
	MOVF	GLCDBACKGROUND_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;Else
	GOTO	ENDIF16
GLOBAL	ELSE16_1
ELSE16_1:
;PSet CharLocX + CurrCharCol, CharLocY + CurrCharRow, LineColour
	MOVF	CURRCHARCOL,W
	ADDWF	CHARLOCX,W
	MOVWF	GLCDX
	MOVLW	0
	ADDWFC	CHARLOCX_H,W
	MOVWF	GLCDX_H
	MOVF	CURRCHARROW,W
	ADDWF	CHARLOCY,W
	MOVWF	GLCDY
	MOVLW	0
	ADDWFC	CHARLOCY_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;End If
GLOBAL	ENDIF16
ENDIF16:
;Rotate CurrCharVal Right
	RRF	CURRCHARVAL,F
;Set to next row of date, a second row
;if GLCDfntDefaultSize = 2 and CurrCharRow = 7 then
	MOVF	GLCDFNTDEFAULTSIZE,W
	MOVWF	SYSBYTETEMPA
	MOVLW	2
	MOVWF	SYSBYTETEMPB
	FCALL	SYSCOMPEQUAL
	MOVF	SYSBYTETEMPX,W
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	BANKSEL	CURRCHARROW
	MOVF	CURRCHARROW,W
	MOVWF	SYSBYTETEMPA
	MOVLW	7
	MOVWF	SYSBYTETEMPB
	FCALL	SYSCOMPEQUAL
	BANKSEL	SYSTEMP3
	MOVF	SYSTEMP3,W
	ANDWF	SYSBYTETEMPX,W
	MOVWF	SYSTEMP1
	BTFSS	SYSTEMP1,0
	GOTO	ENDIF17
;LocalCharCode++
	INCF	LOCALCHARCODE,F
	BTFSC	STATUS,2
	INCF	LOCALCHARCODE_H,F
;ReadTable OLEDFont2, LocalCharCode, CurrCharVal
	MOVF	LOCALCHARCODE,W
	MOVWF	SYSSTRINGA
	MOVF	LOCALCHARCODE_H,W
	MOVWF	SYSSTRINGA_H
	BANKSEL	STATUS
	FCALL	OLEDFONT2
	MOVWF	CURRCHARVAL
;end if
GLOBAL	ENDIF17
ENDIF17:
;It is the intercharacter space, put out one pixel row
;if CurrCharCol = COLSperfont then
	BANKSEL	COLSPERFONT
	MOVF	COLSPERFONT,W
	SUBWF	CURRCHARCOL,W
	BTFSS	STATUS,2
	GOTO	ENDIF18
;Put out a white intercharacter pixel/space
;GLCDTemp = CharLocX + CurrCharCol
	MOVF	CURRCHARCOL,W
	ADDWF	CHARLOCX,W
	MOVWF	GLCDTEMP
	MOVLW	0
	ADDWFC	CHARLOCX_H,W
	MOVWF	GLCDTEMP_H
;if GLCDfntDefaultSize = 2 then
	MOVLW	2
	SUBWF	GLCDFNTDEFAULTSIZE,W
	BTFSS	STATUS,2
	GOTO	ENDIF21
;GLCDTemp++
	INCF	GLCDTEMP,F
	BTFSC	STATUS,2
	INCF	GLCDTEMP_H,F
;end if
GLOBAL	ENDIF21
ENDIF21:
;PSet GLCDTemp , CharLocY + CurrCharRow, GLCDBackground
	MOVF	GLCDTEMP,W
	MOVWF	GLCDX
	MOVF	GLCDTEMP_H,W
	MOVWF	GLCDX_H
	MOVF	CURRCHARROW,W
	ADDWF	CHARLOCY,W
	MOVWF	GLCDY
	MOVLW	0
	ADDWFC	CHARLOCY_H,W
	MOVWF	GLCDY_H
	MOVF	GLCDBACKGROUND,W
	MOVWF	GLCDCOLOUR
	MOVF	GLCDBACKGROUND_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;end if
GLOBAL	ENDIF18
ENDIF18:
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	CURRCHARROW,W
	BANKSEL	ROWSPERFONT
	SUBWF	ROWSPERFONT,W
	MOVWF	SYSTEMP3
	MOVWF	SYSBYTETEMPA
	CLRF	SYSBYTETEMPB
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF19
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	INCF	CURRCHARROW,F
	GOTO	SYSFORLOOP8
;END IF
GLOBAL	ENDIF19
ENDIF19:
GLOBAL	SYSFORLOOPEND8
SYSFORLOOPEND8:
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	CURRCHARCOL,W
	SUBWF	COLSPERFONT,W
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	MOVWF	SYSBYTETEMPA
	CLRF	SYSBYTETEMPB
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF20
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	INCF	CURRCHARCOL,F
	GOTO	SYSFORLOOP7
;END IF
GLOBAL	ENDIF20
ENDIF20:
GLOBAL	SYSFORLOOPEND7
SYSFORLOOPEND7:
	RETURN

;********************************************************************************

;OVERLOADED SIGNATURE: WORD:WORD:LONG:, SOURCE: GLCD.H (1094)
GLOBAL	GLCDPRINT7
GLCDPRINT7:
;Dim SysCalcTempA As Long
;Dim GLCDPrintLoc as word
;Dim SysPrintBuffer(10)
;SysPrintBuffLen = 0
	BANKSEL	SYSPRINTBUFFLEN
	CLRF	SYSPRINTBUFFLEN
;dim OldGLCDFontWidth as Byte
;OldGLCDFontWidth = GLCDFontWidth
	BANKSEL	GLCDFONTWIDTH
	MOVF	GLCDFONTWIDTH,W
	BANKSEL	OLDGLCDFONTWIDTH
	MOVWF	OLDGLCDFONTWIDTH
;Do
GLOBAL	SYSDOLOOP_S2
SYSDOLOOP_S2:
;Divide number by 10, remainder into buffer
;SysPrintBuffLen += 1
	BANKSEL	SYSPRINTBUFFLEN
	INCF	SYSPRINTBUFFLEN,F
;SysPrintBuffer(SysPrintBuffLen) = LCDValue % 10
	MOVLW	LOW(SYSPRINTBUFFER)
	ADDWF	SYSPRINTBUFFLEN,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(SYSPRINTBUFFER)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	BANKSEL	LCDVALUE
	MOVF	LCDVALUE,W
	MOVWF	SYSLONGTEMPA
	MOVF	LCDVALUE_H,W
	MOVWF	SYSLONGTEMPA_H
	MOVF	LCDVALUE_U,W
	MOVWF	SYSLONGTEMPA_U
	MOVF	LCDVALUE_E,W
	MOVWF	SYSLONGTEMPA_E
	MOVLW	10
	MOVWF	SYSLONGTEMPB
	CLRF	SYSLONGTEMPB_H
	CLRF	SYSLONGTEMPB_U
	CLRF	SYSLONGTEMPB_E
	FCALL	SYSDIVSUB32
	MOVF	SYSLONGTEMPX,W
	MOVWF	INDF0
;LCDValue = SysCalcTempA
	MOVF	SYSCALCTEMPA,W
	MOVWF	LCDVALUE
	MOVF	SYSCALCTEMPA_H,W
	MOVWF	LCDVALUE_H
	MOVF	SYSCALCTEMPA_U,W
	MOVWF	LCDVALUE_U
	MOVF	SYSCALCTEMPA_E,W
	MOVWF	LCDVALUE_E
;Loop While LCDValue <> 0
	MOVF	LCDVALUE,W
	MOVWF	SYSLONGTEMPA
	MOVF	LCDVALUE_H,W
	MOVWF	SYSLONGTEMPA_H
	MOVF	LCDVALUE_U,W
	MOVWF	SYSLONGTEMPA_U
	MOVF	LCDVALUE_E,W
	MOVWF	SYSLONGTEMPA_E
	CLRF	SYSLONGTEMPB
	CLRF	SYSLONGTEMPB_H
	CLRF	SYSLONGTEMPB_U
	CLRF	SYSLONGTEMPB_E
	FCALL	SYSCOMPEQUAL32
	COMF	SYSBYTETEMPX,F
	BTFSC	SYSBYTETEMPX,0
	GOTO	SYSDOLOOP_S2
GLOBAL	SYSDOLOOP_E2
SYSDOLOOP_E2:
;Display
;GLCDPrintLoc = PrintLocX
	BANKSEL	PRINTLOCX
	MOVF	PRINTLOCX,W
	BANKSEL	GLCDPRINTLOC
	MOVWF	GLCDPRINTLOC
	BANKSEL	PRINTLOCX_H
	MOVF	PRINTLOCX_H,W
	BANKSEL	GLCDPRINTLOC_H
	MOVWF	GLCDPRINTLOC_H
;For GLCDPrint_String_Counter = SysPrintBuffLen To 1 Step -1
	BANKSEL	SYSPRINTBUFFLEN
	MOVF	SYSPRINTBUFFLEN,W
	BANKSEL	GLCDPRINT_STRING_COUNTER
	MOVWF	GLCDPRINT_STRING_COUNTER
GLOBAL	SYSFORLOOP3
SYSFORLOOP3:
;INIT SYSFORLOOPSTEP2 :#0
	MOVLW	255
	BANKSEL	SYSFORLOOPSTEP2
	MOVWF	SYSFORLOOPSTEP2
	MOVWF	SYSFORLOOPSTEP2_H
;GLCDDrawChar GLCDPrintLoc, PrintLocY, SysPrintBuffer(GLCDPrint_String_Counter) + 48
	BANKSEL	GLCDPRINTLOC
	MOVF	GLCDPRINTLOC,W
	MOVWF	CHARLOCX
	MOVF	GLCDPRINTLOC_H,W
	MOVWF	CHARLOCX_H
	BANKSEL	PRINTLOCY
	MOVF	PRINTLOCY,W
	BANKSEL	CHARLOCY
	MOVWF	CHARLOCY
	BANKSEL	PRINTLOCY_H
	MOVF	PRINTLOCY_H,W
	BANKSEL	CHARLOCY_H
	MOVWF	CHARLOCY_H
	MOVLW	LOW(SYSPRINTBUFFER)
	ADDWF	GLCDPRINT_STRING_COUNTER,W
	MOVWF	FSR0L
	MOVLW	0
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	MOVLW	HIGH(SYSPRINTBUFFER)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVLW	48
	ADDWF	INDF0,W
	BANKSEL	CHARCODE
	MOVWF	CHARCODE
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	CALL	GLCDDRAWCHAR_SSD1331
;GLCDPrintIncrementPixelPositionMacro
;Macro Source: glcd.h (1219)
;GLCDPrintLoc = GLCDPrintLoc + ( GLCDFontWidth * GLCDfntDefaultsize ) + GLCDfntDefaultsize - 1
	MOVF	GLCDFONTWIDTH,W
	MOVWF	SYSBYTETEMPA
	MOVF	GLCDFNTDEFAULTSIZE,W
	MOVWF	SYSBYTETEMPB
	FCALL	SYSMULTSUB
	MOVF	SYSBYTETEMPX,W
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	BANKSEL	GLCDPRINTLOC
	ADDWF	GLCDPRINTLOC,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	MOVLW	0
	BANKSEL	GLCDPRINTLOC_H
	ADDWFC	GLCDPRINTLOC_H,W
	BANKSEL	SYSTEMP1_H
	MOVWF	SYSTEMP1_H
	BANKSEL	GLCDFNTDEFAULTSIZE
	MOVF	GLCDFNTDEFAULTSIZE,W
	BANKSEL	SYSTEMP1
	ADDWF	SYSTEMP1,W
	MOVWF	SYSTEMP2
	MOVLW	0
	ADDWFC	SYSTEMP1_H,W
	MOVWF	SYSTEMP2_H
	MOVLW	1
	SUBWF	SYSTEMP2,W
	BANKSEL	GLCDPRINTLOC
	MOVWF	GLCDPRINTLOC
	MOVLW	0
	BANKSEL	SYSTEMP2_H
	SUBWFB	SYSTEMP2_H,W
	BANKSEL	GLCDPRINTLOC_H
	MOVWF	GLCDPRINTLOC_H
;Next
;INTEGER NEGATIVE STEP HANDLER IN FOR-NEXT STATEMENT
	BANKSEL	SYSFORLOOPSTEP2_H
	BTFSS	SYSFORLOOPSTEP2_H,7
	GOTO	ELSE4_1
	BANKSEL	GLCDPRINT_STRING_COUNTER
;IF ( GLCDPRINT_STRING_COUNTER - 1) } -SYSFORLOOPSTEP2 THEN :#3N
	DECF	GLCDPRINT_STRING_COUNTER,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	COMF	SYSFORLOOPSTEP2,W
	MOVWF	SYSTEMP2
	COMF	SYSFORLOOPSTEP2_H,W
	MOVWF	SYSTEMP2_H
	INCF	SYSTEMP2,F
	BTFSC	STATUS,2
	INCF	SYSTEMP2_H,F
	MOVF	SYSTEMP1,W
	MOVWF	SYSINTEGERTEMPA
	CLRF	SYSINTEGERTEMPA_H
	MOVF	SYSTEMP2,W
	MOVWF	SYSINTEGERTEMPB
	MOVF	SYSTEMP2_H,W
	MOVWF	SYSINTEGERTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPLESSTHANINT
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF5
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A NEGATIVE VALUE
	BANKSEL	SYSFORLOOPSTEP2
	MOVF	SYSFORLOOPSTEP2,W
	BANKSEL	GLCDPRINT_STRING_COUNTER
	ADDWF	GLCDPRINT_STRING_COUNTER,F
	GOTO	SYSFORLOOP3
;END IF
GLOBAL	ENDIF5
ENDIF5:
	GOTO	ENDIF4
GLOBAL	ELSE4_1
ELSE4_1:
;INTEGER POSITIVE STEP HANDLER IN FOR-NEXT STATEMENT
	BANKSEL	GLCDPRINT_STRING_COUNTER
;IF (1 - GLCDPRINT_STRING_COUNTER) } SYSFORLOOPSTEP2 THEN :#3P
	MOVF	GLCDPRINT_STRING_COUNTER,W
	SUBLW	1
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	MOVWF	SYSINTEGERTEMPA
	CLRF	SYSINTEGERTEMPA_H
	MOVF	SYSFORLOOPSTEP2,W
	MOVWF	SYSINTEGERTEMPB
	MOVF	SYSFORLOOPSTEP2_H,W
	MOVWF	SYSINTEGERTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPLESSTHANINT
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF6
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	BANKSEL	SYSFORLOOPSTEP2
	MOVF	SYSFORLOOPSTEP2,W
	BANKSEL	GLCDPRINT_STRING_COUNTER
	ADDWF	GLCDPRINT_STRING_COUNTER,F
	GOTO	SYSFORLOOP3
;END IF
GLOBAL	ENDIF6
ENDIF6:
;END IF
GLOBAL	ENDIF4
ENDIF4:
GLOBAL	SYSFORLOOPEND3
SYSFORLOOPEND3:
;Update the current X position for GLCDPrintString
;PrintLocX = GLCDPrintLoc
	MOVF	GLCDPRINTLOC,W
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	BANKSEL	GLCDPRINTLOC_H
	MOVF	GLCDPRINTLOC_H,W
	BANKSEL	PRINTLOCX_H
	MOVWF	PRINTLOCX_H
;GLCDFontWidth = OldGLCDFontWidth
	MOVF	OLDGLCDFONTWIDTH,W
	BANKSEL	GLCDFONTWIDTH
	MOVWF	GLCDFONTWIDTH
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (681)
GLOBAL	GLCDROTATE_SSD1331
GLCDROTATE_SSD1331:
;SendCommand_SSD1331(SSD1331_Set_Column_Address) ' Column addr set
	MOVLW	21
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331 0
	BANKSEL	SSD1331SENDBYTE
	CLRF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331 SSD1331_GLCD_WIDTH-1
	DECF	GLCDDEVICEWIDTH,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(SSD1331_Set_Row_Address) ' Row addr set
	MOVLW	117
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331 0
	BANKSEL	SSD1331SENDBYTE
	CLRF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331 SSD1331_GLCD_HEIGHT-1
	DECF	GLCDDEVICEHEIGHT,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;repeat 4608
	BANKSEL	SYSREPEATTEMP2
	CLRF	SYSREPEATTEMP2
	MOVLW	18
	MOVWF	SYSREPEATTEMP2_H
GLOBAL	SYSREPEATLOOP2
SYSREPEATLOOP2:
;SendData_SSD1331( GLCDBackground_H )
	BANKSEL	GLCDBACKGROUND_H
	MOVF	GLCDBACKGROUND_H,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDDATA_SSD1331
;SendData_SSD1331( GLCDBackground )
	MOVF	GLCDBACKGROUND,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDDATA_SSD1331
;end Repeat
	BANKSEL	SYSREPEATTEMP2
	DECFSZ	SYSREPEATTEMP2,F
	GOTO	SYSREPEATLOOP2
	DECFSZ	SYSREPEATTEMP2_H,F
	GOTO	SYSREPEATLOOP2
GLOBAL	SYSREPEATLOOPEND2
SYSREPEATLOOPEND2:
;select case SSD1331Rotation
;case PORTRAIT
GLOBAL	SYSSELECT3CASE1
SYSSELECT3CASE1:
	MOVLW	4
	SUBWF	SSD1331ROTATION,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT3CASE2
;SSD1331_GLCD_WIDTH = GLCD_HEIGHT
	MOVLW	64
	BANKSEL	GLCDDEVICEWIDTH
	MOVWF	GLCDDEVICEWIDTH
	CLRF	GLCDDEVICEWIDTH_H
;SSD1331_GLCD_HEIGHT = GLCD_WIDTH
	MOVLW	96
	MOVWF	GLCDDEVICEHEIGHT
	CLRF	GLCDDEVICEHEIGHT_H
;Not requrired
;SSD1331_Command(0) = SSD1331_GAC_CLEAR_WINDOW
;SSD1331_Command(1) = 0
;SSD1331_Command(2) = 0
;SSD1331_Command(3) = SSD1331_GLCD_WIDTH-1
;SSD1331_Command(4) = SSD1331_GLCD_HEIGHT-1
;SendMultipleCommand_SSD1331( 5 )
;SendCommand_SSD1331(0xA0)
	MOVLW	160
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x60)
	MOVLW	96
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;case LANDSCAPE
	GOTO	SYSSELECTEND3
GLOBAL	SYSSELECT3CASE2
SYSSELECT3CASE2:
	DECF	SSD1331ROTATION,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT3CASE3
;SSD1331_GLCD_WIDTH = GLCD_WIDTH
	MOVLW	96
	BANKSEL	GLCDDEVICEWIDTH
	MOVWF	GLCDDEVICEWIDTH
	CLRF	GLCDDEVICEWIDTH_H
;SSD1331_GLCD_HEIGHT = GLCD_HEIGHT
	MOVLW	64
	MOVWF	GLCDDEVICEHEIGHT
	CLRF	GLCDDEVICEHEIGHT_H
;Not requrired
;SSD1331_Command(0) = SSD1331_GAC_CLEAR_WINDOW
;SSD1331_Command(1) = 0
;SSD1331_Command(2) = 0
;SSD1331_Command(3) = SSD1331_GLCD_WIDTH-1
;SSD1331_Command(4) = SSD1331_GLCD_HEIGHT-1
;SendMultipleCommand_SSD1331( 5 )
;SendCommand_SSD1331(0xA0)    'Set remap & data format 0111 0000
	MOVLW	160
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x72)    ' RGB colour
	MOVLW	114
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;case PORTRAIT_REV
	GOTO	SYSSELECTEND3
GLOBAL	SYSSELECT3CASE3
SYSSELECT3CASE3:
	MOVLW	2
	SUBWF	SSD1331ROTATION,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT3CASE4
;SSD1331_GLCD_WIDTH = GLCD_HEIGHT
	MOVLW	64
	BANKSEL	GLCDDEVICEWIDTH
	MOVWF	GLCDDEVICEWIDTH
	CLRF	GLCDDEVICEWIDTH_H
;SSD1331_GLCD_HEIGHT = GLCD_WIDTH
	MOVLW	96
	MOVWF	GLCDDEVICEHEIGHT
	CLRF	GLCDDEVICEHEIGHT_H
;Not requrired
;SSD1331_Command(0) = SSD1331_GAC_CLEAR_WINDOW
;SSD1331_Command(1) = 0
;SSD1331_Command(2) = 0
;SSD1331_Command(3) = SSD1331_GLCD_WIDTH-1
;SSD1331_Command(4) = SSD1331_GLCD_HEIGHT-1
;SendMultipleCommand_SSD1331( 5 )
;SendCommand_SSD1331(0xA0)
	MOVLW	160
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x72)
	MOVLW	114
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;case LANDSCAPE_REV
	GOTO	SYSSELECTEND3
GLOBAL	SYSSELECT3CASE4
SYSSELECT3CASE4:
	MOVLW	3
	SUBWF	SSD1331ROTATION,W
	BTFSS	STATUS,2
	GOTO	SYSSELECT3CASE5
;SSD1331_GLCD_WIDTH = GLCD_WIDTH
	MOVLW	96
	BANKSEL	GLCDDEVICEWIDTH
	MOVWF	GLCDDEVICEWIDTH
	CLRF	GLCDDEVICEWIDTH_H
;SSD1331_GLCD_HEIGHT = GLCD_HEIGHT
	MOVLW	64
	MOVWF	GLCDDEVICEHEIGHT
	CLRF	GLCDDEVICEHEIGHT_H
;Not requrired
;SSD1331_Command(0) = SSD1331_GAC_CLEAR_WINDOW
;SSD1331_Command(1) = 0
;SSD1331_Command(2) = 0
;SSD1331_Command(3) = SSD1331_GLCD_WIDTH-1
;SSD1331_Command(4) = SSD1331_GLCD_HEIGHT-1
;SendMultipleCommand_SSD1331( 5 )
;SendCommand_SSD1331(0xA0)
	MOVLW	160
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x60)
	MOVLW	96
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;case else
	GOTO	SYSSELECTEND3
GLOBAL	SYSSELECT3CASE5
SYSSELECT3CASE5:
;SSD1331_GLCD_WIDTH = GLCD_WIDTH
	MOVLW	96
	BANKSEL	GLCDDEVICEWIDTH
	MOVWF	GLCDDEVICEWIDTH
	CLRF	GLCDDEVICEWIDTH_H
;SSD1331_GLCD_HEIGHT = GLCD_HEIGHT
	MOVLW	64
	MOVWF	GLCDDEVICEHEIGHT
	CLRF	GLCDDEVICEHEIGHT_H
;Not requrired
;SSD1331_Command(0) = SSD1331_GAC_CLEAR_WINDOW
;SSD1331_Command(1) = 0
;SSD1331_Command(2) = 0
;SSD1331_Command(3) = SSD1331_GLCD_WIDTH-1
;SSD1331_Command(4) = SSD1331_GLCD_HEIGHT-1
;SendMultipleCommand_SSD1331( 5 )
;SendCommand_SSD1331(0xA0)    'Set remap & data format 0111 0000
	MOVLW	160
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(0x72)    ' RGB colour
	MOVLW	114
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;end select
GLOBAL	SYSSELECTEND3
SYSSELECTEND3:
	RETURN

;********************************************************************************

;SOURCE: STRING.H (76)
GLOBAL	FN_STR
FN_STR:
;SysCharCount = 0
	BANKSEL	SYSCHARCOUNT
	CLRF	SYSCHARCOUNT
;Dim SysCalcTempX As Word
;Ten Thousands
;IF SysValTemp >= 10000 then
	MOVF	SYSVALTEMP,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSVALTEMP_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	16
	MOVWF	SYSWORDTEMPB
	MOVLW	39
	MOVWF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPLESSTHAN16
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF54
;SysStrData = SysValTemp / 10000
	BANKSEL	SYSVALTEMP
	MOVF	SYSVALTEMP,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSVALTEMP_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	16
	MOVWF	SYSWORDTEMPB
	MOVLW	39
	MOVWF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSDIVSUB16
	MOVF	SYSWORDTEMPA,W
	BANKSEL	SYSSTRDATA
	MOVWF	SYSSTRDATA
;SysValTemp = SysCalcTempX
	MOVF	SYSCALCTEMPX,W
	MOVWF	SYSVALTEMP
	MOVF	SYSCALCTEMPX_H,W
	MOVWF	SYSVALTEMP_H
;SysCharCount += 1
	INCF	SYSCHARCOUNT,F
;Str(SysCharCount) = SysStrData + 48
	MOVLW	LOW(STR)
	ADDWF	SYSCHARCOUNT,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(STR)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVLW	48
	ADDWF	SYSSTRDATA,W
	MOVWF	INDF0
;Goto SysValThousands
	GOTO	SYSVALTHOUSANDS
;End If
GLOBAL	ENDIF54
ENDIF54:
;Thousands
;IF SysValTemp >= 1000 then
	BANKSEL	SYSVALTEMP
	MOVF	SYSVALTEMP,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSVALTEMP_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	232
	MOVWF	SYSWORDTEMPB
	MOVLW	3
	MOVWF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPLESSTHAN16
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF55
GLOBAL	SYSVALTHOUSANDS
SYSVALTHOUSANDS:
;SysStrData = SysValTemp / 1000
	BANKSEL	SYSVALTEMP
	MOVF	SYSVALTEMP,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSVALTEMP_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	232
	MOVWF	SYSWORDTEMPB
	MOVLW	3
	MOVWF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSDIVSUB16
	MOVF	SYSWORDTEMPA,W
	BANKSEL	SYSSTRDATA
	MOVWF	SYSSTRDATA
;SysValTemp = SysCalcTempX
	MOVF	SYSCALCTEMPX,W
	MOVWF	SYSVALTEMP
	MOVF	SYSCALCTEMPX_H,W
	MOVWF	SYSVALTEMP_H
;SysCharCount += 1
	INCF	SYSCHARCOUNT,F
;Str(SysCharCount) = SysStrData + 48
	MOVLW	LOW(STR)
	ADDWF	SYSCHARCOUNT,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(STR)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVLW	48
	ADDWF	SYSSTRDATA,W
	MOVWF	INDF0
;Goto SysValHundreds
	GOTO	SYSVALHUNDREDS
;End If
GLOBAL	ENDIF55
ENDIF55:
;Hundreds
;IF SysValTemp >= 100 then
	BANKSEL	SYSVALTEMP
	MOVF	SYSVALTEMP,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSVALTEMP_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	100
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPLESSTHAN16
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF56
GLOBAL	SYSVALHUNDREDS
SYSVALHUNDREDS:
;SysStrData = SysValTemp / 100
	BANKSEL	SYSVALTEMP
	MOVF	SYSVALTEMP,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSVALTEMP_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	100
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSDIVSUB16
	MOVF	SYSWORDTEMPA,W
	BANKSEL	SYSSTRDATA
	MOVWF	SYSSTRDATA
;SysValTemp = SysCalcTempX
	MOVF	SYSCALCTEMPX,W
	MOVWF	SYSVALTEMP
	MOVF	SYSCALCTEMPX_H,W
	MOVWF	SYSVALTEMP_H
;SysCharCount += 1
	INCF	SYSCHARCOUNT,F
;Str(SysCharCount) = SysStrData + 48
	MOVLW	LOW(STR)
	ADDWF	SYSCHARCOUNT,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(STR)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVLW	48
	ADDWF	SYSSTRDATA,W
	MOVWF	INDF0
;Goto SysValTens
	GOTO	SYSVALTENS
;End If
GLOBAL	ENDIF56
ENDIF56:
;Tens
;IF SysValTemp >= 10 Then
	BANKSEL	SYSVALTEMP
	MOVF	SYSVALTEMP,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSVALTEMP_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	10
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSCOMPLESSTHAN16
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF57
GLOBAL	SYSVALTENS
SYSVALTENS:
;SysStrData = SysValTemp / 10
	BANKSEL	SYSVALTEMP
	MOVF	SYSVALTEMP,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSVALTEMP_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	10
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSDIVSUB16
	MOVF	SYSWORDTEMPA,W
	BANKSEL	SYSSTRDATA
	MOVWF	SYSSTRDATA
;SysValTemp = SysCalcTempX
	MOVF	SYSCALCTEMPX,W
	MOVWF	SYSVALTEMP
	MOVF	SYSCALCTEMPX_H,W
	MOVWF	SYSVALTEMP_H
;SysCharCount += 1
	INCF	SYSCHARCOUNT,F
;Str(SysCharCount) = SysStrData + 48
	MOVLW	LOW(STR)
	ADDWF	SYSCHARCOUNT,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(STR)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVLW	48
	ADDWF	SYSSTRDATA,W
	MOVWF	INDF0
;End If
GLOBAL	ENDIF57
ENDIF57:
;Ones
;SysCharCount += 1
	BANKSEL	SYSCHARCOUNT
	INCF	SYSCHARCOUNT,F
;Str(SysCharCount) = SysValTemp + 48
	MOVLW	LOW(STR)
	ADDWF	SYSCHARCOUNT,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(STR)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVLW	48
	ADDWF	SYSVALTEMP,W
	MOVWF	INDF0
;SysValTemp = SysCalcTempX
	MOVF	SYSCALCTEMPX,W
	MOVWF	SYSVALTEMP
	MOVF	SYSCALCTEMPX_H,W
	MOVWF	SYSVALTEMP_H
;Str(0) = SysCharCount
	MOVF	SYSCHARCOUNT,W
	BANKSEL	SYSSTR_0
	MOVWF	SYSSTR_0
	BANKSEL	STATUS
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (1374)
GLOBAL	SYSCOPYSTRING
SYSCOPYSTRING:
;Dim SysCalcTempA As Byte
;Dim SysStringLength As Byte
;Get and copy length
;movf INDF0, W
	MOVF	INDF0, W
;movwf SysCalcTempA
	MOVWF	SYSCALCTEMPA
;movwf INDF1
	MOVWF	INDF1
;goto SysCopyStringCheck
	GOTO	SYSCOPYSTRINGCHECK
;When appending, add length to counter
GLOBAL	SYSCOPYSTRINGPART
SYSCOPYSTRINGPART:
;movf INDF0, W
	MOVF	INDF0, W
;movwf SysCalcTempA
	MOVWF	SYSCALCTEMPA
;addwf SysStringLength, F
	ADDWF	SYSSTRINGLENGTH, F
GLOBAL	SYSCOPYSTRINGCHECK
SYSCOPYSTRINGCHECK:
;Exit if length = 0
;movf SysCalcTempA,F
	MOVF	SYSCALCTEMPA,F
;btfsc STATUS,Z
	BTFSC	STATUS,2
;return
	RETURN
GLOBAL	SYSSTRINGCOPY
SYSSTRINGCOPY:
;Increment pointers
;addfsr 0, 1
	ADDFSR	0, 1
;addfsr 1, 1
	ADDFSR	1, 1
;Copy character
;movf INDF0, W
	MOVF	INDF0, W
;movwf INDF1
	MOVWF	INDF1
;decfsz SysCalcTempA, F
	DECFSZ	SYSCALCTEMPA, F
;goto SysStringCopy
	GOTO	SYSSTRINGCOPY
	RETURN

;********************************************************************************

GLOBAL	SYSSTRINGTABLES
SYSSTRINGTABLES:
	MOVF	SYSSTRINGA_H,W
	MOVWF	PCLATH
	MOVF	SYSSTRINGA,W
	INCF	SYSSTRINGA,F
	BTFSC	STATUS,2
	INCF	SYSSTRINGA_H,F
	MOVWF	PCL

GLOBAL	STRINGTABLE1
STRINGTABLE1:
	RETLW	15
	RETLW	71	;G
	RETLW	114	;R
	RETLW	101	;E
	RETLW	97	;A
	RETLW	116	;T
	RETLW	32	; 
	RETLW	67	;C
	RETLW	111	;O
	RETLW	119	;W
	RETLW	32	; 
	RETLW	66	;B
	RETLW	65	;A
	RETLW	83	;S
	RETLW	73	;I
	RETLW	67	;C


GLOBAL	STRINGTABLE2
STRINGTABLE2:
	RETLW	0


GLOBAL	STRINGTABLE3
STRINGTABLE3:
	RETLW	4
	RETLW	50	;2
	RETLW	48	;0
	RETLW	50	;2
	RETLW	50	;2


GLOBAL	STRINGTABLE4
STRINGTABLE4:
	RETLW	12
	RETLW	83	;S
	RETLW	83	;S
	RETLW	68	;D
	RETLW	49	;1
	RETLW	51	;3
	RETLW	51	;3
	RETLW	49	;1
	RETLW	32	; 
	RETLW	71	;G
	RETLW	76	;L
	RETLW	67	;C
	RETLW	68	;D


GLOBAL	STRINGTABLE5
STRINGTABLE5:
	RETLW	10
	RETLW	98	;B
	RETLW	121	;Y
	RETLW	32	; 
	RETLW	65	;A
	RETLW	110	;N
	RETLW	111	;O
	RETLW	98	;B
	RETLW	105	;I
	RETLW	117	;U
	RETLW	109	;M


GLOBAL	STRINGTABLE6
STRINGTABLE6:
	RETLW	16
	RETLW	71	;G
	RETLW	76	;L
	RETLW	67	;C
	RETLW	68	;D
	RETLW	80	;P
	RETLW	114	;R
	RETLW	105	;I
	RETLW	110	;N
	RETLW	116	;T
	RETLW	32	; 
	RETLW	83	;S
	RETLW	116	;T
	RETLW	114	;R
	RETLW	105	;I
	RETLW	110	;N
	RETLW	103	;G


GLOBAL	STRINGTABLE7
STRINGTABLE7:
	RETLW	15
	RETLW	83	;S
	RETLW	83	;S
	RETLW	68	;D
	RETLW	49	;1
	RETLW	51	;3
	RETLW	51	;3
	RETLW	49	;1
	RETLW	32	; 
	RETLW	76	;L
	RETLW	105	;I
	RETLW	98	;B
	RETLW	114	;R
	RETLW	97	;A
	RETLW	114	;R
	RETLW	121	;Y


GLOBAL	STRINGTABLE8
STRINGTABLE8:
	RETLW	8
	RETLW	80	;P
	RETLW	114	;R
	RETLW	105	;I
	RETLW	110	;N
	RETLW	116	;T
	RETLW	83	;S
	RETLW	116	;T
	RETLW	114	;R


GLOBAL	STRINGTABLE9
STRINGTABLE9:
	RETLW	3
	RETLW	77	;M
	RETLW	104	;H
	RETLW	122	;Z


GLOBAL	STRINGTABLE10
STRINGTABLE10:
	RETLW	7
	RETLW	68	;D
	RETLW	114	;R
	RETLW	97	;A
	RETLW	119	;W
	RETLW	83	;S
	RETLW	116	;T
	RETLW	114	;R


GLOBAL	STRINGTABLE11
STRINGTABLE11:
	RETLW	1
	RETLW	104	;H


GLOBAL	STRINGTABLE59
STRINGTABLE59:
	RETLW	1
	RETLW	32	; 


;********************************************************************************

;SOURCE: PICAS.H (26)
GLOBAL	_LINE
_LINE:
;dim LineStepX as integer
;dim LineStepY as integer
;dim LineDiffX, LineDiffY as integer
;dim LineDiffX_x2, LineDiffY_x2 as integer
;dim LineErr as integer
;LineDiffX = 0
	CLRF	LINEDIFFX
	CLRF	LINEDIFFX_H
;LineDiffY = 0
	CLRF	LINEDIFFY
	CLRF	LINEDIFFY_H
;LineStepX = 0
	CLRF	LINESTEPX
	CLRF	LINESTEPX_H
;LineStepY = 0
	CLRF	LINESTEPY
	CLRF	LINESTEPY_H
;LineDiffX_x2 = 0
	CLRF	LINEDIFFX_X2
	CLRF	LINEDIFFX_X2_H
;LineDiffY_x2 = 0
	CLRF	LINEDIFFY_X2
	CLRF	LINEDIFFY_X2_H
;LineErr = 0
	CLRF	LINEERR
	CLRF	LINEERR_H
;LineDiffX =  LineX2 -   LineX1
	MOVF	LINEX1,W
	SUBWF	LINEX2,W
	MOVWF	LINEDIFFX
	MOVF	LINEX1_H,W
	SUBWFB	LINEX2_H,W
	MOVWF	LINEDIFFX_H
;LineDiffY =  LineY2 -   LineY1
	MOVF	LINEY1,W
	SUBWF	LINEY2,W
	MOVWF	LINEDIFFY
	MOVF	LINEY1_H,W
	SUBWFB	LINEY2_H,W
	MOVWF	LINEDIFFY_H
;if (LineDiffX > 0) then
	MOVF	LINEDIFFX,W
	MOVWF	SYSINTEGERTEMPB
	MOVF	LINEDIFFX_H,W
	MOVWF	SYSINTEGERTEMPB_H
	CLRF	SYSINTEGERTEMPA
	CLRF	SYSINTEGERTEMPA_H
	FCALL	SYSCOMPLESSTHANINT
	BTFSS	SYSBYTETEMPX,0
	GOTO	ELSE32_1
;LineStepX = 1
	MOVLW	1
	MOVWF	LINESTEPX
	CLRF	LINESTEPX_H
;else
	GOTO	ENDIF32
GLOBAL	ELSE32_1
ELSE32_1:
;LineStepX = -1
	MOVLW	255
	MOVWF	LINESTEPX
	MOVWF	LINESTEPX_H
;end if
GLOBAL	ENDIF32
ENDIF32:
;if (LineDiffY > 0) then
	MOVF	LINEDIFFY,W
	MOVWF	SYSINTEGERTEMPB
	MOVF	LINEDIFFY_H,W
	MOVWF	SYSINTEGERTEMPB_H
	CLRF	SYSINTEGERTEMPA
	CLRF	SYSINTEGERTEMPA_H
	FCALL	SYSCOMPLESSTHANINT
	BTFSS	SYSBYTETEMPX,0
	GOTO	ELSE33_1
;LineStepY = 1
	MOVLW	1
	MOVWF	LINESTEPY
	CLRF	LINESTEPY_H
;else
	GOTO	ENDIF33
GLOBAL	ELSE33_1
ELSE33_1:
;LineStepY = -1
	MOVLW	255
	MOVWF	LINESTEPY
	MOVWF	LINESTEPY_H
;end if
GLOBAL	ENDIF33
ENDIF33:
;LineDiffX = LineStepX * LineDiffX
	MOVF	LINESTEPX,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	LINESTEPX_H,W
	MOVWF	SYSINTEGERTEMPA_H
	MOVF	LINEDIFFX,W
	MOVWF	SYSINTEGERTEMPB
	MOVF	LINEDIFFX_H,W
	MOVWF	SYSINTEGERTEMPB_H
	FCALL	SYSMULTSUBINT
	MOVF	SYSINTEGERTEMPX,W
	MOVWF	LINEDIFFX
	MOVF	SYSINTEGERTEMPX_H,W
	MOVWF	LINEDIFFX_H
;LineDiffY = LineStepY * LineDiffY
	MOVF	LINESTEPY,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	LINESTEPY_H,W
	MOVWF	SYSINTEGERTEMPA_H
	MOVF	LINEDIFFY,W
	MOVWF	SYSINTEGERTEMPB
	MOVF	LINEDIFFY_H,W
	MOVWF	SYSINTEGERTEMPB_H
	FCALL	SYSMULTSUBINT
	MOVF	SYSINTEGERTEMPX,W
	MOVWF	LINEDIFFY
	MOVF	SYSINTEGERTEMPX_H,W
	MOVWF	LINEDIFFY_H
;LineDiffX_x2 = LineDiffX*2
	MOVF	LINEDIFFX,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	LINEDIFFX_H,W
	MOVWF	SYSINTEGERTEMPA_H
	MOVLW	2
	MOVWF	SYSINTEGERTEMPB
	CLRF	SYSINTEGERTEMPB_H
	FCALL	SYSMULTSUBINT
	MOVF	SYSINTEGERTEMPX,W
	MOVWF	LINEDIFFX_X2
	MOVF	SYSINTEGERTEMPX_H,W
	MOVWF	LINEDIFFX_X2_H
;LineDiffY_x2 = LineDiffY*2
	MOVF	LINEDIFFY,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	LINEDIFFY_H,W
	MOVWF	SYSINTEGERTEMPA_H
	MOVLW	2
	MOVWF	SYSINTEGERTEMPB
	CLRF	SYSINTEGERTEMPB_H
	FCALL	SYSMULTSUBINT
	MOVF	SYSINTEGERTEMPX,W
	MOVWF	LINEDIFFY_X2
	MOVF	SYSINTEGERTEMPX_H,W
	MOVWF	LINEDIFFY_X2_H
;if ( LineDiffX >= LineDiffY) then
	MOVF	LINEDIFFX,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	LINEDIFFX_H,W
	MOVWF	SYSINTEGERTEMPA_H
	MOVF	LINEDIFFY,W
	MOVWF	SYSINTEGERTEMPB
	MOVF	LINEDIFFY_H,W
	MOVWF	SYSINTEGERTEMPB_H
	FCALL	SYSCOMPLESSTHANINT
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ELSE34_1
;LineErr = LineDiffY_x2 - LineDiffX
	MOVF	LINEDIFFX,W
	SUBWF	LINEDIFFY_X2,W
	MOVWF	LINEERR
	MOVF	LINEDIFFX_H,W
	SUBWFB	LINEDIFFY_X2_H,W
	MOVWF	LINEERR_H
;do while (   LineX1 <>  LineX2 )
GLOBAL	SYSDOLOOP_S5
SYSDOLOOP_S5:
	MOVF	LINEX1,W
	MOVWF	SYSWORDTEMPA
	MOVF	LINEX1_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVF	LINEX2,W
	MOVWF	SYSWORDTEMPB
	MOVF	LINEX2_H,W
	MOVWF	SYSWORDTEMPB_H
	FCALL	SYSCOMPEQUAL16
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	SYSDOLOOP_E5
;PSet (   LineX1,   LineY1, LineColour )
	MOVF	LINEX1,W
	MOVWF	GLCDX
	MOVF	LINEX1_H,W
	MOVWF	GLCDX_H
	MOVF	LINEY1,W
	MOVWF	GLCDY
	MOVF	LINEY1_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;LineX1 += LineStepX
	MOVF	LINESTEPX,W
	ADDWF	LINEX1,F
	MOVF	LINESTEPX_H,W
	ADDWFC	LINEX1_H,F
;if ( LineErr < 0) then
	MOVF	LINEERR,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	LINEERR_H,W
	MOVWF	SYSINTEGERTEMPA_H
	CLRF	SYSINTEGERTEMPB
	CLRF	SYSINTEGERTEMPB_H
	FCALL	SYSCOMPLESSTHANINT
	BTFSS	SYSBYTETEMPX,0
	GOTO	ELSE35_1
;LineErr += LineDiffY_x2
	MOVF	LINEDIFFY_X2,W
	ADDWF	LINEERR,F
	MOVF	LINEDIFFY_X2_H,W
	ADDWFC	LINEERR_H,F
;else
	GOTO	ENDIF35
GLOBAL	ELSE35_1
ELSE35_1:
;LineErr += ( LineDiffY_x2 - LineDiffX_x2 )
	MOVF	LINEDIFFX_X2,W
	SUBWF	LINEDIFFY_X2,W
	BANKSEL	SYSTEMP2
	MOVWF	SYSTEMP2
	BANKSEL	LINEDIFFX_X2_H
	MOVF	LINEDIFFX_X2_H,W
	SUBWFB	LINEDIFFY_X2_H,W
	BANKSEL	SYSTEMP2_H
	MOVWF	SYSTEMP2_H
	MOVF	SYSTEMP2,W
	BANKSEL	LINEERR
	ADDWF	LINEERR,F
	BANKSEL	SYSTEMP2_H
	MOVF	SYSTEMP2_H,W
	BANKSEL	LINEERR_H
	ADDWFC	LINEERR_H,F
;LineY1 += LineStepY
	MOVF	LINESTEPY,W
	ADDWF	LINEY1,F
	MOVF	LINESTEPY_H,W
	ADDWFC	LINEY1_H,F
;end if
GLOBAL	ENDIF35
ENDIF35:
;loop
	GOTO	SYSDOLOOP_S5
GLOBAL	SYSDOLOOP_E5
SYSDOLOOP_E5:
;PSet (   LineX1,   LineY1, LineColour )
	MOVF	LINEX1,W
	MOVWF	GLCDX
	MOVF	LINEX1_H,W
	MOVWF	GLCDX_H
	MOVF	LINEY1,W
	MOVWF	GLCDY
	MOVF	LINEY1_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;else
	GOTO	ENDIF34
GLOBAL	ELSE34_1
ELSE34_1:
;LineErr = LineDiffX_x2 - LineDiffY
	MOVF	LINEDIFFY,W
	SUBWF	LINEDIFFX_X2,W
	MOVWF	LINEERR
	MOVF	LINEDIFFY_H,W
	SUBWFB	LINEDIFFX_X2_H,W
	MOVWF	LINEERR_H
;do while (   LineY1 <>  LineY2)
GLOBAL	SYSDOLOOP_S6
SYSDOLOOP_S6:
	MOVF	LINEY1,W
	MOVWF	SYSWORDTEMPA
	MOVF	LINEY1_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVF	LINEY2,W
	MOVWF	SYSWORDTEMPB
	MOVF	LINEY2_H,W
	MOVWF	SYSWORDTEMPB_H
	FCALL	SYSCOMPEQUAL16
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	SYSDOLOOP_E6
;PSet (   LineX1,   LineY1, LineColour )
	MOVF	LINEX1,W
	MOVWF	GLCDX
	MOVF	LINEX1_H,W
	MOVWF	GLCDX_H
	MOVF	LINEY1,W
	MOVWF	GLCDY
	MOVF	LINEY1_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;LineY1 += LineStepY
	MOVF	LINESTEPY,W
	ADDWF	LINEY1,F
	MOVF	LINESTEPY_H,W
	ADDWFC	LINEY1_H,F
;if ( LineErr < 0) then
	MOVF	LINEERR,W
	MOVWF	SYSINTEGERTEMPA
	MOVF	LINEERR_H,W
	MOVWF	SYSINTEGERTEMPA_H
	CLRF	SYSINTEGERTEMPB
	CLRF	SYSINTEGERTEMPB_H
	FCALL	SYSCOMPLESSTHANINT
	BTFSS	SYSBYTETEMPX,0
	GOTO	ELSE36_1
;LineErr += LineDiffX_x2
	MOVF	LINEDIFFX_X2,W
	ADDWF	LINEERR,F
	MOVF	LINEDIFFX_X2_H,W
	ADDWFC	LINEERR_H,F
;else
	GOTO	ENDIF36
GLOBAL	ELSE36_1
ELSE36_1:
;LineErr += ( LineDiffX_x2 - LineDiffY_x2 )
	MOVF	LINEDIFFY_X2,W
	SUBWF	LINEDIFFX_X2,W
	BANKSEL	SYSTEMP2
	MOVWF	SYSTEMP2
	BANKSEL	LINEDIFFY_X2_H
	MOVF	LINEDIFFY_X2_H,W
	SUBWFB	LINEDIFFX_X2_H,W
	BANKSEL	SYSTEMP2_H
	MOVWF	SYSTEMP2_H
	MOVF	SYSTEMP2,W
	BANKSEL	LINEERR
	ADDWF	LINEERR,F
	BANKSEL	SYSTEMP2_H
	MOVF	SYSTEMP2_H,W
	BANKSEL	LINEERR_H
	ADDWFC	LINEERR_H,F
;LineX1 += LineStepX
	MOVF	LINESTEPX,W
	ADDWF	LINEX1,F
	MOVF	LINESTEPX_H,W
	ADDWFC	LINEX1_H,F
;end if
GLOBAL	ENDIF36
ENDIF36:
;loop
	GOTO	SYSDOLOOP_S6
GLOBAL	SYSDOLOOP_E6
SYSDOLOOP_E6:
;PSet (   LineX1,   LineY1, LineColour )
	MOVF	LINEX1,W
	MOVWF	GLCDX
	MOVF	LINEX1_H,W
	MOVWF	GLCDX_H
	MOVF	LINEY1,W
	MOVWF	GLCDY
	MOVF	LINEY1_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	FCALL	PSET_SSD1331
;end if
GLOBAL	ENDIF34
ENDIF34:
	RETURN

;********************************************************************************

;START OF PROGRAM MEMORY PAGE 3
	PSECT	PROGMEM3,CLASS=CODE,SPACE=SPACE_CODE,DELTA=2, ABS, OVRLD 
	ORG	6144
GLOBAL	DELAY_MS
DELAY_MS:
	INCF	SYSWAITTEMPMS_H, F
GLOBAL	DMS_START
DMS_START:
	MOVLW	14
	MOVWF	DELAYTEMP2
GLOBAL	DMS_OUTER
DMS_OUTER:
	MOVLW	189
	MOVWF	DELAYTEMP
GLOBAL	DMS_INNER
DMS_INNER:
	DECFSZ	DELAYTEMP, F
	GOTO	DMS_INNER
	DECFSZ	DELAYTEMP2, F
	GOTO	DMS_OUTER
	DECFSZ	SYSWAITTEMPMS, F
	GOTO	DMS_START
	DECFSZ	SYSWAITTEMPMS_H, F
	GOTO	DMS_START
	RETURN

;********************************************************************************

GLOBAL	DELAY_S
DELAY_S:
GLOBAL	DS_START
DS_START:
	MOVLW	232
	MOVWF	SYSWAITTEMPMS
	MOVLW	3
	MOVWF	SYSWAITTEMPMS_H
	FCALL	DELAY_MS
	DECFSZ	SYSWAITTEMPS, F
	GOTO	DS_START
	RETURN

;********************************************************************************

;SOURCE: HWSPI.H (709)
GLOBAL	FASTHWSPITRANSFER
FASTHWSPITRANSFER:
;Master mode only
;Clear WCOL
;Set SSPCON1.WCOL Off
	BANKSEL	SSP1CON1
	BCF	SSP1CON1,7
;Put byte to send into buffer
;Will start transfer
;SSPBUF = SPITxData
	BANKSEL	SPITXDATA
	MOVF	SPITXDATA,W
	BANKSEL	SSP1BUF
	MOVWF	SSP1BUF
;Same for master and slave
;Wait While SSPSTAT.BF = Off
GLOBAL	SYSWAITLOOP1
SYSWAITLOOP1:
	BTFSS	SSP1STAT,0
	GOTO	SYSWAITLOOP1
;Set SSPSTAT.BF Off
	BCF	SSP1STAT,0
	BANKSEL	STATUS
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (472)
GLOBAL	FILLEDBOX_SSD1331
FILLEDBOX_SSD1331:
;dim GLCDTemp, LineColour as word
;Make sure that starting point (1) is always less than end point (2)
;If LineX1 > LineX2 Then
	MOVF	LINEX1,W
	MOVWF	SYSWORDTEMPB
	MOVF	LINEX1_H,W
	MOVWF	SYSWORDTEMPB_H
	MOVF	LINEX2,W
	MOVWF	SYSWORDTEMPA
	MOVF	LINEX2_H,W
	MOVWF	SYSWORDTEMPA_H
	FCALL	SYSCOMPLESSTHAN16
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF22
;GLCDTemp = LineX1
	MOVF	LINEX1,W
	MOVWF	GLCDTEMP
	MOVF	LINEX1_H,W
	MOVWF	GLCDTEMP_H
;LineX1 = LineX2
	MOVF	LINEX2,W
	MOVWF	LINEX1
	MOVF	LINEX2_H,W
	MOVWF	LINEX1_H
;LineX2 = GLCDTemp
	MOVF	GLCDTEMP,W
	MOVWF	LINEX2
	MOVF	GLCDTEMP_H,W
	MOVWF	LINEX2_H
;End If
GLOBAL	ENDIF22
ENDIF22:
;If LineY1 > LineY2 Then
	MOVF	LINEY1,W
	MOVWF	SYSWORDTEMPB
	MOVF	LINEY1_H,W
	MOVWF	SYSWORDTEMPB_H
	MOVF	LINEY2,W
	MOVWF	SYSWORDTEMPA
	MOVF	LINEY2_H,W
	MOVWF	SYSWORDTEMPA_H
	FCALL	SYSCOMPLESSTHAN16
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF23
;GLCDTemp = LineY1
	MOVF	LINEY1,W
	MOVWF	GLCDTEMP
	MOVF	LINEY1_H,W
	MOVWF	GLCDTEMP_H
;LineY1 = LineY2
	MOVF	LINEY2,W
	MOVWF	LINEY1
	MOVF	LINEY2_H,W
	MOVWF	LINEY1_H
;LineY2 = GLCDTemp
	MOVF	GLCDTEMP,W
	MOVWF	LINEY2
	MOVF	GLCDTEMP_H,W
	MOVWF	LINEY2_H
;End If
GLOBAL	ENDIF23
ENDIF23:
;Draw lines going across
;For DrawLine = [byte]LineX1 To [byte]LineX2
	MOVF	LINEX1,W
	MOVWF	DRAWLINE
GLOBAL	SYSFORLOOP9
SYSFORLOOP9:
;For GLCDTemp = LineY1 To LineY2
	MOVF	LINEY1,W
	MOVWF	GLCDTEMP
	MOVF	LINEY1_H,W
	MOVWF	GLCDTEMP_H
GLOBAL	SYSFORLOOP10
SYSFORLOOP10:
;PSet DrawLine, GLCDTemp, [word]LineColour
	MOVF	DRAWLINE,W
	MOVWF	GLCDX
	CLRF	GLCDX_H
	MOVF	GLCDTEMP,W
	MOVWF	GLCDY
	MOVF	GLCDTEMP_H,W
	MOVWF	GLCDY_H
	MOVF	LINECOLOUR,W
	MOVWF	GLCDCOLOUR
	MOVF	LINECOLOUR_H,W
	MOVWF	GLCDCOLOUR_H
	CALL	PSET_SSD1331
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	GLCDTEMP,W
	SUBWF	LINEY2,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	BANKSEL	GLCDTEMP_H
	MOVF	GLCDTEMP_H,W
	SUBWFB	LINEY2_H,W
	BANKSEL	SYSTEMP1_H
	MOVWF	SYSTEMP1_H
	MOVF	SYSTEMP1,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSTEMP1_H,W
	MOVWF	SYSWORDTEMPA_H
	CLRF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	CALL	SYSCOMPEQUAL16
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF24
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	INCF	GLCDTEMP,F
	BTFSC	STATUS,2
	INCF	GLCDTEMP_H,F
	GOTO	SYSFORLOOP10
;END IF
GLOBAL	ENDIF24
ENDIF24:
GLOBAL	SYSFORLOOPEND10
SYSFORLOOPEND10:
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	DRAWLINE,W
	SUBWF	LINEX2,W
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	MOVWF	SYSBYTETEMPA
	CLRF	SYSBYTETEMPB
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF25
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	INCF	DRAWLINE,F
	GOTO	SYSFORLOOP9
;END IF
GLOBAL	ENDIF25
ENDIF25:
GLOBAL	SYSFORLOOPEND9
SYSFORLOOPEND9:
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (291)
GLOBAL	GLCDDRAWSTRING_SSD1331
GLCDDRAWSTRING_SSD1331:
;dim GLCDPrintLoc as word
;GLCDPrintLoc = StringLocX
	BANKSEL	STRINGLOCX
	MOVF	STRINGLOCX,W
	BANKSEL	GLCDPRINTLOC
	MOVWF	GLCDPRINTLOC
	BANKSEL	STRINGLOCX_H
	MOVF	STRINGLOCX_H,W
	BANKSEL	GLCDPRINTLOC_H
	MOVWF	GLCDPRINTLOC_H
;dim OldGLCDFontWidth as Byte
;OldGLCDFontWidth = GLCDFontWidth
	MOVF	GLCDFONTWIDTH,W
	BANKSEL	OLDGLCDFONTWIDTH
	MOVWF	OLDGLCDFONTWIDTH
;for xchar = 1 to Chars(0)
	MOVLW	1
	MOVWF	XCHAR
GLOBAL	SYSFORLOOP6
SYSFORLOOP6:
;GLCDDrawChar GLCDPrintLoc , CharLocY , Chars(xchar), LineColour
	BANKSEL	GLCDPRINTLOC
	MOVF	GLCDPRINTLOC,W
	MOVWF	CHARLOCX
	MOVF	GLCDPRINTLOC_H,W
	MOVWF	CHARLOCX_H
	BANKSEL	XCHAR
	MOVF	XCHAR,W
	ADDWF	SYSCHARSHANDLER,W
	MOVWF	FSR0L
	MOVLW	0
	ADDWFC	SYSCHARSHANDLER_H,W
	MOVWF	FSR0H
	MOVF	INDF0,W
	BANKSEL	CHARCODE
	MOVWF	CHARCODE
	FCALL	GLCDDRAWCHAR_SSD1331
;GLCDPrintIncrementPixelPositionMacro
;Macro Source: glcd.h (1219)
;GLCDPrintLoc = GLCDPrintLoc + ( GLCDFontWidth * GLCDfntDefaultsize ) + GLCDfntDefaultsize - 1
	MOVF	GLCDFONTWIDTH,W
	MOVWF	SYSBYTETEMPA
	MOVF	GLCDFNTDEFAULTSIZE,W
	MOVWF	SYSBYTETEMPB
	FCALL	SYSMULTSUB
	MOVF	SYSBYTETEMPX,W
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	BANKSEL	GLCDPRINTLOC
	ADDWF	GLCDPRINTLOC,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	MOVLW	0
	BANKSEL	GLCDPRINTLOC_H
	ADDWFC	GLCDPRINTLOC_H,W
	BANKSEL	SYSTEMP1_H
	MOVWF	SYSTEMP1_H
	BANKSEL	GLCDFNTDEFAULTSIZE
	MOVF	GLCDFNTDEFAULTSIZE,W
	BANKSEL	SYSTEMP1
	ADDWF	SYSTEMP1,W
	MOVWF	SYSTEMP2
	MOVLW	0
	ADDWFC	SYSTEMP1_H,W
	MOVWF	SYSTEMP2_H
	MOVLW	1
	SUBWF	SYSTEMP2,W
	BANKSEL	GLCDPRINTLOC
	MOVWF	GLCDPRINTLOC
	MOVLW	0
	BANKSEL	SYSTEMP2_H
	SUBWFB	SYSTEMP2_H,W
	BANKSEL	GLCDPRINTLOC_H
	MOVWF	GLCDPRINTLOC_H
;next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	BANKSEL	SYSCHARSHANDLER
	MOVF	SYSCHARSHANDLER,W
	MOVWF	FSR0L
	MOVF	SYSCHARSHANDLER_H,W
	MOVWF	FSR0H
	MOVF	XCHAR,W
	SUBWF	INDF0,W
	MOVWF	SYSTEMP3
	MOVWF	SYSBYTETEMPA
	CLRF	SYSBYTETEMPB
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF14
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	BANKSEL	XCHAR
	INCF	XCHAR,F
	GOTO	SYSFORLOOP6
;END IF
GLOBAL	ENDIF14
ENDIF14:
GLOBAL	SYSFORLOOPEND6
SYSFORLOOPEND6:
;GLCDFontWidth = OldGLCDFontWidth
	BANKSEL	OLDGLCDFONTWIDTH
	MOVF	OLDGLCDFONTWIDTH,W
	BANKSEL	GLCDFONTWIDTH
	MOVWF	GLCDFONTWIDTH
	RETURN

;********************************************************************************

;OVERLOADED SIGNATURE: WORD:WORD:STRING:, SOURCE: GLCD.H (981)
GLOBAL	GLCDPRINT4
GLCDPRINT4:
;GLCD.h Sub GLCDPrint
;Dim GLCDPrintLoc  as word
;Dim GLCDPrint_String_Counter, GLCDPrintLen as byte
;GLCDPrintLen = LCDPrintData(0)
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVF	SYSLCDPRINTDATAHANDLER,W
	MOVWF	FSR0L
	MOVF	SYSLCDPRINTDATAHANDLER_H,W
	MOVWF	FSR0H
	MOVF	INDF0,W
	BANKSEL	GLCDPRINTLEN
	MOVWF	GLCDPRINTLEN
;If GLCDPrintLen = 0 Then Exit Sub
	MOVF	GLCDPRINTLEN,F
	BTFSC	STATUS,2
;If GLCDPrintLen = 0 Then Exit Sub
	RETURN
;If GLCDPrintLen = 0 Then Exit Sub
;dim OldGLCDFontWidth as Byte
;OldGLCDFontWidth = GLCDFontWidth
	MOVF	GLCDFONTWIDTH,W
	BANKSEL	OLDGLCDFONTWIDTH
	MOVWF	OLDGLCDFONTWIDTH
;GLCDPrintLoc = PrintLocX
	MOVF	PRINTLOCX,W
	BANKSEL	GLCDPRINTLOC
	MOVWF	GLCDPRINTLOC
	BANKSEL	PRINTLOCX_H
	MOVF	PRINTLOCX_H,W
	BANKSEL	GLCDPRINTLOC_H
	MOVWF	GLCDPRINTLOC_H
;Write Data
;For GLCDPrint_String_Counter = 1 To GLCDPrintLen
	MOVLW	1
	MOVWF	GLCDPRINT_STRING_COUNTER
GLOBAL	SYSFORLOOP2
SYSFORLOOP2:
;GLCDDrawChar  GLCDPrintLoc, PrintLocY, LCDPrintData(GLCDPrint_String_Counter)
	MOVF	GLCDPRINTLOC,W
	MOVWF	CHARLOCX
	MOVF	GLCDPRINTLOC_H,W
	MOVWF	CHARLOCX_H
	BANKSEL	PRINTLOCY
	MOVF	PRINTLOCY,W
	BANKSEL	CHARLOCY
	MOVWF	CHARLOCY
	BANKSEL	PRINTLOCY_H
	MOVF	PRINTLOCY_H,W
	BANKSEL	CHARLOCY_H
	MOVWF	CHARLOCY_H
	MOVF	GLCDPRINT_STRING_COUNTER,W
	BANKSEL	SYSLCDPRINTDATAHANDLER
	ADDWF	SYSLCDPRINTDATAHANDLER,W
	MOVWF	FSR0L
	MOVLW	0
	ADDWFC	SYSLCDPRINTDATAHANDLER_H,W
	MOVWF	FSR0H
	MOVF	INDF0,W
	BANKSEL	CHARCODE
	MOVWF	CHARCODE
	MOVF	GLCDFOREGROUND,W
	MOVWF	LINECOLOUR
	MOVF	GLCDFOREGROUND_H,W
	MOVWF	LINECOLOUR_H
	FCALL	GLCDDRAWCHAR_SSD1331
;GLCDPrintIncrementPixelPositionMacro
;Macro Source: glcd.h (1219)
;GLCDPrintLoc = GLCDPrintLoc + ( GLCDFontWidth * GLCDfntDefaultsize ) + GLCDfntDefaultsize - 1
	MOVF	GLCDFONTWIDTH,W
	MOVWF	SYSBYTETEMPA
	MOVF	GLCDFNTDEFAULTSIZE,W
	MOVWF	SYSBYTETEMPB
	CALL	SYSMULTSUB
	MOVF	SYSBYTETEMPX,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	BANKSEL	GLCDPRINTLOC
	ADDWF	GLCDPRINTLOC,W
	BANKSEL	SYSTEMP2
	MOVWF	SYSTEMP2
	MOVLW	0
	BANKSEL	GLCDPRINTLOC_H
	ADDWFC	GLCDPRINTLOC_H,W
	BANKSEL	SYSTEMP2_H
	MOVWF	SYSTEMP2_H
	BANKSEL	GLCDFNTDEFAULTSIZE
	MOVF	GLCDFNTDEFAULTSIZE,W
	BANKSEL	SYSTEMP2
	ADDWF	SYSTEMP2,W
	MOVWF	SYSTEMP1
	MOVLW	0
	ADDWFC	SYSTEMP2_H,W
	MOVWF	SYSTEMP1_H
	MOVLW	1
	SUBWF	SYSTEMP1,W
	BANKSEL	GLCDPRINTLOC
	MOVWF	GLCDPRINTLOC
	MOVLW	0
	BANKSEL	SYSTEMP1_H
	SUBWFB	SYSTEMP1_H,W
	BANKSEL	GLCDPRINTLOC_H
	MOVWF	GLCDPRINTLOC_H
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	GLCDPRINT_STRING_COUNTER,W
	SUBWF	GLCDPRINTLEN,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	MOVWF	SYSBYTETEMPA
	CLRF	SYSBYTETEMPB
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF3
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	INCF	GLCDPRINT_STRING_COUNTER,F
	GOTO	SYSFORLOOP2
;END IF
GLOBAL	ENDIF3
ENDIF3:
GLOBAL	SYSFORLOOPEND2
SYSFORLOOPEND2:
;Update the current X position for GLCDPrintString
;PrintLocX = GLCDPrintLoc
	MOVF	GLCDPRINTLOC,W
	BANKSEL	PRINTLOCX
	MOVWF	PRINTLOCX
	BANKSEL	GLCDPRINTLOC_H
	MOVF	GLCDPRINTLOC_H,W
	BANKSEL	PRINTLOCX_H
	MOVWF	PRINTLOCX_H
;GLCDFontWidth = OldGLCDFontWidth
	MOVF	OLDGLCDFONTWIDTH,W
	BANKSEL	GLCDFONTWIDTH
	MOVWF	GLCDFONTWIDTH
	RETURN

;********************************************************************************

;SOURCE: GLCD.H (1240)
GLOBAL	GLCDPRINTSTRINGLN
GLCDPRINTSTRINGLN:
;dim PrintLocX, PrintLocY as word
;GLCDPrint( PrintLocX , PrintLocY , LCDPrintData )
	BANKSEL	SYSLCDPRINTDATAHANDLER
	MOVF	SYSLCDPRINTDATAHANDLER,W
	MOVWF	SYSLCDPRINTDATAHANDLER
	MOVF	SYSLCDPRINTDATAHANDLER_H,W
	MOVWF	SYSLCDPRINTDATAHANDLER_H
	BANKSEL	STATUS
	CALL	GLCDPRINT4
;Update the current X and Y position
;PrintLocX = 0
	BANKSEL	PRINTLOCX
	CLRF	PRINTLOCX
	CLRF	PRINTLOCX_H
;When using Transaction  PrintLocY will get incremented. This needs to be protected
;PrintLocY = ( PrintLocY + ( GLCDfntDefaultHeight * GLCDfntDefaultSize ) ) mod GLCD_HEIGHT
	BANKSEL	GLCDFNTDEFAULTHEIGHT
	MOVF	GLCDFNTDEFAULTHEIGHT,W
	MOVWF	SYSBYTETEMPA
	MOVF	GLCDFNTDEFAULTSIZE,W
	MOVWF	SYSBYTETEMPB
	CALL	SYSMULTSUB
	MOVF	SYSBYTETEMPX,W
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	ADDWF	PRINTLOCY,W
	MOVWF	SYSTEMP1
	MOVLW	0
	ADDWFC	PRINTLOCY_H,W
	MOVWF	SYSTEMP1_H
	MOVF	SYSTEMP1,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSTEMP1_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	64
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	BANKSEL	STATUS
	FCALL	SYSDIVSUB16
	MOVF	SYSWORDTEMPX,W
	BANKSEL	PRINTLOCY
	MOVWF	PRINTLOCY
	MOVF	SYSWORDTEMPX_H,W
	MOVWF	PRINTLOCY_H
	BANKSEL	STATUS
	RETURN

;********************************************************************************

GLOBAL	OLEDFONT1DATA_H
OLEDFONT1DATA_H:
	MOVF	SYSSTRINGA,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSSTRINGA_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	1
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	FCALL	SYSCOMPLESSTHAN16
	BTFSS	SYSBYTETEMPX,0
	RETLW	0
	MOVF	SYSSTRINGA, W
	ADDLW	LOW TABLEOLEDFONT1DATA_H
	MOVWF	SYSSTRINGA
	MOVLW	(HIGH TABLEOLEDFONT1DATA_H) & 127
	BTFSC	STATUS,0
	ADDLW	1
	ADDWF	SYSSTRINGA_H, W
	MOVWF	PCLATH
	MOVF	SYSSTRINGA, W
	MOVWF	PCL
GLOBAL	TABLEOLEDFONT1DATA_H
TABLEOLEDFONT1DATA_H:
	RETLW	1

;********************************************************************************

GLOBAL	OLEDFONT1INDEX
OLEDFONT1INDEX:
	MOVLW	97
	SUBWF	SYSSTRINGA, W
	BTFSC	STATUS,0
	RETLW	0
	MOVF	SYSSTRINGA, W
	ADDLW	LOW TABLEOLEDFONT1INDEX
	MOVWF	SYSSTRINGA
	MOVLW	(HIGH TABLEOLEDFONT1INDEX) & 127
	BTFSC	STATUS,0
	ADDLW	1
	MOVWF	PCLATH
	MOVF	SYSSTRINGA, W
	MOVWF	PCL
GLOBAL	TABLEOLEDFONT1INDEX
TABLEOLEDFONT1INDEX:
	RETLW	96
	RETLW	1
	RETLW	3
	RETLW	5
	RETLW	9
	RETLW	15
	RETLW	21
	RETLW	25
	RETLW	31
	RETLW	33
	RETLW	36
	RETLW	39
	RETLW	45
	RETLW	49
	RETLW	51
	RETLW	55
	RETLW	57
	RETLW	61
	RETLW	66
	RETLW	70
	RETLW	75
	RETLW	79
	RETLW	84
	RETLW	88
	RETLW	93
	RETLW	97
	RETLW	102
	RETLW	107
	RETLW	109
	RETLW	112
	RETLW	116
	RETLW	120
	RETLW	124
	RETLW	128
	RETLW	134
	RETLW	139
	RETLW	144
	RETLW	149
	RETLW	154
	RETLW	158
	RETLW	162
	RETLW	167
	RETLW	172
	RETLW	176
	RETLW	180
	RETLW	185
	RETLW	189
	RETLW	195
	RETLW	201
	RETLW	206
	RETLW	211
	RETLW	216
	RETLW	221
	RETLW	226
	RETLW	230
	RETLW	235
	RETLW	241
	RETLW	247
	RETLW	253
	RETLW	2
	RETLW	7
	RETLW	10
	RETLW	14
	RETLW	17
	RETLW	21
	RETLW	26
	RETLW	29
	RETLW	34
	RETLW	39
	RETLW	44
	RETLW	49
	RETLW	54
	RETLW	57
	RETLW	62
	RETLW	67
	RETLW	69
	RETLW	72
	RETLW	77
	RETLW	79
	RETLW	85
	RETLW	90
	RETLW	95
	RETLW	100
	RETLW	105
	RETLW	108
	RETLW	113
	RETLW	117
	RETLW	122
	RETLW	128
	RETLW	134
	RETLW	140
	RETLW	145
	RETLW	149
	RETLW	153
	RETLW	155
	RETLW	159
	RETLW	164

;********************************************************************************

GLOBAL	OLEDFONT1INDEX_H
OLEDFONT1INDEX_H:
	MOVLW	97
	SUBWF	SYSSTRINGA, W
	BTFSC	STATUS,0
	RETLW	0
	MOVF	SYSSTRINGA, W
	ADDLW	LOW TABLEOLEDFONT1INDEX_H
	MOVWF	SYSSTRINGA
	MOVLW	(HIGH TABLEOLEDFONT1INDEX_H) & 127
	BTFSC	STATUS,0
	ADDLW	1
	MOVWF	PCLATH
	MOVF	SYSSTRINGA, W
	MOVWF	PCL
GLOBAL	TABLEOLEDFONT1INDEX_H
TABLEOLEDFONT1INDEX_H:
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	0
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1
	RETLW	1

;********************************************************************************

GLOBAL	OLEDFONT2_H
OLEDFONT2_H:
	MOVF	SYSSTRINGA,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSSTRINGA_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVLW	1
	MOVWF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	FCALL	SYSCOMPLESSTHAN16
	BTFSS	SYSBYTETEMPX,0
	RETLW	0
	MOVF	SYSSTRINGA, W
	ADDLW	LOW TABLEOLEDFONT2_H
	MOVWF	SYSSTRINGA
	MOVLW	(HIGH TABLEOLEDFONT2_H) & 127
	BTFSC	STATUS,0
	ADDLW	1
	ADDWF	SYSSTRINGA_H, W
	MOVWF	PCLATH
	MOVF	SYSSTRINGA, W
	MOVWF	PCL
GLOBAL	TABLEOLEDFONT2_H
TABLEOLEDFONT2_H:
	RETLW	7

;********************************************************************************

;SOURCE: STRING.H (646)
GLOBAL	FN_PAD
FN_PAD:
;Check length of SysInString
;If SysInString(0) = longer or equal SysStrLen then
;give back SysInString and exit function
;If SysInString(0) < SysStrLen Then
	BANKSEL	SYSSYSINSTRINGHANDLER
	MOVF	SYSSYSINSTRINGHANDLER,W
	MOVWF	FSR0L
	MOVF	SYSSYSINSTRINGHANDLER_H,W
	MOVWF	FSR0H
	MOVF	SYSSTRLEN,W
	SUBWF	INDF0,W
	BTFSC	STATUS,0
	GOTO	ELSE58_1
;SysCharCount = SysInString(0)
	MOVF	SYSSYSINSTRINGHANDLER,W
	MOVWF	FSR0L
	MOVF	SYSSYSINSTRINGHANDLER_H,W
	MOVWF	FSR0H
	MOVF	INDF0,W
	MOVWF	SYSCHARCOUNT
;clear output string
;Pad=""
	MOVLW	LOW PAD
	MOVWF	FSR1L
	MOVLW	HIGH PAD
	MOVWF	FSR1H
	MOVLW	LOW STRINGTABLE2
	MOVWF	SYSSTRINGA
	MOVLW	(HIGH STRINGTABLE2) & 127
	MOVWF	SYSSTRINGA_H
	BANKSEL	STATUS
	FCALL	SYSREADSTRING
;Copy leftmost characters
;For SysStringTemp = 1 To SysCharCount
	MOVLW	1
	BANKSEL	SYSSTRINGTEMP
	MOVWF	SYSSTRINGTEMP
GLOBAL	SYSFORLOOP13
SYSFORLOOP13:
;Pad(SysStringTemp) = SysInString(SysStringTemp)
	MOVF	SYSSTRINGTEMP,W
	ADDWF	SYSSYSINSTRINGHANDLER,W
	MOVWF	FSR0L
	MOVLW	0
	ADDWFC	SYSSYSINSTRINGHANDLER_H,W
	MOVWF	FSR0H
	MOVF	INDF0,W
	MOVWF	SYSARRAYTEMP1
	MOVWF	SYSARRAYTEMP2
	MOVLW	LOW(PAD)
	ADDWF	SYSSTRINGTEMP,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(PAD)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVF	SYSARRAYTEMP2,W
	MOVWF	INDF0
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	SYSSTRINGTEMP,W
	SUBWF	SYSCHARCOUNT,W
	MOVWF	SYSTEMP3
	MOVWF	SYSBYTETEMPA
	CLRF	SYSBYTETEMPB
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF59
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	BANKSEL	SYSSTRINGTEMP
	INCF	SYSSTRINGTEMP,F
	GOTO	SYSFORLOOP13
;END IF
GLOBAL	ENDIF59
ENDIF59:
GLOBAL	SYSFORLOOPEND13
SYSFORLOOPEND13:
;For SysStringTemp = SysCharCount+1 to SysStrLen
	BANKSEL	SYSCHARCOUNT
	INCF	SYSCHARCOUNT,W
	MOVWF	SYSSTRINGTEMP
GLOBAL	SYSFORLOOP14
SYSFORLOOP14:
;Pad(SysStringTemp) = SysInString3(1)
	MOVLW	1
	ADDWF	SYSSYSINSTRING3HANDLER,W
	MOVWF	FSR0L
	MOVLW	0
	ADDWFC	SYSSYSINSTRING3HANDLER_H,W
	MOVWF	FSR0H
	MOVF	INDF0,W
	MOVWF	SYSARRAYTEMP2
	MOVWF	SYSARRAYTEMP1
	MOVLW	LOW(PAD)
	ADDWF	SYSSTRINGTEMP,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(PAD)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVF	SYSARRAYTEMP1,W
	MOVWF	INDF0
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	SYSSTRINGTEMP,W
	SUBWF	SYSSTRLEN,W
	MOVWF	SYSTEMP3
	MOVWF	SYSBYTETEMPA
	CLRF	SYSBYTETEMPB
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF60
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	BANKSEL	SYSSTRINGTEMP
	INCF	SYSSTRINGTEMP,F
	GOTO	SYSFORLOOP14
;END IF
GLOBAL	ENDIF60
ENDIF60:
GLOBAL	SYSFORLOOPEND14
SYSFORLOOPEND14:
;set new length to PAD
;Pad(0) = SysStrLen
	BANKSEL	SYSSTRLEN
	MOVF	SYSSTRLEN,W
	BANKSEL	SYSPAD_0
	MOVWF	SYSPAD_0
;else
	GOTO	ENDIF58
GLOBAL	ELSE58_1
ELSE58_1:
;SysInString is equal or longer than SysStrLen
;give back old string; copy SysInString to Pad
;For SysStringTemp = 1 To SysInString(0)
	MOVLW	1
	MOVWF	SYSSTRINGTEMP
GLOBAL	SYSFORLOOP15
SYSFORLOOP15:
;Pad(SysStringTemp) = SysInString(SysStringTemp)
	MOVF	SYSSTRINGTEMP,W
	ADDWF	SYSSYSINSTRINGHANDLER,W
	MOVWF	FSR0L
	MOVLW	0
	ADDWFC	SYSSYSINSTRINGHANDLER_H,W
	MOVWF	FSR0H
	MOVF	INDF0,W
	MOVWF	SYSARRAYTEMP1
	MOVWF	SYSARRAYTEMP2
	MOVLW	LOW(PAD)
	ADDWF	SYSSTRINGTEMP,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(PAD)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVF	SYSARRAYTEMP2,W
	MOVWF	INDF0
;Next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	MOVF	SYSSYSINSTRINGHANDLER,W
	MOVWF	FSR0L
	MOVF	SYSSYSINSTRINGHANDLER_H,W
	MOVWF	FSR0H
	MOVF	SYSSTRINGTEMP,W
	SUBWF	INDF0,W
	MOVWF	SYSTEMP3
	MOVWF	SYSBYTETEMPA
	CLRF	SYSBYTETEMPB
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF61
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	BANKSEL	SYSSTRINGTEMP
	INCF	SYSSTRINGTEMP,F
	GOTO	SYSFORLOOP15
;END IF
GLOBAL	ENDIF61
ENDIF61:
GLOBAL	SYSFORLOOPEND15
SYSFORLOOPEND15:
;PAD(0) = SysInString(0)
	BANKSEL	SYSSYSINSTRINGHANDLER
	MOVF	SYSSYSINSTRINGHANDLER,W
	MOVWF	FSR0L
	MOVF	SYSSYSINSTRINGHANDLER_H,W
	MOVWF	FSR0H
	MOVF	INDF0,W
	MOVWF	SYSARRAYTEMP1
	BANKSEL	SYSPAD_0
	MOVWF	SYSPAD_0
;End If
GLOBAL	ENDIF58
ENDIF58:
	BANKSEL	STATUS
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (500)
GLOBAL	PSET_SSD1331
PSET_SSD1331:
;dim GLCDTemp as word
;swap values to support rotation as this device DOES NOT SUPPORT Portrait! arcghhhh
;if SSD1331Rotation.0 = 0 then
	BANKSEL	SSD1331ROTATION
	BTFSC	SSD1331ROTATION,0
	GOTO	ENDIF26
;GLCDTemp = GLCDX
	BANKSEL	GLCDX
	MOVF	GLCDX,W
	MOVWF	GLCDTEMP
	MOVF	GLCDX_H,W
	MOVWF	GLCDTEMP_H
;GLCDX = GLCDY
	MOVF	GLCDY,W
	MOVWF	GLCDX
	MOVF	GLCDY_H,W
	MOVWF	GLCDX_H
;GLCDY = GLCDTemp
	MOVF	GLCDTEMP,W
	MOVWF	GLCDY
	MOVF	GLCDTEMP_H,W
	MOVWF	GLCDY_H
;GLCDY = SSD1331_GLCD_WIDTH - GLCDY - 1
	MOVF	GLCDY,W
	SUBWF	GLCDDEVICEWIDTH,W
	BANKSEL	SYSTEMP1
	MOVWF	SYSTEMP1
	BANKSEL	GLCDY_H
	MOVF	GLCDY_H,W
	SUBWFB	GLCDDEVICEWIDTH_H,W
	BANKSEL	SYSTEMP1_H
	MOVWF	SYSTEMP1_H
	MOVLW	1
	SUBWF	SYSTEMP1,W
	BANKSEL	GLCDY
	MOVWF	GLCDY
	MOVLW	0
	BANKSEL	SYSTEMP1_H
	SUBWFB	SYSTEMP1_H,W
	BANKSEL	GLCDY_H
	MOVWF	GLCDY_H
;End if
GLOBAL	ENDIF26
ENDIF26:
;anything off screen with be rejected
;if GLCDX => SSD1331_GLCD_WIDTH OR GLCDY => SSD1331_GLCD_HEIGHT Then
	BANKSEL	GLCDX
	MOVF	GLCDX,W
	MOVWF	SYSWORDTEMPA
	MOVF	GLCDX_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVF	GLCDDEVICEWIDTH,W
	MOVWF	SYSWORDTEMPB
	MOVF	GLCDDEVICEWIDTH_H,W
	MOVWF	SYSWORDTEMPB_H
	FCALL	SYSCOMPLESSTHAN16
	COMF	SYSBYTETEMPX,F
	MOVF	SYSBYTETEMPX,W
	BANKSEL	SYSTEMP3
	MOVWF	SYSTEMP3
	BANKSEL	GLCDY
	MOVF	GLCDY,W
	MOVWF	SYSWORDTEMPA
	MOVF	GLCDY_H,W
	MOVWF	SYSWORDTEMPA_H
	MOVF	GLCDDEVICEHEIGHT,W
	MOVWF	SYSWORDTEMPB
	MOVF	GLCDDEVICEHEIGHT_H,W
	MOVWF	SYSWORDTEMPB_H
	FCALL	SYSCOMPLESSTHAN16
	COMF	SYSBYTETEMPX,F
	BANKSEL	SYSTEMP3
	MOVF	SYSTEMP3,W
	IORWF	SYSBYTETEMPX,W
	MOVWF	SYSTEMP1
	BTFSS	SYSTEMP1,0
	GOTO	ENDIF27
;exit sub
	BANKSEL	STATUS
	RETURN
;end if
GLOBAL	ENDIF27
ENDIF27:
;SendCommand_SSD1331(SSD1331_Set_Column_Address) ' Column addr set
	MOVLW	21
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331 GLCDX
	MOVF	GLCDX,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331 GLCDX
	MOVF	GLCDX,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(SSD1331_Set_Row_Address) ' Row addr set
	MOVLW	117
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331 GLCDY
	MOVF	GLCDY,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331 GLCDY
	MOVF	GLCDY,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendData_SSD1331( GLCDColour_H )
	MOVF	GLCDCOLOUR_H,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDDATA_SSD1331
;SendData_SSD1331( GLCDColour )
	MOVF	GLCDCOLOUR,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	GOTO	SENDDATA_SSD1331

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (574)
GLOBAL	SENDCOMMAND_SSD1331
SENDCOMMAND_SSD1331:
;set SSD1331_CS OFF;
	BCF	LATC,1
;set SSD1331_DC OFF;
	BCF	LATC,0
;FastHWSPITransfer  SSD1331SendByte
	BANKSEL	SSD1331SENDBYTE
	MOVF	SSD1331SENDBYTE,W
	MOVWF	SPITXDATA
	BANKSEL	STATUS
	CALL	FASTHWSPITRANSFER
;set SSD1331_CS ON;
	BSF	LATC,1
;exit sub
	RETURN
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (649)
GLOBAL	SENDDATA_SSD1331
SENDDATA_SSD1331:
;set SSD1331_CS OFF;
	BCF	LATC,1
;set SSD1331_DC ON;
	BSF	LATC,0
;FastHWSPITransfer  SSD1331SendByte
	BANKSEL	SSD1331SENDBYTE
	MOVF	SSD1331SENDBYTE,W
	MOVWF	SPITXDATA
	BANKSEL	STATUS
	CALL	FASTHWSPITRANSFER
;set SSD1331_CS ON;
	BSF	LATC,1
;exit sub
	RETURN
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (533)
GLOBAL	SENDMULTIPLECOMMAND_SSD1331
SENDMULTIPLECOMMAND_SSD1331:
;Dim SSD1331BytestoSendCounter, SSD1331SendByte as byte
;set SSD1331_CS OFF;
	BCF	LATC,1
;set SSD1331_DC OFF;
	BCF	LATC,0
;for SSD1331BytestoSendCounter = 0 to SSD1331BytestoSend - 1
	BANKSEL	SSD1331BYTESTOSENDCOUNTER
	CLRF	SSD1331BYTESTOSENDCOUNTER
GLOBAL	SYSFORLOOP11
SYSFORLOOP11:
;FastHWSPITransfer  SSD1331_Command( SSD1331BytestoSendCounter )
	MOVLW	LOW(SSD1331_COMMAND)
	ADDWF	SSD1331BYTESTOSENDCOUNTER,W
	MOVWF	FSR0L
	CLRF	SYSTEMP3
	MOVLW	HIGH(SSD1331_COMMAND)
	ADDWFC	SYSTEMP3,W
	MOVWF	FSR0H
	MOVF	INDF0,W
	MOVWF	SPITXDATA
	BANKSEL	STATUS
	CALL	FASTHWSPITRANSFER
;wait 10 us
	MOVLW	26
	MOVWF	DELAYTEMP
GLOBAL	DELAYUS7
DELAYUS7:
	DECFSZ	DELAYTEMP,F
	GOTO	DELAYUS7
	NOP
;next
;POSITIVE VALUE STEP HANDLER IN FOR-NEXT STATEMENT :#4P 
	BANKSEL	SSD1331BYTESTOSEND
	DECF	SSD1331BYTESTOSEND,W
	MOVWF	SYSTEMP3
	MOVF	SSD1331BYTESTOSENDCOUNTER,W
	SUBWF	SYSTEMP3,W
	MOVWF	SYSTEMP1
	MOVWF	SYSBYTETEMPA
	CLRF	SYSBYTETEMPB
	BANKSEL	STATUS
	FCALL	SYSCOMPEQUAL
	COMF	SYSBYTETEMPX,F
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF28
;SET LOOPVAR TO LOOPVAR + STEPVALUE WHERE STEPVALUE IS A POSITIVE VALUE
	BANKSEL	SSD1331BYTESTOSENDCOUNTER
	INCF	SSD1331BYTESTOSENDCOUNTER,F
	GOTO	SYSFORLOOP11
;END IF
GLOBAL	ENDIF28
ENDIF28:
GLOBAL	SYSFORLOOPEND11
SYSFORLOOPEND11:
;set SSD1331_CS ON
	BSF	LATC,1
;exit sub
	RETURN
	RETURN

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (868)
GLOBAL	SETBRIGHTNESS_SSD1331
SETBRIGHTNESS_SSD1331:
;dim_state = dim_state / 16
	MOVF	DIM_STATE,W
	MOVWF	SYSBYTETEMPA
	MOVLW	16
	MOVWF	SYSBYTETEMPB
	FCALL	SYSDIVSUB
	MOVF	SYSBYTETEMPA,W
	MOVWF	DIM_STATE
;SendCommand_SSD1331(SSD1331_MasterCurrent)
	MOVLW	135
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(dim_state)
	MOVF	DIM_STATE,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	LJMP	SENDCOMMAND_SSD1331

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (851)
GLOBAL	SETCONTRAST_SSD1331
SETCONTRAST_SSD1331:
;dim_state = dim_state / 16
	MOVF	DIM_STATE,W
	MOVWF	SYSBYTETEMPA
	MOVLW	16
	MOVWF	SYSBYTETEMPB
	CALL	SYSDIVSUB
	MOVF	SYSBYTETEMPA,W
	MOVWF	DIM_STATE
;SendCommand_SSD1331(SSD1331_CONTRASTA)
	MOVLW	129
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(dim_state)
	MOVF	DIM_STATE,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(SSD1331_CONTRASTB)
	MOVLW	130
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(dim_state)
	MOVF	DIM_STATE,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(SSD1331_CONTRASTC)
	MOVLW	131
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	CALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(dim_state)
	MOVF	DIM_STATE,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	GOTO	SENDCOMMAND_SSD1331

;********************************************************************************

;SOURCE: GLCD_SSD1331.H (880)
GLOBAL	SETPOWERMODE_SSD1331
SETPOWERMODE_SSD1331:
;dim_state = dim_state / 16
	MOVF	DIM_STATE,W
	MOVWF	SYSBYTETEMPA
	MOVLW	16
	MOVWF	SYSBYTETEMPB
	FCALL	SYSDIVSUB
	MOVF	SYSBYTETEMPA,W
	MOVWF	DIM_STATE
;SendCommand_SSD1331(SSD1331_POWERMODE)
	MOVLW	176
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	FCALL	SENDCOMMAND_SSD1331
;SendCommand_SSD1331(dim_state)
	MOVF	DIM_STATE,W
	BANKSEL	SSD1331SENDBYTE
	MOVWF	SSD1331SENDBYTE
	BANKSEL	STATUS
	LJMP	SENDCOMMAND_SSD1331

;********************************************************************************

;SOURCE: SYSTEM.H (3104)
GLOBAL	SYSCOMPEQUAL16
SYSCOMPEQUAL16:
;dim SysWordTempA as word
;dim SysWordTempB as word
;dim SysByteTempX as byte
;clrf SysByteTempX
	CLRF	SYSBYTETEMPX
;Test low, exit if false
;movf SysWordTempA, W
	MOVF	SYSWORDTEMPA, W
;subwf SysWordTempB, W
	SUBWF	SYSWORDTEMPB, W
;btfss STATUS, Z
	BTFSS	STATUS,2
;return
	RETURN
;Test high, exit if false
;movf SysWordTempA_H, W
	MOVF	SYSWORDTEMPA_H, W
;subwf SysWordTempB_H, W
	SUBWF	SYSWORDTEMPB_H, W
;btfss STATUS, Z
	BTFSS	STATUS,2
;return
	RETURN
;comf SysByteTempX,F
	COMF	SYSBYTETEMPX,F
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (3158)
GLOBAL	SYSCOMPEQUAL32
SYSCOMPEQUAL32:
;dim SysLongTempA as long
;dim SysLongTempB as long
;dim SysByteTempX as byte
;clrf SysByteTempX
	CLRF	SYSBYTETEMPX
;Test low, exit if false
;movf SysLongTempA, W
	MOVF	SYSLONGTEMPA, W
;subwf SysLongTempB, W
	SUBWF	SYSLONGTEMPB, W
;btfss STATUS, Z
	BTFSS	STATUS,2
;return
	RETURN
;Test high, exit if false
;movf SysLongTempA_H, W
	MOVF	SYSLONGTEMPA_H, W
;subwf SysLongTempB_H, W
	SUBWF	SYSLONGTEMPB_H, W
;btfss STATUS, Z
	BTFSS	STATUS,2
;return
	RETURN
;Test upper, exit if false
;movf SysLongTempA_U, W
	MOVF	SYSLONGTEMPA_U, W
;subwf SysLongTempB_U, W
	SUBWF	SYSLONGTEMPB_U, W
;btfss STATUS, Z
	BTFSS	STATUS,2
;return
	RETURN
;Test exp, exit if false
;movf SysLongTempA_E, W
	MOVF	SYSLONGTEMPA_E, W
;subwf SysLongTempB_E, W
	SUBWF	SYSLONGTEMPB_E, W
;btfss STATUS, Z
	BTFSS	STATUS,2
;return
	RETURN
;comf SysByteTempX,F
	COMF	SYSBYTETEMPX,F
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (3714)
GLOBAL	SYSCOMPLESSTHANINT
SYSCOMPLESSTHANINT:
;Dim SysIntegerTempA, SysIntegerTempB, SysDivMultA as Integer
;Clear result
;SysByteTempX = 0
	CLRF	SYSBYTETEMPX
;Compare sign bits
;-A
;If SysIntegerTempA.15 = On Then
	BTFSS	SYSINTEGERTEMPA_H,7
	GOTO	ELSE49_1
;-A, +B, return true
;If SysIntegerTempB.15 = Off Then
	BTFSC	SYSINTEGERTEMPB_H,7
	GOTO	ENDIF50
;Set SysByteTempX to 255
;SysByteTempX = Not SysByteTempX
	COMF	SYSBYTETEMPX,F
;Exit Sub
	RETURN
;End If
GLOBAL	ENDIF50
ENDIF50:
;-A, -B, negate both and swap
;SysDivMultA = -SysIntegerTempA
	COMF	SYSINTEGERTEMPA,W
	MOVWF	SYSDIVMULTA
	COMF	SYSINTEGERTEMPA_H,W
	MOVWF	SYSDIVMULTA_H
	INCF	SYSDIVMULTA,F
	BTFSC	STATUS,2
	INCF	SYSDIVMULTA_H,F
;SysIntegerTempA = -SysIntegerTempB
	COMF	SYSINTEGERTEMPB,W
	MOVWF	SYSINTEGERTEMPA
	COMF	SYSINTEGERTEMPB_H,W
	MOVWF	SYSINTEGERTEMPA_H
	INCF	SYSINTEGERTEMPA,F
	BTFSC	STATUS,2
	INCF	SYSINTEGERTEMPA_H,F
;SysIntegerTempB = SysDivMultA
	MOVF	SYSDIVMULTA,W
	MOVWF	SYSINTEGERTEMPB
	MOVF	SYSDIVMULTA_H,W
	MOVWF	SYSINTEGERTEMPB_H
;+A
;Else
	GOTO	ENDIF49
GLOBAL	ELSE49_1
ELSE49_1:
;+A, -B, return false
;If SysIntegerTempB.15 = On Then
	BTFSC	SYSINTEGERTEMPB_H,7
;Exit Sub
	RETURN
;End If
;End If
GLOBAL	ENDIF49
ENDIF49:
;Test High, exit if more
;movf SysIntegerTempA_H,W
	MOVF	SYSINTEGERTEMPA_H,W
;subwf SysIntegerTempB_H,W
	SUBWF	SYSINTEGERTEMPB_H,W
;btfss STATUS,C
	BTFSS	STATUS,0
;return
	RETURN
;Test high, exit true if less
;movf SysIntegerTempB_H,W
	MOVF	SYSINTEGERTEMPB_H,W
;subwf SysIntegerTempA_H,W
	SUBWF	SYSINTEGERTEMPA_H,W
;btfss STATUS,C
	BTFSS	STATUS,0
;goto SCLTIntTrue
	GOTO	SCLTINTTRUE
;Test Low, exit if more or equal
;movf SysIntegerTempB,W
	MOVF	SYSINTEGERTEMPB,W
;subwf SysIntegerTempA,W
	SUBWF	SYSINTEGERTEMPA,W
;btfsc STATUS,C
	BTFSC	STATUS,0
;return
	RETURN
GLOBAL	SCLTINTTRUE
SCLTINTTRUE:
;comf SysByteTempX,F
	COMF	SYSBYTETEMPX,F
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (2793)
GLOBAL	SYSDIVSUB
SYSDIVSUB:
;dim SysByteTempA as byte
;dim SysByteTempB as byte
;dim SysByteTempX as byte
;Check for div/0
;movf SysByteTempB, F
	MOVF	SYSBYTETEMPB, F
;btfsc STATUS, Z
	BTFSC	STATUS,2
;return
	RETURN
;Main calc routine
;SysByteTempX = 0
	CLRF	SYSBYTETEMPX
;SysDivLoop = 8
	MOVLW	8
	MOVWF	SYSDIVLOOP
GLOBAL	SYSDIV8START
SYSDIV8START:
;bcf STATUS, C
	BCF	STATUS,0
;rlf SysByteTempA, F
	RLF	SYSBYTETEMPA, F
;rlf SysByteTempX, F
	RLF	SYSBYTETEMPX, F
;movf SysByteTempB, W
	MOVF	SYSBYTETEMPB, W
;subwf SysByteTempX, F
	SUBWF	SYSBYTETEMPX, F
;bsf SysByteTempA, 0
	BSF	SYSBYTETEMPA, 0
;btfsc STATUS, C
	BTFSC	STATUS,0
;goto Div8NotNeg
	GOTO	DIV8NOTNEG
;bcf SysByteTempA, 0
	BCF	SYSBYTETEMPA, 0
;movf SysByteTempB, W
	MOVF	SYSBYTETEMPB, W
;addwf SysByteTempX, F
	ADDWF	SYSBYTETEMPX, F
GLOBAL	DIV8NOTNEG
DIV8NOTNEG:
;decfsz SysDivLoop, F
	DECFSZ	SYSDIVLOOP, F
;goto SysDiv8Start
	GOTO	SYSDIV8START
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (2861)
GLOBAL	SYSDIVSUB16
SYSDIVSUB16:
;dim SysWordTempA as word
;dim SysWordTempB as word
;dim SysWordTempX as word
;dim SysDivMultA as word
;dim SysDivMultB as word
;dim SysDivMultX as word
;SysDivMultA = SysWordTempA
	MOVF	SYSWORDTEMPA,W
	MOVWF	SYSDIVMULTA
	MOVF	SYSWORDTEMPA_H,W
	MOVWF	SYSDIVMULTA_H
;SysDivMultB = SysWordTempB
	MOVF	SYSWORDTEMPB,W
	MOVWF	SYSDIVMULTB
	MOVF	SYSWORDTEMPB_H,W
	MOVWF	SYSDIVMULTB_H
;SysDivMultX = 0
	CLRF	SYSDIVMULTX
	CLRF	SYSDIVMULTX_H
;Avoid division by zero
;if SysDivMultB = 0 then
	MOVF	SYSDIVMULTB,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSDIVMULTB_H,W
	MOVWF	SYSWORDTEMPA_H
	CLRF	SYSWORDTEMPB
	CLRF	SYSWORDTEMPB_H
	FCALL	SYSCOMPEQUAL16
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF42
;SysWordTempA = 0
	CLRF	SYSWORDTEMPA
	CLRF	SYSWORDTEMPA_H
;exit sub
	RETURN
;end if
GLOBAL	ENDIF42
ENDIF42:
;Main calc routine
;SysDivLoop = 16
	MOVLW	16
	MOVWF	SYSDIVLOOP
GLOBAL	SYSDIV16START
SYSDIV16START:
;set C off
	BCF	STATUS,0
;Rotate SysDivMultA Left
	RLF	SYSDIVMULTA,F
	RLF	SYSDIVMULTA_H,F
;Rotate SysDivMultX Left
	RLF	SYSDIVMULTX,F
	RLF	SYSDIVMULTX_H,F
;SysDivMultX = SysDivMultX - SysDivMultB
	MOVF	SYSDIVMULTB,W
	SUBWF	SYSDIVMULTX,F
	MOVF	SYSDIVMULTB_H,W
	SUBWFB	SYSDIVMULTX_H,F
;Set SysDivMultA.0 On
	BSF	SYSDIVMULTA,0
;If C Off Then
	BTFSC	STATUS,0
	GOTO	ENDIF43
;Set SysDivMultA.0 Off
	BCF	SYSDIVMULTA,0
;SysDivMultX = SysDivMultX + SysDivMultB
	MOVF	SYSDIVMULTB,W
	ADDWF	SYSDIVMULTX,F
	MOVF	SYSDIVMULTB_H,W
	ADDWFC	SYSDIVMULTX_H,F
;End If
GLOBAL	ENDIF43
ENDIF43:
;decfsz SysDivLoop, F
	DECFSZ	SYSDIVLOOP, F
;goto SysDiv16Start
	GOTO	SYSDIV16START
;SysWordTempA = SysDivMultA
	MOVF	SYSDIVMULTA,W
	MOVWF	SYSWORDTEMPA
	MOVF	SYSDIVMULTA_H,W
	MOVWF	SYSWORDTEMPA_H
;SysWordTempX = SysDivMultX
	MOVF	SYSDIVMULTX,W
	MOVWF	SYSWORDTEMPX
	MOVF	SYSDIVMULTX_H,W
	MOVWF	SYSWORDTEMPX_H
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (2937)
GLOBAL	SYSDIVSUB32
SYSDIVSUB32:
;dim SysLongTempA as long
;dim SysLongTempB as long
;dim SysLongTempX as long
;#ifdef PIC
;dim SysLongDivMultA as long
;dim SysLongDivMultB as long
;dim SysLongDivMultX as long
;#endif
;SysLongDivMultA = SysLongTempA
	MOVF	SYSLONGTEMPA,W
	BANKSEL	SYSLONGDIVMULTA
	MOVWF	SYSLONGDIVMULTA
	MOVF	SYSLONGTEMPA_H,W
	MOVWF	SYSLONGDIVMULTA_H
	MOVF	SYSLONGTEMPA_U,W
	MOVWF	SYSLONGDIVMULTA_U
	MOVF	SYSLONGTEMPA_E,W
	MOVWF	SYSLONGDIVMULTA_E
;SysLongDivMultB = SysLongTempB
	MOVF	SYSLONGTEMPB,W
	MOVWF	SYSLONGDIVMULTB
	MOVF	SYSLONGTEMPB_H,W
	MOVWF	SYSLONGDIVMULTB_H
	MOVF	SYSLONGTEMPB_U,W
	MOVWF	SYSLONGDIVMULTB_U
	MOVF	SYSLONGTEMPB_E,W
	MOVWF	SYSLONGDIVMULTB_E
;SysLongDivMultX = 0
	CLRF	SYSLONGDIVMULTX
	CLRF	SYSLONGDIVMULTX_H
	CLRF	SYSLONGDIVMULTX_U
	CLRF	SYSLONGDIVMULTX_E
;Avoid division by zero
;if SysLongDivMultB = 0 then
	MOVF	SYSLONGDIVMULTB,W
	MOVWF	SYSLONGTEMPA
	MOVF	SYSLONGDIVMULTB_H,W
	MOVWF	SYSLONGTEMPA_H
	MOVF	SYSLONGDIVMULTB_U,W
	MOVWF	SYSLONGTEMPA_U
	MOVF	SYSLONGDIVMULTB_E,W
	MOVWF	SYSLONGTEMPA_E
	CLRF	SYSLONGTEMPB
	CLRF	SYSLONGTEMPB_H
	CLRF	SYSLONGTEMPB_U
	CLRF	SYSLONGTEMPB_E
	BANKSEL	STATUS
	CALL	SYSCOMPEQUAL32
	BTFSS	SYSBYTETEMPX,0
	GOTO	ENDIF47
;SysLongTempA = 0
	CLRF	SYSLONGTEMPA
	CLRF	SYSLONGTEMPA_H
	CLRF	SYSLONGTEMPA_U
	CLRF	SYSLONGTEMPA_E
;exit sub
	RETURN
;end if
GLOBAL	ENDIF47
ENDIF47:
;Main calc routine
;SysDivLoop = 32
	MOVLW	32
	MOVWF	SYSDIVLOOP
GLOBAL	SYSDIV32START
SYSDIV32START:
;set C off
	BCF	STATUS,0
;Rotate SysLongDivMultA Left
	BANKSEL	SYSLONGDIVMULTA
	RLF	SYSLONGDIVMULTA,F
	RLF	SYSLONGDIVMULTA_H,F
	RLF	SYSLONGDIVMULTA_U,F
	RLF	SYSLONGDIVMULTA_E,F
;Rotate SysLongDivMultX Left
	RLF	SYSLONGDIVMULTX,F
	RLF	SYSLONGDIVMULTX_H,F
	RLF	SYSLONGDIVMULTX_U,F
	RLF	SYSLONGDIVMULTX_E,F
;SysLongDivMultX = SysLongDivMultX - SysLongDivMultB
	MOVF	SYSLONGDIVMULTB,W
	SUBWF	SYSLONGDIVMULTX,F
	MOVF	SYSLONGDIVMULTB_H,W
	SUBWFB	SYSLONGDIVMULTX_H,F
	MOVF	SYSLONGDIVMULTB_U,W
	SUBWFB	SYSLONGDIVMULTX_U,F
	MOVF	SYSLONGDIVMULTB_E,W
	SUBWFB	SYSLONGDIVMULTX_E,F
;Set SysLongDivMultA.0 On
	BSF	SYSLONGDIVMULTA,0
;If C Off Then
	BTFSC	STATUS,0
	GOTO	ENDIF48
;Set SysLongDivMultA.0 Off
	BCF	SYSLONGDIVMULTA,0
;SysLongDivMultX = SysLongDivMultX + SysLongDivMultB
	MOVF	SYSLONGDIVMULTB,W
	ADDWF	SYSLONGDIVMULTX,F
	MOVF	SYSLONGDIVMULTB_H,W
	ADDWFC	SYSLONGDIVMULTX_H,F
	MOVF	SYSLONGDIVMULTB_U,W
	ADDWFC	SYSLONGDIVMULTX_U,F
	MOVF	SYSLONGDIVMULTB_E,W
	ADDWFC	SYSLONGDIVMULTX_E,F
;End If
GLOBAL	ENDIF48
ENDIF48:
;decfsz SysDivLoop, F
	DECFSZ	SYSDIVLOOP, F
;goto SysDiv32Start
	GOTO	SYSDIV32START
;SysLongTempA = SysLongDivMultA
	MOVF	SYSLONGDIVMULTA,W
	MOVWF	SYSLONGTEMPA
	MOVF	SYSLONGDIVMULTA_H,W
	MOVWF	SYSLONGTEMPA_H
	MOVF	SYSLONGDIVMULTA_U,W
	MOVWF	SYSLONGTEMPA_U
	MOVF	SYSLONGDIVMULTA_E,W
	MOVWF	SYSLONGTEMPA_E
;SysLongTempX = SysLongDivMultX
	MOVF	SYSLONGDIVMULTX,W
	MOVWF	SYSLONGTEMPX
	MOVF	SYSLONGDIVMULTX_H,W
	MOVWF	SYSLONGTEMPX_H
	MOVF	SYSLONGDIVMULTX_U,W
	MOVWF	SYSLONGTEMPX_U
	MOVF	SYSLONGDIVMULTX_E,W
	MOVWF	SYSLONGTEMPX_E
	BANKSEL	STATUS
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (2915)
GLOBAL	SYSDIVSUBINT
SYSDIVSUBINT:
;Dim SysIntegerTempA, SysIntegerTempB, SysIntegerTempX As Integer
;Dim SysSignByte As Byte
;Make both inputs positive, decide output type
;SysSignByte = SysIntegerTempA_H xor SysIntegerTempB_H
	MOVF	SYSINTEGERTEMPA_H,W
	XORWF	SYSINTEGERTEMPB_H,W
	MOVWF	SYSSIGNBYTE
;If SysIntegerTempA.15 Then SysIntegerTempA = -SysIntegerTempA
	BTFSS	SYSINTEGERTEMPA_H,7
	GOTO	ENDIF44
;If SysIntegerTempA.15 Then SysIntegerTempA = -SysIntegerTempA
	COMF	SYSINTEGERTEMPA,F
	COMF	SYSINTEGERTEMPA_H,F
	INCF	SYSINTEGERTEMPA,F
	BTFSC	STATUS,2
	INCF	SYSINTEGERTEMPA_H,F
;If SysIntegerTempA.15 Then SysIntegerTempA = -SysIntegerTempA
GLOBAL	ENDIF44
ENDIF44:
;If SysIntegerTempB.15 Then SysIntegerTempB = -SysIntegerTempB
	BTFSS	SYSINTEGERTEMPB_H,7
	GOTO	ENDIF45
;If SysIntegerTempB.15 Then SysIntegerTempB = -SysIntegerTempB
	COMF	SYSINTEGERTEMPB,F
	COMF	SYSINTEGERTEMPB_H,F
	INCF	SYSINTEGERTEMPB,F
	BTFSC	STATUS,2
	INCF	SYSINTEGERTEMPB_H,F
;If SysIntegerTempB.15 Then SysIntegerTempB = -SysIntegerTempB
GLOBAL	ENDIF45
ENDIF45:
;Call word divide routine
;SysDivSub16
	FCALL	SYSDIVSUB16
;Negate result if necessary
;If SysSignByte.7 Then
	BTFSS	SYSSIGNBYTE,7
	GOTO	ENDIF46
;SysIntegerTempA = -SysIntegerTempA
	COMF	SYSINTEGERTEMPA,F
	COMF	SYSINTEGERTEMPA_H,F
	INCF	SYSINTEGERTEMPA,F
	BTFSC	STATUS,2
	INCF	SYSINTEGERTEMPA_H,F
;SysIntegerTempX = -SysIntegerTempX
	COMF	SYSINTEGERTEMPX,F
	COMF	SYSINTEGERTEMPX_H,F
	INCF	SYSINTEGERTEMPX,F
	BTFSC	STATUS,2
	INCF	SYSINTEGERTEMPX_H,F
;End If
GLOBAL	ENDIF46
ENDIF46:
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (2518)
GLOBAL	SYSMULTSUB
SYSMULTSUB:
;dim SysByteTempA as byte
;dim SysByteTempB as byte
;dim SysByteTempX as byte
;clrf SysByteTempX
	CLRF	SYSBYTETEMPX
GLOBAL	MUL8LOOP
MUL8LOOP:
;movf SysByteTempA, W
	MOVF	SYSBYTETEMPA, W
;btfsc SysByteTempB, 0
	BTFSC	SYSBYTETEMPB, 0
;addwf SysByteTempX, F
	ADDWF	SYSBYTETEMPX, F
;bcf STATUS, C
	BCF	STATUS,0
;rrf SysByteTempB, F
	RRF	SYSBYTETEMPB, F
;bcf STATUS, C
	BCF	STATUS,0
;rlf SysByteTempA, F
	RLF	SYSBYTETEMPA, F
;movf SysByteTempB, F
	MOVF	SYSBYTETEMPB, F
;btfss STATUS, Z
	BTFSS	STATUS,2
;goto MUL8LOOP
	GOTO	MUL8LOOP
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (2565)
GLOBAL	SYSMULTSUB16
SYSMULTSUB16:
;dim SysWordTempA as word
;dim SysWordTempB as word
;dim SysWordTempX as word
;dim SysDivMultA as word
;dim SysDivMultB as word
;dim SysDivMultX as word
;SysDivMultA = SysWordTempA
	MOVF	SYSWORDTEMPA,W
	MOVWF	SYSDIVMULTA
	MOVF	SYSWORDTEMPA_H,W
	MOVWF	SYSDIVMULTA_H
;SysDivMultB = SysWordTempB
	MOVF	SYSWORDTEMPB,W
	MOVWF	SYSDIVMULTB
	MOVF	SYSWORDTEMPB_H,W
	MOVWF	SYSDIVMULTB_H
;SysDivMultX = 0
	CLRF	SYSDIVMULTX
	CLRF	SYSDIVMULTX_H
GLOBAL	MUL16LOOP
MUL16LOOP:
;IF SysDivMultB.0 ON then SysDivMultX += SysDivMultA
	BTFSS	SYSDIVMULTB,0
	GOTO	ENDIF37
;IF SysDivMultB.0 ON then SysDivMultX += SysDivMultA
	MOVF	SYSDIVMULTA,W
	ADDWF	SYSDIVMULTX,F
	MOVF	SYSDIVMULTA_H,W
	ADDWFC	SYSDIVMULTX_H,F
;IF SysDivMultB.0 ON then SysDivMultX += SysDivMultA
GLOBAL	ENDIF37
ENDIF37:
;set STATUS.C OFF
	BCF	STATUS,0
;rotate SysDivMultB right
	RRF	SYSDIVMULTB_H,F
	RRF	SYSDIVMULTB,F
;set STATUS.C off
	BCF	STATUS,0
;rotate SysDivMultA left
	RLF	SYSDIVMULTA,F
	RLF	SYSDIVMULTA_H,F
;if SysDivMultB > 0 then goto MUL16LOOP
	MOVF	SYSDIVMULTB,W
	MOVWF	SYSWORDTEMPB
	MOVF	SYSDIVMULTB_H,W
	MOVWF	SYSWORDTEMPB_H
	CLRF	SYSWORDTEMPA
	CLRF	SYSWORDTEMPA_H
	FCALL	SYSCOMPLESSTHAN16
	BTFSC	SYSBYTETEMPX,0
;if SysDivMultB > 0 then goto MUL16LOOP
	GOTO	MUL16LOOP
;if SysDivMultB > 0 then goto MUL16LOOP
;SysWordTempX = SysDivMultX
	MOVF	SYSDIVMULTX,W
	MOVWF	SYSWORDTEMPX
	MOVF	SYSDIVMULTX_H,W
	MOVWF	SYSWORDTEMPX_H
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (2663)
GLOBAL	SYSMULTSUBINT
SYSMULTSUBINT:
;Dim SysIntegerTempA, SysIntegerTempB, SysIntegerTempX As Integer
;Dim SysSignByte As Byte
;Make both inputs positive, decide output type
;SysSignByte = SysIntegerTempA_H xor SysIntegerTempB_H
	MOVF	SYSINTEGERTEMPA_H,W
	XORWF	SYSINTEGERTEMPB_H,W
	MOVWF	SYSSIGNBYTE
;if SysIntegerTempA.15 then SysIntegerTempA = -SysIntegerTempA
	BTFSS	SYSINTEGERTEMPA_H,7
	GOTO	ENDIF39
;if SysIntegerTempA.15 then SysIntegerTempA = -SysIntegerTempA
	COMF	SYSINTEGERTEMPA,F
	COMF	SYSINTEGERTEMPA_H,F
	INCF	SYSINTEGERTEMPA,F
	BTFSC	STATUS,2
	INCF	SYSINTEGERTEMPA_H,F
;if SysIntegerTempA.15 then SysIntegerTempA = -SysIntegerTempA
GLOBAL	ENDIF39
ENDIF39:
;if SysIntegerTempB.15 then SysIntegerTempB = -SysIntegerTempB
	BTFSS	SYSINTEGERTEMPB_H,7
	GOTO	ENDIF40
;if SysIntegerTempB.15 then SysIntegerTempB = -SysIntegerTempB
	COMF	SYSINTEGERTEMPB,F
	COMF	SYSINTEGERTEMPB_H,F
	INCF	SYSINTEGERTEMPB,F
	BTFSC	STATUS,2
	INCF	SYSINTEGERTEMPB_H,F
;if SysIntegerTempB.15 then SysIntegerTempB = -SysIntegerTempB
GLOBAL	ENDIF40
ENDIF40:
;Call word multiply routine
;SysMultSub16
	FCALL	SYSMULTSUB16
;Negate result if necessary
;if SysSignByte.7 then SysIntegerTempX = -SysIntegerTempX
	BTFSS	SYSSIGNBYTE,7
	GOTO	ENDIF41
;if SysSignByte.7 then SysIntegerTempX = -SysIntegerTempX
	COMF	SYSINTEGERTEMPX,F
	COMF	SYSINTEGERTEMPX_H,F
	INCF	SYSINTEGERTEMPX,F
	BTFSC	STATUS,2
	INCF	SYSINTEGERTEMPX_H,F
;if SysSignByte.7 then SysIntegerTempX = -SysIntegerTempX
GLOBAL	ENDIF41
ENDIF41:
	RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (1571)
GLOBAL	SYSREADSTRING
SYSREADSTRING:
;Dim SysCalcTempA As Byte
;Dim SysStringLength As Byte
;Get length
;call SysStringTables
	FCALL	SYSSTRINGTABLES
;movwf SysCalcTempA
	MOVWF	SYSCALCTEMPA
;movwf INDF1
	MOVWF	INDF1
;goto SysStringReadCheck
	GOTO	SYSSTRINGREADCHECK
GLOBAL	SYSREADSTRINGPART
SYSREADSTRINGPART:
;Get length
;call SysStringTables
	FCALL	SYSSTRINGTABLES
;movwf SysCalcTempA
	MOVWF	SYSCALCTEMPA
;addwf SysStringLength,F
	ADDWF	SYSSTRINGLENGTH,F
;Check length
GLOBAL	SYSSTRINGREADCHECK
SYSSTRINGREADCHECK:
;If length is 0, exit
;movf SysCalcTempA,F
	MOVF	SYSCALCTEMPA,F
;btfsc STATUS,Z
	BTFSC	STATUS,2
;return
	RETURN
;Copy
GLOBAL	SYSSTRINGREAD
SYSSTRINGREAD:
;Get char
;call SysStringTables
	FCALL	SYSSTRINGTABLES
;Set char
;addfsr 1,1
	ADDFSR	1,1
;movwf INDF1
	MOVWF	INDF1
;decfsz SysCalcTempA, F
	DECFSZ	SYSCALCTEMPA, F
;goto SysStringRead
	GOTO	SYSSTRINGREAD
	RETURN

;********************************************************************************

;SOURCE: PICAS.H (7)
GLOBAL	FN__HEXPICAS
FN__HEXPICAS:
;_HexPICAS(0) = 2
	MOVLW	2
	BANKSEL	SYS_HEXPICAS_0
	MOVWF	SYS_HEXPICAS_0
;dim SysStringTemp as byte
;Low nibble
;SysStringTemp = SysValTemp And 0x0F
	MOVLW	15
	BANKSEL	SYSVALTEMP
	ANDWF	SYSVALTEMP,W
	MOVWF	SYSSTRINGTEMP
;If SysStringTemp > 9 Then SysStringTemp = SysStringTemp + 7
	SUBLW	9
	BTFSC	STATUS,0
	GOTO	ENDIF29
;If SysStringTemp > 9 Then SysStringTemp = SysStringTemp + 7
	MOVLW	7
	ADDWF	SYSSTRINGTEMP,F
;If SysStringTemp > 9 Then SysStringTemp = SysStringTemp + 7
GLOBAL	ENDIF29
ENDIF29:
;_HexPICAS(2) = SysStringTemp + 48
	MOVLW	48
	ADDWF	SYSSTRINGTEMP,W
	BANKSEL	SYS_HEXPICAS_2
	MOVWF	SYS_HEXPICAS_2
;Get high nibble
;For SysStringTemp = 1 to 4
;LEGACY METHOD
	BANKSEL	SYSSTRINGTEMP
	CLRF	SYSSTRINGTEMP
GLOBAL	SYSFORLOOP12
SYSFORLOOP12:
	INCF	SYSSTRINGTEMP,F
;Rotate SysValTemp Right
	RRF	SYSVALTEMP,F
;Next
	MOVLW	4
	SUBWF	SYSSTRINGTEMP,W
	BTFSS	STATUS,0
	GOTO	SYSFORLOOP12
GLOBAL	SYSFORLOOPEND12
SYSFORLOOPEND12:
;SysStringTemp = SysValTemp And 0x0F
	MOVLW	15
	ANDWF	SYSVALTEMP,W
	MOVWF	SYSSTRINGTEMP
;If SysStringTemp > 9 Then SysStringTemp = SysStringTemp + 7
	SUBLW	9
	BTFSC	STATUS,0
	GOTO	ENDIF31
;If SysStringTemp > 9 Then SysStringTemp = SysStringTemp + 7
	MOVLW	7
	ADDWF	SYSSTRINGTEMP,F
;If SysStringTemp > 9 Then SysStringTemp = SysStringTemp + 7
GLOBAL	ENDIF31
ENDIF31:
;_HexPICAS(1) = SysStringTemp + 48
	MOVLW	48
	ADDWF	SYSSTRINGTEMP,W
	BANKSEL	SYS_HEXPICAS_1
	MOVWF	SYS_HEXPICAS_1
	BANKSEL	STATUS
	RETURN

;********************************************************************************

;START OF PROGRAM MEMORY PAGE 4
	PSECT	PROGMEM4,CLASS=CODE,SPACE=SPACE_CODE,DELTA=2, ABS, OVRLD 
	ORG	8192
;START OF PROGRAM MEMORY PAGE 5
	PSECT	PROGMEM5,CLASS=CODE,SPACE=SPACE_CODE,DELTA=2, ABS, OVRLD 
	ORG	10240
;START OF PROGRAM MEMORY PAGE 6
	PSECT	PROGMEM6,CLASS=CODE,SPACE=SPACE_CODE,DELTA=2, ABS, OVRLD 
	ORG	12288
;START OF PROGRAM MEMORY PAGE 7
	PSECT	PROGMEM7,CLASS=CODE,SPACE=SPACE_CODE,DELTA=2, ABS, OVRLD 
	ORG	14336
;
; Declare Power-On-Reset entry point
;
 END     RESETVEC
