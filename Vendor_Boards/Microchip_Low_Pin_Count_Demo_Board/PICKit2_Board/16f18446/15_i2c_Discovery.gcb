'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program searches for I2C devices and display their adresses to the attached PC terminal.
'''This program uses the hardware implementation of I2C for the Microchip microprocessors.
'''The microprocessor must have a suitable I2C module.
'''The hardware serial connections are shown in the program.
'''
''' GCBASIC Header block Header block
'''
'''@author  Chris Roper
'''@licence GPL
'''@version 1.00
'''@date    03/05/2018
'''********************************************************************

' ----- Configuration
#CHIP 16F18446, 32
#OPTION Explicit

#STARTUP InitPPS, 85

Sub InitPPS
    'Module: EUSART1
    'TX1  > RB7
    RB7PPS     = 0x000F
    'RB5  > RX1
    RX1DTPPS   = 0x000D
    'Module: MSSP1
    'SDA1 > RB4
    RB4PPS     = 0x0014
    'RB4  > SDA1 (bi-directional)
    SSP1DATPPS = 0x000C
    'SCL1 > RB6
    RB6PPS     = 0x0013
    'RB6  > SCL1 (bi-directional)
    SSP1CLKPPS = 0x000E
End Sub

'Config UART
#DEFINE USART_BLOCKING
#DEFINE USART_BAUD_RATE 19200
Wait 500 ms

' Define I2C settings - CHANGE PORTS TO MATCH PPS
#DEFINE HI2C_BAUD_RATE 400
#DEFINE HI2C_DATA PORTB.4
#DEFINE HI2C_CLOCK PORTB.6
'Initialise I2C
'I2C pins need to be input for SSP module
Dir HI2C_DATA In
Dir HI2C_CLOCK In
'MASTER
HI2CMode Master

#DEFINE SWITCH_DOWN         0
#DEFINE SWITCH_UP           1

#DEFINE SWITCH      PORTA.3

' ----- Main body of program commences here.
' Now assumes Serial Terminal is operational
Dim DeviceID As Byte
Dim DISPLAYNEWLINE As Byte

Do
    HSerPrintCRLF 2
    HSerPrint "Hardware I2C "
    HSerPrint ChipNameStr
    HSerPrintCRLF

    ' Now assumes Serial Terminal is operational
    HSerPrintCRLF
    HSerPrint "   "
    'Create a horizontal row of numbers
    For DeviceID = 0 To 15
        HSerPrint Hex(deviceID)
        HSerPrint " "
    Next

    'Create a vertical column of numbers
    For DeviceID = 0 To 255
        DisplayNewLine = DeviceID % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint Hex(DeviceID)
            If DisplayNewLine > 0 Then
                HSerPrint " "
            End If
        End If
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        If HI2CWaitMSSPTimeout <> TRUE Then

            'Send to address to device
            HI2CSend ( deviceID )

            'Did device fail to respond?
            If HI2CAckpollState = FALSE Then
                HI2CSend ( 0 )
                HSerPrint   Hex(deviceID)
            Else
                HSerPrint "--"
            End If

            'Do a stop.
            HI2CStop
        Else
            'Some thing is not correct.... Clock or Data line disconnect?
            HSerPrint "! "
        End If

    Next

    HSerPrintCRLF 2
    HSerPrint   "End of Search"
    HSerPrintCRLF 2
    Wait 1 s
    Wait While switch = On
Loop

' ----- Support methods.  Subroutines and Functions
