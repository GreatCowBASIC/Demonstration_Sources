'''
'''This demonstration program is a simple GLCD demonstration of the SSD1306 GLCD capabilities.
'''
'''This program is a simple GLCD demonstration of the SSD1306 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The SSD1306 controller a small graphical OLED, suitable for a lot of various projects.
'''The display is 38*35 mm, with an active display surface of 0.96inches, and a 128*64 pixel resolution.
'''The display is easy to interface, using an I2C type of communication.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''
'''This version is compatible will all version of GCBASIC as this demonstration uses Full Memory GLCD mode only.  This can be adapted to Low Memory GLCD mode.
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.00
'''@date    31.10.2022
' ----- Configuration


'Chip Settings.
#CHIP 16F17126
#OPTION Explicit


    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.6.3
    'PinManager data: Not available (3)
    // Generated for 16F17126
    //
    // Template comment at the start of the config file
    //
    #startup InitPPS, 85
    #define PPSToolPart 16F17126

    Sub InitPPS
              
            'Module: MSSP1
            RA1PPS = 0x001B    'SCL1 > RA1
            SSP1CLKPPS = 0x0001    'RA1 > SCL1 (bi-directional)
            RA4PPS = 0x001C    'SDA1 > RA4
            SSP1DATPPS = 0x0004    'RA4 > SDA1 (bi-directional)
        
      
    End Sub
    // Template comment at the end of the config file


'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:   -------------SDA-SW------SCL-ADC--
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ------------TX-LED--LED-LED LED--
''-----------------------------------------




'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDPORT LATC

Dir     RC0         Out
Dir     RC1         Out
Dir     RC2         Out
Dir     RC3         Out

#DEFINE POTENTIOMETER PORTA.0
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTA.3
Dir     SWITCHIN      In

'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING


' Define I2C settings
#DEFINE HI2C_BAUD_RATE 400
#DEFINE HI2C_DATA PORTA.4
#DEFINE HI2C_CLOCK PORTA.1
'Initialise I2C - note for the I2C module the ports need to be set to IN
Dir HI2C_DATA In
Dir HI2C_CLOCK In


'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.
#INCLUDE <glcd.h>
#DEFINE GLCD_TYPE GLCD_TYPE_SSD1306
#DEFINE GLCD_I2C_Address 0x78

'A constant to  allow you to change the GLCD memory usage.
#DEFINE GLCD_PROTECTOVERRUN

' ----- Define variables
Dim BYTENUMBER, CCOUNT As Byte
CCount = 0

Dim longNumber As Long
' max value = 4294967290

longNumber = 123456
Dim wordNumber As Word
Dim outstring As String
wordNumber = 0
byteNumber = 0

' ----- Main program

GLCDPrint 2, 2,   "Great Cow BASIC"
GLCDPrint (2, 18, "Anobium 2022")
GLCDPrint (2, 34, "GLCD Portability Demo")
GLCDPrint (2, 50, ChipNameStr )
Box 0,0,127,63

Wait 3 s
GLCDCLS

' Prepare the static components of the screen
' Print some text
GLCDPrint ( 2,   1, "GLCDPrint")
' Print some more text
GLCDPrint ( 64,  1, "@")
' Print chip speed
GLCDPrint ( 72,  1, ChipMHz)
' Print some text
GLCDPrint ( 86, 1, "Mhz")
' Draw some text
GLCDDrawString( 2,9,"DrawStr")
' Draw a box
Box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1
' Draw a box
Box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1
' Draw a circle
Circle (44,41,15)
' Draw a line
Line 64,31,0,31

    Do Forever

        For CCount = 31 To 127

            ' Print a HEX string
            GLCDPrint ( 64 ,  36,  Hex(longNumber_E ) )
            ' Print a HEX string
            GLCDPrint ( 76 ,  36,  Hex(longNumber_U ) )
            ' Print a HEX string
            GLCDPrint ( 88 ,  36,  Hex(longNumber_H ) )
            ' Print a HEX string
            GLCDPrint ( 100 ,  36, Hex(longNumber   ) )
            ' Print a HEX string
            GLCDPrint ( 112 ,  36, "h" )


            ' Print a padded string
            GLCDPrint ( 64 ,  44, Pad(Str(wordNumber), 5 ) )
            ' Print a padded string
            GLCDPrint ( 64 ,  52, Pad(Str(byteNumber), 3 ) )


            ' Draw a Box
            Box (46,9,56,19)
            ' Draw a character
            GLCDDrawChar(48, 10, CCount )
            ' Prepare a string
            outString = Str( CCount )
            ' Draw a string
            GLCDDrawString(64, 9, Pad(outString,3) )

            ' Draw a filled box
            FilledBox 3,43,11,51, wordNumber

            ' Draw a filled box
            FilledCircle( 44,41,9, longNumber XOR 1)
            ' Draw a line
            Line 0,63,64,31

            ' Do some simple maths
            longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
        Next
    Loop
End
