'''
'''  This demonstration shows the I2C devices attached the microcontroller, this program support the Microchip I2C module.
'''
'''  I2C device required a data bus and a clock bus, devices also required an input voltage and 0v.
'''   I2C data bus is connected to PortA.4
'''   I2C clock bus is connected to PortA.1
'''   Serial output is connected, as previously, to PortC.4
'''
'''  Connect your IC2 devices and see the results on the serial terminal.
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.02
'''@date    31.10.2022
' ----- Configuration

'Chip Settings.
#CHIP 16F17126
#OPTION Explicit


    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.6.3
    'PinManager data: Not available (3)
    // Generated for 16F17126
    //
    // Template comment at the start of the config file
    //
    #startup InitPPS, 85
    #define PPSToolPart 16F17126

    Sub InitPPS
              
            'Module: Error
            RC4PPS = 0x0013    'TX1 > RC4
            'Module: MSSP1
            RA1PPS = 0x001B    'SCL1 > RA1
            SSP1CLKPPS = 0x0001    'RA1 > SCL1 (bi-directional)
            RA4PPS = 0x001C    'SDA1 > RA4
            SSP1DATPPS = 0x0004    'RA4 > SDA1 (bi-directional)
        
      
    End Sub
    // Template comment at the end of the config file


'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:   -------------SDA--SW------SCL-ADC--
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ------------TX-LED--LED-LED LED--
''-----------------------------------------




'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDPORT LATC

Dir     RC0         Out
Dir     RC1         Out
Dir     RC2         Out
Dir     RC3         Out

#DEFINE POTENTIOMETER PORTA.0
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTA.3
Dir     SWITCHIN      In

'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING


' Define I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA PORTA.4
#DEFINE HI2C_CLOCK PORTA.1
'Initialise I2C - note for the I2C module the ports need to be set to IN
Dir HI2C_DATA In
Dir HI2C_CLOCK In
HI2CMode (Master)

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.

Dim DeviceID As Byte
Dim DISPLAYNEWLINE As Byte

Do
 
    HSerPrintCRLF
    HSerPrint "Hardware I2C"
    HSerPrintCRLF 2

    ' Now assumes Serial Terminal is operational
    HSerPrintCRLF
    HSerPrint "   "
    'Create a horizontal row of numbers
    For DeviceID = 0 To 15
        HSerPrint Hex(deviceID)
        HSerPrint " "
    Next

    'Create a vertical column of numbers
    For DeviceID = 0 To 255
        DisplayNewLine = DeviceID % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint Hex(DeviceID)
            If DisplayNewLine > 0 Then
                HSerPrint " "
            End If
        End If
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        HI2CSend ( DeviceID )

        If HI2CWaitMSSPTimeout <> TRUE Then

            'Did device fail to respond?
            If HI2CAckpollState = FALSE Then
                HSerPrint   Hex(deviceID)
                HI2CSend ( 0 )
            Else
                HSerPrint "--"
            End If

        Else
            HSerPrint "! "
        End If
        HI2CStop

    Next

    HSerPrintCRLF 2
    HSerPrint   "End of Search"
    HSerPrintCRLF 2

    Wait While SwitchIn = On
Loop

' ----- Support methods.  Subroutines and Functions
