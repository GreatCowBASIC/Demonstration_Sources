'''
'''******************************************************************
''' LCD demonstration for the board. We have added the LCD section to specific the ports.
''' All the LCD commands are standard GCBASIC LCD commands, as are the ReadAD and HPWM commands.
'''
''' The program uses PWM/CCP1 channel (which is on Portc.2), at a frequency of 40hz and the PWM width is set to 255 minus the LDR value to invert the display.
'''
''' These are all standard GCBASIC commands
'''
''' See the section "Setup LCD Parameters" for the specification of the LCD commands.
'''
''' This program simply read the ADC and sets the Pulse Width Modulation (PWM) to the a value that is the inverse of the light level.
'''
'''************************************************************************
'''
'''  PIC: 18f26k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: SmartPIC 18 Board
'''  Date: 04.10.22
'''
' ----- Configuration
'Chip Settings.
#CHIP 18f26k22, 16
#CONFIG MCLRE=On
#OPTION Explicit

'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---|RS |RW | E |D7 |D6 |D5 |D4
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    -------| O | A |-------| O | I |-
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---| TX| A |-------| X |---------
''-----------------------------------------
''


#DEFINE LEDD1 PORTB.1
#DEFINE LEDD2 PORTB.5
#DEFINE Potentiometer   PORTC.5
#DEFINE LDR             PORTB.4
#DEFINE SwitchIn        PORTB.0
#DEFINE LCDControl      PORTC.2

Dir     LEDD1         Out
Dir     LEDD2         Out
'this is the AN17 port
Dir     Potentiometer In
'this is the AN11 port
Dir     LDR           In
Dir     SwitchIn      In
Dir     LCDControl    Out

LCDControl = 1

'Setup LCD Parameters
#DEFINE LCD_IO 4
#DEFINE LCD_SPEED FAST

'Define LCD Hardware settings
#DEFINE LCD_RS      PORTA.6
#DEFINE LCD_RW      PORTA.5
#DEFINE LCD_Enable  PORTA.4
#DEFINE LCD_DB4     PORTA.0
#DEFINE LCD_DB5     PORTA.1
#DEFINE LCD_DB6     PORTA.2
#DEFINE LCD_DB7     PORTA.3

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.

Dim PWMLEVEL As Byte

Do Forever
    CLS
    Print "GREAT"
    Locate 1, 0
    Print "COW"
    Wait 1 s
    Locate 0, 0
    Print "COW  "
    Locate 1, 0
    Print "BASIC"
    Wait 1 s
    Locate 0, 0
    Print "BASIC"
    Locate 1, 0
    Print "2022  "
    Wait 1 s

    'Use PWM to vary the backlight
    'Use PWM/CCP1 channel, frequency of 40hz and the 255 minus the LDR value to invert the display.
    'These are standard GCBASIC commands
    PWMLEVEL = 255 - ReadAD( AN11 )
    HPWM 1, 40, PWMLEVEL
    CLS
    Print "Read LDR"
    Locate 1, 0
    Print  "LDR = "
    Print PWMLEVEL
    Wait 1 s

Loop






'Code optimisation - this ensures the ADC routines are optimised

' This is not used so optimise
#DEFINE USE_HPWMCCP1 TRUE
' This is not used so optimise
#DEFINE USE_HPWMCCP2 FALSE
' This is used so include in the compiled code
#DEFINE USE_HPWMCCP3 FALSE
' This is not used so optimise
#DEFINE USE_HPWMCCP4 FALSE
' This is not used so optimise
#DEFINE USE_HPWMCCP5 FALSE

' This is used so include in the compiled code
#DEFINE USE_HPWM_TIMER2 TRUE
#DEFINE USE_HPWM_TIMER4 FALSE
#DEFINE USE_HPWM_TIMER6 FALSE
#DEFINE USE_HPWM_TIMER7 FALSE

'Optimise A-d.h
'Standard family chips
#DEFINE USE_AD0 FALSE
#DEFINE USE_AD1 FALSE
#DEFINE USE_AD2 FALSE
#DEFINE USE_AD2 FALSE
#DEFINE USE_AD3 FALSE
#DEFINE USE_AD4 FALSE
#DEFINE USE_AD5 FALSE
#DEFINE USE_AD6 FALSE
#DEFINE USE_AD7 FALSE
#DEFINE USE_AD8 FALSE
#DEFINE USE_AD9 FALSE
#DEFINE USE_AD10 FALSE
' This is used so include in the compiled code
#DEFINE USE_AD11 TRUE
#DEFINE USE_AD12 FALSE
#DEFINE USE_AD13 FALSE
#DEFINE USE_AD14 FALSE
#DEFINE USE_AD15 FALSE
#DEFINE USE_AD16 FALSE
' This is used so include in the compiled code
#DEFINE USE_AD17 TRUE
#DEFINE USE_AD18 FALSE
#DEFINE USE_AD19 FALSE
#DEFINE USE_AD20 FALSE
#DEFINE USE_AD21 FALSE
#DEFINE USE_AD22 FALSE
#DEFINE USE_AD23 FALSE
#DEFINE USE_AD24 FALSE
#DEFINE USE_AD25 FALSE
#DEFINE USE_AD26 FALSE
#DEFINE USE_AD27 FALSE
#DEFINE USE_AD28 FALSE
#DEFINE USE_AD29 FALSE
#DEFINE USE_AD30 FALSE
#DEFINE USE_AD31 FALSE
#DEFINE USE_AD32 FALSE
#DEFINE USE_AD33 FALSE
#DEFINE USE_AD34 FALSE

'Family of chips based on 16f1688x with ADCON3 register
#DEFINE USE_ADA0 FALSE
#DEFINE USE_ADA1 FALSE
#DEFINE USE_ADA2 FALSE
#DEFINE USE_ADA3 FALSE
#DEFINE USE_ADA4 FALSE
#DEFINE USE_ADA5 FALSE
#DEFINE USE_ADA6 FALSE
#DEFINE USE_ADA7 FALSE
#DEFINE USE_ADB0 FALSE
#DEFINE USE_ADB1 FALSE
#DEFINE USE_ADB2 FALSE
#DEFINE USE_ADB3 FALSE
#DEFINE USE_ADB4 FALSE
#DEFINE USE_ADB5 FALSE
#DEFINE USE_ADB6 FALSE
#DEFINE USE_ADB7 FALSE
#DEFINE USE_ADC0 FALSE
#DEFINE USE_ADC1 FALSE
#DEFINE USE_ADC2 FALSE
#DEFINE USE_ADC3 FALSE
#DEFINE USE_ADC4 FALSE
#DEFINE USE_ADC5 FALSE
#DEFINE USE_ADC6 FALSE
#DEFINE USE_ADC7 FALSE
#DEFINE USE_ADD0 FALSE
#DEFINE USE_ADD1 FALSE
#DEFINE USE_ADD2 FALSE
#DEFINE USE_ADD3 FALSE
#DEFINE USE_ADD4 FALSE
#DEFINE USE_ADD5 FALSE
#DEFINE USE_ADD6 FALSE
#DEFINE USE_ADD7 FALSE
#DEFINE USE_ADE0 FALSE
#DEFINE USE_ADE1 FALSE
#DEFINE USE_ADE2 FALSE
