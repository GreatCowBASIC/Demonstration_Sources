'''
'''  Show I2C devices attached to the I2C port on a serial terminal.
'''

'''************************************************************************
'''
'''  PIC: 18f26k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: SmartPIC 18 Board
'''  Date: 04.10.22
'''
' ----- Configuration
'Chip Settings.
#CHIP 18f26k22, 16
#OPTION Explicit

'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    -------| O | ----------| O | I |-
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---| TX|---|SDA|CLK| X |---------
''-----------------------------------------
''


#DEFINE LEDD1 PORTB.1
#DEFINE LEDD2 PORTB.5
#DEFINE Potentiometer   PORTC.5
#DEFINE SwitchIn        PORTB.0
#DEFINE LCDControl      PORTC.2

Dir     LEDD1         Out
Dir     LEDD2         Out
'this is the AN17 port
Dir     Potentiometer In
Dir     SwitchIn      In
Dir     LCDControl    Out

'Always set the LCD on (high) to Shut OFF the LCD-Backlight. This is required when powered from a PicKit.
LCDControl = 1

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.


'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING


' Define I2C settings
#DEFINE HI2C_BAUD_RATE 400
#DEFINE HI2C_DATA PORTC.4
#DEFINE HI2C_CLOCK PORTC.3
'Initialise I2C
'I2C pins need to be input for SSP module - this is not an option
Dir HI2C_DATA In
Dir HI2C_CLOCK In
'MASTER
HI2CMode Master


// ----- Main body of program commences here.
' Now assumes Serial Terminal is operational
Dim DeviceID As Byte
Dim DISPLAYNEWLINE As Byte

Do
    HSerPrintCRLF
    HSerPrint "Hardware I2C "
    HSerPrintCRLF 2

    ' Now assumes Serial Terminal is operational
    HSerPrintCRLF
    HSerPrint "   "
    'Create a horizontal row of numbers
    For DeviceID = 0 To 15
        HSerPrint Hex(deviceID)
        HSerPrint " "
    Next

    'Create a vertical column of numbers
    For DeviceID = 0 To 255
        DisplayNewLine = DeviceID % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint Hex(DeviceID)
            If DisplayNewLine > 0 Then
                HSerPrint " "
            End If
        End If
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        If HI2CWaitMSSPTimeout <> TRUE Then

            'Send to address to device
            HI2CSend ( deviceID )

            'Did device fail to respond?
            If HI2CAckpollState = FALSE Then
                HI2CSend ( 0 )
                HSerPrint   Hex(deviceID)
            Else
                HSerPrint "--"
            End If

            'Do a stop.
            HI2CStop
        Else
            HSerPrint "! "
        End If

    Next

    HSerPrintCRLF 2
    HSerPrint   "End of Search"
    HSerPrintCRLF 2
    Wait 1 s
    Wait While SwitchIn = On
Loop

' ----- Support methods.  Subroutines and Functions
