'''A program  for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
''' This program is replacement firmware for the PICAXE ANALOGUE CALIBRATION BOARD.
'''
''' See  http://www.picaxe.com/docs/BAS810.pdf
'''
''' Compiler: GCB
''' IDE: GCB@SYN
'''
''' This is new firmware for the PICAXE ANALOGUE CALIBRATION BOARD.
'''
''' Why? I removed the original 16C710 as this had failed.
'''
''' Solution?  Rewrite using GCBASIC.  Compile, program and enjoy.
'''            The responsiveness can now be set by set the ADC value and applying power.  The higher the ADC value the slower the response.
'''
'''@author    EvanV
'''@licence   GPL
'''@version   1.0
'''@date      23.4.2018

#CHIP 16f1847, 4


'''Define individual port pins for segments and selects forthe three 7Segment LEDs
#DEFINE DISP_SEG_A PORTB.6
#DEFINE DISP_SEG_B PORTB.2
#DEFINE DISP_SEG_C PORTB.1
#DEFINE DISP_SEG_D PORTB.4
#DEFINE DISP_SEG_E PORTB.5
#DEFINE DISP_SEG_F PORTB.0
#DEFINE DISP_SEG_G PORTB.7

#DEFINE DISP_SEL_1 PORTA.2
#DEFINE DISP_SEL_2 PORTA.3
#DEFINE DISP_SEL_3 PORTB.3

Dim Message As String
Dim ADCValue, InitialADC As Byte

'Read the ADC for the sensitivity (time) of the board
InitialADC = ReadAD(AN0)
If InitialADC  = 0 Then
    InitialADC = 1
End If


'Loop forever
Do Forever
    'read the ADC
    ADCValue = ReadAD(AN0)
    'convert to a string
    Message = LeftPad (Str(ADCValue), 3, "0")

'        Optionally, use a pseudo pulse width modulation to reduce current to the 7segments
    Repeat InitialADC

        'display the value of the ADC
        DisplayChar 1, Message(1)
        Wait 3 ms
        DisplayChar 2, Message(2)
        Wait 3 ms
        DisplayChar 3, Message(3)
        Wait 3 ms

    End Repeat
Loop
