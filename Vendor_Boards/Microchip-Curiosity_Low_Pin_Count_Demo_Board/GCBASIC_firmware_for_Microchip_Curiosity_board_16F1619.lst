

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
d:\GreatCowBASICGits\Demonstration_Sources.git\trunk\Vendor_Boards\Microchip-Curiosity_Low_Pin_Count_Demo_Board\GCBASIC_firmware_for_Microchip_Curiosity_b Thu Apr 06 09:26:20 2023

04-06-2023
     1                           	processor	16F1619
     2                           	pagewidth 180
     3                           	psect	udata_shr,global,class=COMMON,space=1,delta=1,noexec
     4                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,noexec
    11                           	psect	udata_bank6,global,class=BANK6,space=1,delta=1,noexec
    12                           	psect	udata_bank7,global,class=BANK7,space=1,delta=1,noexec
    13                           	psect	udata_bank8,global,class=BANK8,space=1,delta=1,noexec
    14                           	psect	udata_bank9,global,class=BANK9,space=1,delta=1,noexec
    15                           	psect	udata_bank10,global,class=BANK10,space=1,delta=1,noexec
    16                           	psect	udata_bank11,global,class=BANK11,space=1,delta=1,noexec
    17                           	psect	udata_bank12,global,class=BANK12,space=1,delta=1,noexec
    18                           	psect	code,global,class=CODE,delta=2
    19                           	psect	data,global,class=STRCODE,delta=2,noexec
    20                           	psect	PROGMEM0,global,abs,delta=2
    21                           	psect	PROGMEM1,global,abs,ovrld,class=CODE,delta=2
    22                           	psect	PROGMEM2,global,abs,ovrld,class=CODE,delta=2
    23                           	psect	PROGMEM3,global,abs,ovrld,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           
    26                           ;Program compiled by Great Cow BASIC (1.00.00 2023-04-05 (Windows 64 bit) : Build 1228) for Microchip PIC-AS using FreeBASIC 1.07.1/2023-04-05 CRC29
    27                           ; See the GCBASIC forums at http:
    28                           ; Check the documentation and Help at http:
    29                           ;or, email:
    30                           ; evanvennn at users dot sourceforge dot net
    31                           ;********************************************************************************
    32                           ;Set up the assembler options (Chip type, clock source, other bits and pieces)
    33                           ;PROCESSOR 16F1619
    34     0000                     	;C1 Reverselookup WDTE = OFF
    35                           
    36                           ; Reverse lookup file(s)
    37                           ; C:\Program Files\Microchip\xc8\v2.41\pic\include\proc\pic16f1619.inc
    38                           ; C:\Program Files\Microchip\xc8\v2.41\pic\dat\cfgmap\16f1619.cfgmap
    39                           ; Alternative CONFIG file is to be found at C:\Program Files\Microchip\xc8\vX.YY\pic\dat\cfgdata as per Microchip support ticket #00730936
    40                           ;********************************************************************************
    41                           ;********************************************************************************
    42                           ;Explicit CONFIG
    43                           ;Inferred CONFIG
    44                           ;********************************************************************************
    45                           ; The XC8 xc.inc include file. This MUST be placed after the CONFIG statements.
    46     007F                     
    47                           	psect	data
    48     0000                     stk_offset	set	0
    49     0000                     auto_size	set	0
    50                           
    51                           ; stack_auto defines a symbol /name/_offset which equates to the
    52                           ; stack offset of the auto object in question
    53     0000                     
    54                           ; stack_param defines a symbol /name/_offset which equates to the
    55                           ; stack offset of the parameter object in question
    56     0000                     
    57                           ; alloc_stack adjusts the SP to allocate space for auto objects
    58                           ; it also links in to the btemp symbol so that can be used
    59     0000                     
    60                           ; restore_stack adjusts the SP to remove all auto and parameter
    61                           ; objects from the stack prior to returning from a function
    62     0000                     
    63                           ;********************************************************************************
    64                           ;Set aside RAM memory locations for variables. All variables are global.
    65     0020                     	; 0X20
    66     0021                     	; 0X21
    67     0022                     	; 0X22
    68     0023                     	; 0X23
    69     0070                     	; 0X70
    70     0071                     	; 0X71
    71     0024                     	; 0X24
    72     0028                     	; 0X28
    73     002B                     	; 0X2B
    74     0029                     	; 0X29
    75     002A                     	; 0X2A
    76     0027                     	; 0X27
    77     0025                     	; 0X25
    78     0026                     	; 0X26
    79     002C                     	; 0X2C
    80     002D                     	; 0X2D
    81     002E                     	; 0X2E
    82     002F                     	; 0X2F
    83     0031                     	; 0X31
    84     0030                     	; 0X30
    85     0032                     	; 0X32
    86     0034                     	; 0X34
    87     0033                     	; 0X33
    88     0035                     	; 0X35
    89     0036                     	; 0X36
    90     0037                     	; 0X37
    91     0038                     	; 0X38
    92     0039                     	; 0X39
    93     003A                     	; 0X3A
    94     003B                     	; 0X3B
    95     003C                     	; 0X3C
    96     003D                     	; 0X3D
    97     003E                     	; 0X3E
    98     003F                     	; 0X3F
    99     0040                     	; 0X40
   100     0041                     	; 0X41
   101     0075                     	; 0X75
   102     0079                     	; 0X79
   103     0070                     	; 0X70
   104     0074                     	; 0X74
   105     0077                     	; 0X77
   106     0078                     	; 0X78
   107     007B                     	; 0X7B
   108     007C                     	; 0X7C
   109     0072                     	; 0X72
   110     0073                     	; 0X73
   111     0042                     	; 0X42
   112     0045                     	; 0X45
   113     0043                     	; 0X43
   114     0044                     	; 0X44
   115     0046                     	; 0X46
   116     0049                     	; 0X49
   117     0047                     	; 0X47
   118     0048                     	; 0X48
   119     004A                     	; 0X4A
   120     004D                     	; 0X4D
   121     004B                     	; 0X4B
   122     004C                     	; 0X4C
   123     0075                     	; 0X75
   124     0078                     	; 0X78
   125     0076                     	; 0X76
   126     0077                     	; 0X77
   127     0079                     	; 0X79
   128     007C                     	; 0X7C
   129     007A                     	; 0X7A
   130     007B                     	; 0X7B
   131     0070                     	; 0X70
   132     0073                     	; 0X73
   133     0071                     	; 0X71
   134     0072                     	; 0X72
   135     004E                     	; 0X4E
   136     004F                     	; 0X4F
   137     0052                     	; 0X52
   138     0050                     	; 0X50
   139     0051                     	; 0X51
   140     0053                     	; 0X53
   141     0054                     	; 0X54
   142     0075                     	; 0X75
   143     0072                     	; 0X72
   144     0073                     	; 0X73
   145     0074                     	; 0X74
   146     0075                     	; 0X75
   147     0076                     	; 0X76
   148     0075                     	; 0X75
   149     0076                     	; 0X76
   150     0079                     	; 0X79
   151     007A                     	; 0X7A
   152     0070                     	; 0X70
   153     0071                     	; 0X71
   154     0055                     	; 0X55
   155     0056                     	; 0X56
   156     0057                     	; 0X57
   157                           
   158                           ;********************************************************************************
   159                           ;ALIAS VARIABLES
   160     003A                     
   161                           	psect	PROGMEM0
   162     0000                     RESETVEC:	
   163                           ;********************************************************************************
   164                           
   165                           
   166                           ;VECTORS
   167     0000                     	org	0
   168     0000  3180               	pagesel	BASPROGRAMSTART
   169     0001  2805               	goto	BASPROGRAMSTART
   170     0004                     	org	4
   171     0004  0009               	retfie
   172                           
   173                           ;********************************************************************************
   174                           ;START OF PROGRAM MEMORY PAGE 0
   175     0005                     	org	5
   176     0005                     BASPROGRAMSTART:
   177                           
   178                           ;CALL INITIALISATION ROUTINES
   179     0005  21DB               	call	INITSYS
   180     0006  21BC               	call	INITPPS
   181     0007  21C1               	call	INITPWM
   182                           
   183                           ;START OF THE MAIN PROGRAM
   184                           ;''A DEMONSTRATION PROGRAM FOR GCGB AND GCB.
   185                           ;''--------------------------------------------------------------------------------
   186                           ;'' THIS PROGRAM RECREATION OF MICROCHIP CURIOSITY FIRMWARE FOR THE 16F1619
   187                           ;''
   188                           ;'' BASED ON CVD_TOUCH_BUTTON_16F1619 BY TREVOR B ROYDHOUSE
   189                           ;''
   190                           ;'' MICROCHIP CURIOSITY 8/14/20 PIN 8 BIT DEMO BOARD
   191                           ;'' O PIC16F1619 (HTTP:
   192                           ;'' O LEDS D4-D7 ON ((PORTA) and 07Fh), 5, ((PORTA) and 07Fh), 1/PGEC, ((PORTA) and 07Fh), 2, ((PORTC) and 07Fh), 5
   193                           ;'' O SWITCH SWITCH1 ON ((PORTC) and 07Fh), 4
   194                           ;'' O SWITCH S2 ON ((PORTA) and 07Fh), 3/MCLRE
   195                           ;'' O TOUCH SWITCH S3 ON ((PORTC) and 07Fh), 1/AN5
   196                           ;'' O POTENTIOMETER POT1 ON ((PORTC) and 07Fh), 0/AN4
   197                           ;''
   198                           ;'' AN IMPLEMENTATION OF MICROCHIP APPLICATION NOTE AN1298
   199                           ;'' O CAPACITIVE TOUCH USING ONLY AN ADC USING THE CONCEPT OF CAPACITIVE VOLTAGE DIVIDER ("CVD")
   200                           ;'' O HTTP:
   201                           ;''
   202                           ;'' ON STARTUP LEDS D4-D7 TURN ON AND OFF
   203                           ;'' LED D6 TURNS ON WHILE S3 TOUCH SENSOR IS TOUCHED
   204                           ;'' LED D6 TURNS OFF WHEN S3 TOUCH SENSOR IS NOT TOUCHED
   205                           ;'' LED D7 IS THE PWM SIGNAL
   206                           ;'' LED D4 TURNS ((CWG1CON1) and 07Fh), 5 WHEN S1 IS PRESSED
   207                           ;''
   208                           ;''AUTHOR EVAN R. VENN
   209                           ;''LICENSE GPL
   210                           ;''VERSION 1.00
   211                           ;''DATE 2023-04-02
   212                           ;''********************************************************************************
   213                           ;---- CONFIGURATION
   214                           ;MICROCONTROLLER 32MHZ
   215                           ;MCLRE SET ON SO THAT SWITCH S2 CAN RESET MICROCONTROLLER
   216                           ;GENERATED BY PIC PPS TOOL FOR GREAT COW BASIC
   217                           ;PPS TOOL VERSION: 0.0.6.3
   218                           ;PINMANAGER DATA: NOT AVAILABLE (3)
   219                           ;GENERATED FOR 16F1619
   220                           ;
   221                           ;TEMPLATE COMMENT AT THE START OF THE CONFIG FILE
   222                           ;
   223                           ;TEMPLATE COMMENT AT THE END OF THE CONFIG FILE
   224                           ;ENSURE ALL VARIABLES ARE EXPLICITLY DEFINED
   225                           ;---- DEFINE HARDWARE SETTINGS
   226                           ;DIR SWITCH1 ((CWG1CON1) and 07Fh), 5
   227     0008  0021               	banksel	142
   228     0009  160E               	bsf	142,4
   229                           
   230                           ;DIR PORTA.5 OUT
   231     000A  128C               	bcf	140,5
   232                           
   233                           ;DIR PORTA.1 OUT
   234     000B  108C               	bcf	140,1
   235                           
   236                           ;DIR PORTA.2 OUT
   237     000C  110C               	bcf	140,2
   238                           
   239                           ;DIR PORTC.5 OUT
   240     000D  128E               	bcf	142,5
   241                           
   242                           ;DIR PORTC.0 ((CWG1CON1) and 07Fh), 5
   243     000E  140E               	bsf	142,0
   244                           
   245                           ;STARTUP WAIT ((CWG1CON1) and 07Fh), 5 SECONDS
   246                           ;---- VARIABLES
   247                           ;DIM PWMSETCOUNTER AS WORD
   248                           ;PWMSETCOUNTER = 0
   249     000F  0020               	banksel	55
   250     0010  01B7               	clrf	55
   251     0011  01B8               	clrf	56
   252                           
   253                           ;---- MAIN BODY OF PROGRAM
   254                           ;LED INIT ON PROGRAM STARTUP
   255                           ;WAIT WAITSECS S
   256     0012  3001               	movlw	1
   257     0013  00F4               	movwf	116
   258     0014  20DA               	call	DELAY_S
   259                           
   260                           ;SET LED4 = 1
   261     0015  0022               	banksel	268
   262     0016  168C               	bsf	268,5
   263                           
   264                           ;SET LED5 = 1
   265     0017  148C               	bsf	268,1
   266                           
   267                           ;SET LED6 = 1
   268     0018  150C               	bsf	268,2
   269                           
   270                           ;SET LED7 = 1
   271     0019  168E               	bsf	270,5
   272                           
   273                           ;WAIT WAITSECS S
   274     001A  3001               	movlw	1
   275     001B  00F4               	movwf	116
   276     001C  0020               	banksel	3
   277     001D  20DA               	call	DELAY_S
   278                           
   279                           ;SET LED7 = 0
   280     001E  0022               	banksel	270
   281     001F  128E               	bcf	270,5
   282                           
   283                           ;SET LED6 = 0
   284     0020  110C               	bcf	268,2
   285                           
   286                           ;SET LED5 = 0
   287     0021  108C               	bcf	268,1
   288                           
   289                           ;SET LED4 = 0
   290     0022  128C               	bcf	268,5
   291                           
   292                           ;REQUIRED TO SUPPORT HPWMUPDATE WHEN USING PWM/CCPN MODULE
   293                           ;PMW FREQENCY AND DUTY TO VALUE
   294                           ;DIM PWMDUTYVALUE AS BYTE
   295                           ;DIM PWMDIRECTION AS INTEGER
   296                           ;PWMDIRECTION = 1
   297     0023  3001               	movlw	1
   298     0024  0020               	banksel	45
   299     0025  00AD               	movwf	45
   300     0026  01AE               	clrf	46
   301                           
   302                           ;PWMDUTYVALUE = 127
   303     0027  307F               	movlw	127
   304     0028  00B1               	movwf	49
   305                           
   306                           ;PWM3 IS AN 8 BIT SIGNAL
   307                           ;HPWM 3, 3, PWMDUTYVALUE, 2
   308     0029  3003               	movlw	3
   309     002A  00AC               	movwf	44
   310     002B  3003               	movlw	3
   311     002C  00B2               	movwf	50
   312     002D  01B3               	clrf	51
   313     002E  0831               	movf	49,w
   314     002F  00AF               	movwf	47
   315     0030  01B0               	clrf	48
   316     0031  3002               	movlw	2
   317     0032  00D7               	movwf	87
   318     0033  30FF               	movlw	255
   319     0034  00B5               	movwf	53
   320     0035  01B6               	clrf	54
   321     0036  20E2               	call	HPWM27
   322     0037                     SYSDOLOOP_S1:	
   323                           ;PROGRAM INFINITE LOOP
   324                           ;DO FOREVER
   325                           
   326                           
   327                           ;SET LED TO ((WDTTMR) and 07Fh), 2 OF SWITCH
   328                           ;LED4 = !SWITCH1
   329     0037  01D3               	clrf	83
   330     0038  1A0E               	btfsc	14,4
   331     0039  0AD3               	incf	83,f
   332     003A  09D3               	comf	83,f
   333     003B  0022               	banksel	268
   334     003C  128C               	bcf	268,5
   335     003D  0020               	banksel	83
   336     003E  1C53               	btfss	83,0
   337     003F  2842               	goto	ENDIF4
   338     0040  0022               	banksel	268
   339     0041  168C               	bsf	268,5
   340     0042                     ENDIF4:
   341                           
   342                           ;IF PWMSETCOUNTER MOD 64 = 0 THEN
   343     0042  0020               	banksel	55
   344     0043  0837               	movf	55,w
   345     0044  00F5               	movwf	117
   346     0045  0838               	movf	56,w
   347     0046  00F6               	movwf	118
   348     0047  3040               	movlw	64
   349     0048  00F9               	movwf	121
   350     0049  01FA               	clrf	122
   351     004A  2339               	call	SYSDIVSUB16
   352     004B  0870               	movf	112,w
   353     004C  00CF               	movwf	79
   354     004D  0871               	movf	113,w
   355     004E  00D0               	movwf	80
   356     004F  084F               	movf	79,w
   357     0050  00F5               	movwf	117
   358     0051  0850               	movf	80,w
   359     0052  00F6               	movwf	118
   360     0053  01F9               	clrf	121
   361     0054  01FA               	clrf	122
   362     0055  22F3               	call	SYSCOMPEQUAL16
   363     0056  1C70               	btfss	112,0
   364     0057  2870               	goto	ENDIF1
   365                           
   366                           ;PMW DUTY CHANGE
   367                           ;HPWMUPDATE 3, READAD ( AN4 )
   368     0058  3003               	movlw	3
   369     0059  00AC               	movwf	44
   370     005A  3004               	movlw	4
   371     005B  00A2               	movwf	34
   372     005C  21EF               	call	FN_READAD6
   373     005D  083A               	movf	58,w
   374     005E  00AF               	movwf	47
   375     005F  01B0               	clrf	48
   376     0060  219C               	call	HPWMUPDATE
   377                           
   378                           ;PWMDUTYVALUE
   379                           ;CYCLE THE DUTY UP AND DOWN
   380                           ;PWMDUTYVALUE = PWMDUTYVALUE + PWMDIRECTION
   381     0061  082D               	movf	45,w
   382     0062  07B1               	addwf	49,f
   383                           
   384                           ;IF PWMDUTYVALUE = 255 THEN
   385     0063  0A31               	incf	49,w
   386     0064  1D03               	btfss	3,2
   387     0065  286A               	goto	ELSE2_1
   388                           
   389                           ;PWMDIRECTION = -1
   390     0066  30FF               	movlw	255
   391     0067  00AD               	movwf	45
   392     0068  00AE               	movwf	46
   393                           
   394                           ;ELSE IF PWMDUTYVALUE = 0 THEN
   395     0069  2870               	goto	ENDIF2
   396     006A                     ELSE2_1:
   397     006A  08B1               	movf	49,f
   398     006B  1D03               	btfss	3,2
   399     006C  2870               	goto	ENDIF2
   400                           
   401                           ;PWMDIRECTION = 1
   402     006D  3001               	movlw	1
   403     006E  00AD               	movwf	45
   404     006F  01AE               	clrf	46
   405     0070                     ENDIF2:	
   406                           ;END IF
   407                           
   408     0070                     ENDIF1:	
   409                           ;END IF
   410                           
   411                           
   412                           ;PWMSETCOUNTER++
   413     0070  0AB7               	incf	55,f
   414     0071  1903               	btfsc	3,2
   415     0072  0AB8               	incf	56,f
   416                           
   417                           ;READ MTOUCH ((WDTTMR) and 07Fh), 2
   418                           ;READMTOUCH
   419     0073  2288               	call	READMTOUCH
   420                           
   421                           ;LOOP
   422     0074  2837               	goto	SYSDOLOOP_S1
   423     0075                     SYSDOLOOP_E1:
   424     0075                     BASPROGRAMEND:	
   425                           ;---- METHODS
   426                           ;GCODE OPTIMISATION FILE - THIS WILL OPTIMISE ADC OPERATIONS BY DISABLING THE ADC OPERATIONS ON THE AD CHANNEL THAT IS SET TO FALSE
   427                           ;TO ENABLE ADC OPERATIONS ON A SPECIFIC AD CHANNEL SET TO TRUE
   428                           ;
   429                           ;LEGACY CHIP CONSTANTS FOR ADC
   430                           ;
   431                           ;RECENT CHIP CONSTANTS FOR ADC
   432                           ;GCODE OPTIMISATION FILE - THIS WILL OPTIMISE PWM OPERATIONS BY DISABLING THE PWM OPERATIONS ON THE PWM CHANNEL AND TIMER THAT IS SET TO FALSE
   433                           ;TO ENABLE PWM AND TIMER OPERATIONS SET TO FALSE
   434                           ;
   435                           ;OPTIMISE CCP/PWM
   436                           ;
   437                           ;OPTIMISE PWM
   438                           ;OPTIMISE TIMERS ASSOCIATED WITH PWM OPERATIONS
   439                           
   440     0075  0063               	sleep
   441     0076  2875               	goto	BASPROGRAMEND
   442     0077                     CALCULATEDUTY:	
   443                           ;********************************************************************************
   444                           ;SOURCE: PWM.H (4566)
   445                           
   446                           
   447                           ;DIM PRX_TEMP AS LONG
   448                           ;DIM PWMDUTY AS WORD
   449                           ;DIM PWMRESOLUTION AS WORD
   450                           ;ASSUMES PRX_TEMP AND PWMDUTY ARE ((AT1CON1) and 07Fh), 0
   451                           ;PRX_TEMP = PWMDUTY * ( PRX_TEMP + 1 )
   452     0077  3001               	movlw	1
   453     0078  0724               	addwf	36,w
   454     0079  00CF               	movwf	79
   455     007A  3000               	movlw	0
   456     007B  3D25               	addwfc	37,w
   457     007C  00D0               	movwf	80
   458     007D  3000               	movlw	0
   459     007E  3D26               	addwfc	38,w
   460     007F  00D1               	movwf	81
   461     0080  3000               	movlw	0
   462     0081  3D27               	addwfc	39,w
   463     0082  00D2               	movwf	82
   464     0083  082F               	movf	47,w
   465     0084  00F5               	movwf	117
   466     0085  0830               	movf	48,w
   467     0086  00F6               	movwf	118
   468     0087  01F7               	clrf	119
   469     0088  01F8               	clrf	120
   470     0089  084F               	movf	79,w
   471     008A  00F9               	movwf	121
   472     008B  0850               	movf	80,w
   473     008C  00FA               	movwf	122
   474     008D  0851               	movf	81,w
   475     008E  00FB               	movwf	123
   476     008F  0852               	movf	82,w
   477     0090  00FC               	movwf	124
   478     0091  23C7               	call	SYSMULTSUB32
   479     0092  0870               	movf	112,w
   480     0093  00A4               	movwf	36
   481     0094  0871               	movf	113,w
   482     0095  00A5               	movwf	37
   483     0096  0872               	movf	114,w
   484     0097  00A6               	movwf	38
   485     0098  0873               	movf	115,w
   486     0099  00A7               	movwf	39
   487                           
   488                           ;SET C OFF
   489     009A  1003               	bcf	3,0
   490                           
   491                           ;REPEAT 2
   492     009B  3002               	movlw	2
   493     009C  00CE               	movwf	78
   494     009D                     SYSREPEATLOOP1:
   495                           
   496                           ;ROTATE PRX_TEMP LEFT
   497     009D  0DA4               	rlf	36,f
   498     009E  0DA5               	rlf	37,f
   499     009F  0DA6               	rlf	38,f
   500     00A0  0DA7               	rlf	39,f
   501                           
   502                           ;END REPEAT
   503     00A1  0BCE               	decfsz	78,f
   504     00A2  289D               	goto	SYSREPEATLOOP1
   505     00A3                     SYSREPEATLOOPEND1:
   506                           
   507                           ;PRX_TEMP = PRX_TEMP / PWMRESOLUTION 'WHERE PWMRESOLUTION IS 255 OR 1023
   508     00A3  0824               	movf	36,w
   509     00A4  00F5               	movwf	117
   510     00A5  0825               	movf	37,w
   511     00A6  00F6               	movwf	118
   512     00A7  0826               	movf	38,w
   513     00A8  00F7               	movwf	119
   514     00A9  0827               	movf	39,w
   515     00AA  00F8               	movwf	120
   516     00AB  0835               	movf	53,w
   517     00AC  00F9               	movwf	121
   518     00AD  0836               	movf	54,w
   519     00AE  00FA               	movwf	122
   520     00AF  01FB               	clrf	123
   521     00B0  01FC               	clrf	124
   522     00B1  236D               	call	SYSDIVSUB32
   523     00B2  0875               	movf	117,w
   524     00B3  00A4               	movwf	36
   525     00B4  0876               	movf	118,w
   526     00B5  00A5               	movwf	37
   527     00B6  0877               	movf	119,w
   528     00B7  00A6               	movwf	38
   529     00B8  0878               	movf	120,w
   530     00B9  00A7               	movwf	39
   531                           
   532                           ;SET C OFF
   533     00BA  1003               	bcf	3,0
   534                           
   535                           ;REPEAT 6
   536     00BB  3006               	movlw	6
   537     00BC  00CE               	movwf	78
   538     00BD                     SYSREPEATLOOP2:
   539                           
   540                           ;ROTATE PRX_TEMP LEFT
   541     00BD  0DA4               	rlf	36,f
   542     00BE  0DA5               	rlf	37,f
   543     00BF  0DA6               	rlf	38,f
   544     00C0  0DA7               	rlf	39,f
   545                           
   546                           ;END REPEAT
   547     00C1  0BCE               	decfsz	78,f
   548     00C2  28BD               	goto	SYSREPEATLOOP2
   549     00C3                     SYSREPEATLOOPEND2:
   550                           
   551                           ;EXITS WITH PRX_TEMP CALCULATED
   552     00C3  0008               	return
   553     00C4                     DELAY_10US:	
   554                           ;********************************************************************************
   555                           
   556     00C4                     D10US_START:
   557     00C4  3019               	movlw	25
   558     00C5  00F0               	movwf	112
   559     00C6                     DELAYUS0:
   560     00C6  0BF0               	decfsz	112,f
   561     00C7  28C6               	goto	DELAYUS0
   562     00C8  0000               	nop
   563     00C9  0BF5               	decfsz	117,f
   564     00CA  28C4               	goto	D10US_START
   565     00CB  0008               	return
   566     00CC                     DELAY_MS:	
   567                           ;********************************************************************************
   568                           
   569     00CC  0AF3               	incf	115,f
   570     00CD                     DMS_START:
   571     00CD  300E               	movlw	14
   572     00CE  00F1               	movwf	113
   573     00CF                     DMS_OUTER:
   574     00CF  30BD               	movlw	189
   575     00D0  00F0               	movwf	112
   576     00D1                     DMS_INNER:
   577     00D1  0BF0               	decfsz	112,f
   578     00D2  28D1               	goto	DMS_INNER
   579     00D3  0BF1               	decfsz	113,f
   580     00D4  28CF               	goto	DMS_OUTER
   581     00D5  0BF2               	decfsz	114,f
   582     00D6  28CD               	goto	DMS_START
   583     00D7  0BF3               	decfsz	115,f
   584     00D8  28CD               	goto	DMS_START
   585     00D9  0008               	return
   586     00DA                     DELAY_S:	
   587                           ;********************************************************************************
   588                           
   589     00DA                     DS_START:
   590     00DA  30E8               	movlw	232
   591     00DB  00F2               	movwf	114
   592     00DC  3003               	movlw	3
   593     00DD  00F3               	movwf	115
   594     00DE  20CC               	call	DELAY_MS
   595     00DF  0BF4               	decfsz	116,f
   596     00E0  28DA               	goto	DS_START
   597     00E1  0008               	return
   598     00E2                     HPWM27:	
   599                           ;********************************************************************************
   600                           ;OVERLOADED SIGNATURE: BYTE:WORD:BYTE:BYTE:WORD:, SOURCE: PWM.H (3368)
   601                           
   602                           
   603                           ;DIM PWMDUTY AS WORD
   604                           ;HPWM ( PWMCHANNEL, PWMFREQ, [WORD]PWMDUTY, _PWMTIMERSELECTED, PWMRESOLUTION )
   605     00E2  28E3               	goto	HPWM28
   606     00E3                     HPWM28:	
   607                           ;********************************************************************************
   608                           ;OVERLOADED SIGNATURE: BYTE:WORD:WORD:BYTE:WORD:, SOURCE: PWM.H (3375)
   609                           
   610                           
   611                           ;DIM PRX_TEMP AS LONG
   612                           ;DIM TIMERSELECTIONBITS AS BYTE
   613                           ;IF HPWM_FAST OPERATION SELECTED, ONLY RECALCULATE DUTY TIMER PRESCALER WHEN
   614                           ;NEEDED.
   615                           ;IF ( PWMFREQ <> PWMFREQOLD ) OR ( _PWMTIMERSELECTED <> PWMTIMEROLD ) THEN
   616     00E3  0832               	movf	50,w
   617     00E4  00F5               	movwf	117
   618     00E5  0833               	movf	51,w
   619     00E6  00F6               	movwf	118
   620     00E7  0834               	movf	52,w
   621     00E8  00F9               	movwf	121
   622     00E9  01FA               	clrf	122
   623     00EA  22F3               	call	SYSCOMPEQUAL16
   624     00EB  09F0               	comf	112,f
   625     00EC  0870               	movf	112,w
   626     00ED  00D3               	movwf	83
   627     00EE  0857               	movf	87,w
   628     00EF  00F5               	movwf	117
   629     00F0  0839               	movf	57,w
   630     00F1  00F9               	movwf	121
   631     00F2  22ED               	call	SYSCOMPEQUAL
   632     00F3  09F0               	comf	112,f
   633     00F4  0870               	movf	112,w
   634     00F5  00CF               	movwf	79
   635     00F6  0853               	movf	83,w
   636     00F7  044F               	iorwf	79,w
   637     00F8  00D4               	movwf	84
   638     00F9  1C54               	btfss	84,0
   639     00FA  296F               	goto	ELSE16_1
   640                           
   641                           ;COMMENCE CALCULATIONS OF PMW PARAMETERS
   642                           ;THIS FIGURES OUT PRESCALER REQUIRED. WE CAN SET TO 1, 4 OR 16 TO SET TX_PR
   643                           ;SO, START WITH 1 - CHECK THE REMAINDER. IF THE REMAINDER ((CWG1CON1) and 07Fh), 5 THE HIGH BYTE IS GREATER THEN ((STATUS) and 07Fh), 2 THEN DO SAME
      +                           WITH A PRESCALER VALUE OF 4
   644                           ;SO, USING 4 - CHECK THE REMAINDER. IF THE REMAINDER ((CWG1CON1) and 07Fh), 5 THE HIGH BYTE IS GREATER THEN ((STATUS) and 07Fh), 2 THEN DO SAME WITH
      +                           A PRESCALER VALUE OF 16
   645                           ;SO, USING 16
   646                           ;THIS SIMPLY SETS UP TX_PR TO 1,4 OR 16
   647                           ;PRX_TEMP = PWMOSC1 / PWMFREQ
   648     00FB  3040               	movlw	64
   649     00FC  00F5               	movwf	117
   650     00FD  301F               	movlw	31
   651     00FE  00F6               	movwf	118
   652     00FF  01F7               	clrf	119
   653     0100  01F8               	clrf	120
   654     0101  0832               	movf	50,w
   655     0102  00F9               	movwf	121
   656     0103  0833               	movf	51,w
   657     0104  00FA               	movwf	122
   658     0105  01FB               	clrf	123
   659     0106  01FC               	clrf	124
   660     0107  236D               	call	SYSDIVSUB32
   661     0108  0875               	movf	117,w
   662     0109  00A4               	movwf	36
   663     010A  0876               	movf	118,w
   664     010B  00A5               	movwf	37
   665     010C  0877               	movf	119,w
   666     010D  00A6               	movwf	38
   667     010E  0878               	movf	120,w
   668     010F  00A7               	movwf	39
   669                           
   670                           ;TX_PR = 1
   671     0110  3001               	movlw	1
   672     0111  00D6               	movwf	86
   673                           
   674                           ;IF PRX_TEMP_H > 0 THEN
   675     0112  0825               	movf	37,w
   676     0113  3C00               	sublw	0
   677     0114  1803               	btfsc	3,0
   678     0115  2922               	goto	ENDIF18
   679                           
   680                           ;TX_PR = 4
   681     0116  3004               	movlw	4
   682     0117  00D6               	movwf	86
   683                           
   684                           ;DIVIDE BY 4
   685                           ;SET STATUS.C OFF
   686     0118  1003               	bcf	3,0
   687                           
   688                           ;ROTATE PRX_TEMP RIGHT
   689     0119  0CA7               	rrf	39,f
   690     011A  0CA6               	rrf	38,f
   691     011B  0CA5               	rrf	37,f
   692     011C  0CA4               	rrf	36,f
   693                           
   694                           ;SET STATUS.C OFF
   695     011D  1003               	bcf	3,0
   696                           
   697                           ;ROTATE PRX_TEMP RIGHT
   698     011E  0CA7               	rrf	39,f
   699     011F  0CA6               	rrf	38,f
   700     0120  0CA5               	rrf	37,f
   701     0121  0CA4               	rrf	36,f
   702     0122                     ENDIF18:	
   703                           ;END IF
   704                           
   705                           
   706                           ;IF PRX_TEMP_H > 0 THEN
   707     0122  0825               	movf	37,w
   708     0123  3C00               	sublw	0
   709     0124  1803               	btfsc	3,0
   710     0125  2932               	goto	ENDIF19
   711                           
   712                           ;TX_PR = 16
   713     0126  3010               	movlw	16
   714     0127  00D6               	movwf	86
   715                           
   716                           ;DIVIDE BY 4
   717                           ;SET STATUS.C OFF
   718     0128  1003               	bcf	3,0
   719                           
   720                           ;ROTATE PRX_TEMP RIGHT
   721     0129  0CA7               	rrf	39,f
   722     012A  0CA6               	rrf	38,f
   723     012B  0CA5               	rrf	37,f
   724     012C  0CA4               	rrf	36,f
   725                           
   726                           ;SET STATUS.C OFF
   727     012D  1003               	bcf	3,0
   728                           
   729                           ;ROTATE PRX_TEMP RIGHT
   730     012E  0CA7               	rrf	39,f
   731     012F  0CA6               	rrf	38,f
   732     0130  0CA5               	rrf	37,f
   733     0131  0CA4               	rrf	36,f
   734     0132                     ENDIF19:	
   735                           ;END IF
   736                           
   737                           
   738                           ;IF PRX_TEMP_H > 0 THEN
   739     0132  0825               	movf	37,w
   740     0133  3C00               	sublw	0
   741     0134  1803               	btfsc	3,0
   742     0135  2942               	goto	ENDIF20
   743                           
   744                           ;TX_PR = 64
   745     0136  3040               	movlw	64
   746     0137  00D6               	movwf	86
   747                           
   748                           ;DIVIDE BY 4
   749                           ;SET STATUS.C OFF
   750     0138  1003               	bcf	3,0
   751                           
   752                           ;ROTATE PRX_TEMP RIGHT
   753     0139  0CA7               	rrf	39,f
   754     013A  0CA6               	rrf	38,f
   755     013B  0CA5               	rrf	37,f
   756     013C  0CA4               	rrf	36,f
   757                           
   758                           ;SET STATUS.C OFF
   759     013D  1003               	bcf	3,0
   760                           
   761                           ;ROTATE PRX_TEMP RIGHT
   762     013E  0CA7               	rrf	39,f
   763     013F  0CA6               	rrf	38,f
   764     0140  0CA5               	rrf	37,f
   765     0141  0CA4               	rrf	36,f
   766     0142                     ENDIF20:	
   767                           ;END IF
   768                           
   769     0142                     SYSSELECT3CASE1:	
   770                           ;THIS SECTION SETUPS THE TIMER
   771                           ;SET UP PRX DEPENDENT ON TIMER SELECTED
   772                           ;SELECT CASE _PWMTIMERSELECTED
   773                           ;CASE 2 'SELECT TIMER2 AS THE DRIVER FOR PWM
   774                           
   775     0142  3002               	movlw	2
   776     0143  0257               	subwf	87,w
   777     0144  1D03               	btfss	3,2
   778     0145  2962               	goto	SYSSELECTEND3
   779                           
   780                           ;SET T2PR
   781                           ;PR2 = PRX_TEMP 'THIS IS REQUIRED IN THE NEXT SCTION OF CODE, AND AS WILL NOT KNOW WHICH TIMER HAS BEEN SELECTED
   782     0146  0824               	movf	36,w
   783     0147  009B               	movwf	27
   784                           
   785                           ;SET CLOCK SOURCE, IF REQUIRED
   786                           ;SET TO FOSC/4 FOR BACKWARD COMPATIBILITY2D WHERE CS<3:0> = 0000 = FOSC/4
   787                           ;T2CLKCON.((T2CLKCON) and 07Fh), 0 = 0
   788     0148  101E               	bcf	30,0
   789                           
   790                           ;T2CLKCON.((T2CLKCON) and 07Fh), 1 = 0
   791     0149  109E               	bcf	30,1
   792                           
   793                           ;T2CLKCON.((T2CLKCON) and 07Fh), 2 = 0
   794     014A  111E               	bcf	30,2
   795                           
   796                           ;T2CLKCON.((T2CLKCON) and 07Fh), 3 = 0
   797     014B  119E               	bcf	30,3
   798                           
   799                           ;((T2HLT) and 07Fh), 7 NOT SYNCHRONIZED; T2MODE SOFTWARE CONTROL; ((T2HLT) and 07Fh), 6 RISING EDGE; ((T2HLT) and 07Fh), 5 NOT SYNCHRONIZED
   800                           ;T2HLT = 0X00
   801                           ;#IFDEF VAR(T2HLT): T2HLT = 0X00: #ENDIF
   802     014C  019D               	clrf	29
   803                           
   804                           ;T2RSEL T2CKIPPS PIN
   805                           ;T2RST = 0X00
   806                           ;#IFDEF VAR(T2RST): T2RST = 0X00: #ENDIF
   807     014D  019F               	clrf	31
   808                           
   809                           ;TMR2. HOLDING REGISTER FOR THE 8-BIT TMR2 REGISTER
   810                           ;T2TMR = 0X00
   811                           ;#IFDEF VAR(T2TMR): T2TMR = 0X00: #ENDIF
   812     014E  019A               	clrf	26
   813                           
   814                           ;SETUP TIMERX BY CLEARING THE PRESCALER BITS - IT IS SET NEXT....
   815                           ;SET ((T2CON) and 07Fh), 4 OFF
   816     014F  121C               	bcf	28,4
   817                           
   818                           ;SET ((T2CON) and 07Fh), 5 OFF
   819     0150  129C               	bcf	28,5
   820                           
   821                           ;SET ((T2CON) and 07Fh), 6 OFF
   822     0151  131C               	bcf	28,6
   823                           
   824                           ;SET PRESCALER BITS T2CON 3
   825                           ;IF TX_PR = 4 THEN SET ((T2CON) and 07Fh), 5 ON
   826     0152  3004               	movlw	4
   827     0153  0256               	subwf	86,w
   828     0154  1903               	btfsc	3,2
   829                           
   830                           ;IF TX_PR = 4 THEN SET ((T2CON) and 07Fh), 5 ON
   831     0155  169C               	bsf	28,5
   832                           
   833                           ;IF TX_PR = 4 THEN SET ((T2CON) and 07Fh), 5 ON
   834                           ;IF TX_PR = 16 THEN SET ((T2CON) and 07Fh), 6 ON
   835     0156  3010               	movlw	16
   836     0157  0256               	subwf	86,w
   837     0158  1903               	btfsc	3,2
   838                           
   839                           ;IF TX_PR = 16 THEN SET ((T2CON) and 07Fh), 6 ON
   840     0159  171C               	bsf	28,6
   841                           
   842                           ;IF TX_PR = 16 THEN SET ((T2CON) and 07Fh), 6 ON
   843                           ;IF TX_PR = 64 THEN SET ((T2CON) and 07Fh), 6 ON: SET ((T2CON) and 07Fh), 5 ON
   844     015A  3040               	movlw	64
   845     015B  0256               	subwf	86,w
   846     015C  1D03               	btfss	3,2
   847     015D  2960               	goto	ENDIF23
   848                           
   849                           ;IF TX_PR = 64 THEN SET ((T2CON) and 07Fh), 6 ON: SET ((T2CON) and 07Fh), 5 ON
   850     015E  171C               	bsf	28,6
   851                           
   852                           ;IF TX_PR = 64 THEN SET ((T2CON) and 07Fh), 6 ON: SET ((T2CON) and 07Fh), 5 ON
   853     015F  169C               	bsf	28,5
   854     0160                     ENDIF23:	
   855                           ;IF TX_PR = 64 THEN SET ((T2CON) and 07Fh), 6 ON: SET ((T2CON) and 07Fh), 5 ON
   856                           
   857                           
   858                           ;CLEARING IF FLAG.
   859                           ;SET ((PIR1) and 07Fh), 1 OFF
   860     0160  1090               	bcf	16,1
   861                           
   862                           ;START TIMER2
   863                           ;SET ((T2CON) and 07Fh), 7 ON
   864     0161  179C               	bsf	28,7
   865     0162                     SYSSELECTEND3:	
   866                           ;END SELECT
   867                           
   868                           
   869                           ;PWMFREQOLD = PWMFREQ
   870     0162  0832               	movf	50,w
   871     0163  00B4               	movwf	52
   872                           
   873                           ;PWMTIMEROLD = _PWMTIMERSELECTED
   874     0164  0857               	movf	87,w
   875     0165  00B9               	movwf	57
   876                           
   877                           ;CACHE THE PRX_TEMP TO SUPPORT HPWM_FAST.
   878                           ;PRX_TEMP_CACHE = PRX_TEMP
   879     0166  0824               	movf	36,w
   880     0167  00A8               	movwf	40
   881     0168  0825               	movf	37,w
   882     0169  00A9               	movwf	41
   883     016A  0826               	movf	38,w
   884     016B  00AA               	movwf	42
   885     016C  0827               	movf	39,w
   886     016D  00AB               	movwf	43
   887                           
   888                           ;ELSE
   889     016E  2977               	goto	ENDIF16
   890     016F                     ELSE16_1:
   891                           
   892                           ;AS WIERD AS THIS LOOKS.... RESTORE THE CACHE TO PRX_TEMP AS WE NEED IT WHEN ((CWG1CON1) and 07Fh), 5 HPWM_FAST ((AT1CON0) and 07Fh), 0
   893                           ;PRX_TEMP IS USED ((CWG1CON1) and 07Fh), 5 CHANNEL SETTING SECTION, SO, IF WE DID NOT RESTORE WE WOULD NOT HAVE A CONSISTENT SET OF INFORMATION.
   894                           ;PRX_TEMP = PRX_TEMP_CACHE
   895     016F  0828               	movf	40,w
   896     0170  00A4               	movwf	36
   897     0171  0829               	movf	41,w
   898     0172  00A5               	movwf	37
   899     0173  082A               	movf	42,w
   900     0174  00A6               	movwf	38
   901     0175  082B               	movf	43,w
   902     0176  00A7               	movwf	39
   903     0177                     ENDIF16:	
   904                           ;END IF
   905                           
   906     0177                     TENBITPMWSECTION:
   907                           
   908                           ;THIS SECTION SETUPS UP THE PWM DUTY
   909                           ;THE FOLLOWING CODE CAN BE OPTIMISED VIA 'DEFINES'
   910                           ;DIM PRX_TEMP_CACHE AS LONG
   911                           ;CACHE THE PRX_TEMP VALUE ONLY WHEN NOT HPWM_FAST - THIS CAN BE THEN USED BY HPWMUPDATE
   912                           ;IF PWMCHANNEL = 3 THEN 'IN SECTION USE_HPWM3
   913     0177  3003               	movlw	3
   914     0178  022C               	subwf	44,w
   915     0179  1D03               	btfss	3,2
   916     017A  299A               	goto	ENDIF17
   917                           
   918                           ;CALCULATES DUTY, ASSISGNS DUTY TO BITS 15-8 AND 7-6 OF PMWXDH(H&L) AND LINKS THIS PWM TO THE CORRECT TIMER
   919                           ;CALCULATEDUTY 'SETS PRX_TEMP  TO THE DUTY VALUE FOR BITS 15-8 AND 7-6
   920     017B  2077               	call	CALCULATEDUTY
   921                           
   922                           ;PWM3DCH = PRX_TEMP_H
   923     017C  0825               	movf	37,w
   924     017D  002C               	banksel	1560
   925     017E  0098               	movwf	1560
   926                           
   927                           ;PWM3DCL = PRX_TEMP
   928     017F  0020               	banksel	36
   929     0180  0824               	movf	36,w
   930     0181  002C               	banksel	1559
   931     0182  0097               	movwf	1559
   932                           
   933                           ;SELECT TIMER BY UPDATING CCPTMRS REGISTER
   934                           ;TIMERSELECTIONBITS = (_PWMTIMERSELECTED / 2 )-1 'THIS IS A CHIPPWMTIMERVARIANT CHIP.  MOVE THE TIMER BITS TO THE LEFT BY ONE BIT TO CATER FOR DIFFE
      +                          RENT ADDRESSING
   935     0183  1003               	bcf	3,0
   936     0184  0020               	banksel	87
   937     0185  0C57               	rrf	87,w
   938     0186  00D3               	movwf	83
   939     0187  0353               	decf	83,w
   940     0188  00D5               	movwf	85
   941                           
   942                           ;SETWITH ( ((CCPTMRS) and 07Fh), 4, TIMERSELECTIONBITS.0 )
   943                           ;MACRO SOURCE: STDBASIC.H (370)
   944                           ;IF SOURCE THEN
   945     0189  1C55               	btfss	85,0
   946     018A  298E               	goto	ELSE24_1
   947                           
   948                           ;TARGETBIT = 1
   949     018B  0025               	banksel	670
   950     018C  161E               	bsf	670,4
   951                           
   952                           ;ELSE
   953     018D  2990               	goto	ENDIF24
   954     018E                     ELSE24_1:
   955                           
   956                           ;TARGETBIT = 0
   957     018E  0025               	banksel	670
   958     018F  121E               	bcf	670,4
   959     0190                     ENDIF24:	
   960                           ;END IF
   961                           
   962                           
   963                           ;SETWITH ( ((CCPTMRS) and 07Fh), 5, TIMERSELECTIONBITS.1 )
   964                           ;MACRO SOURCE: STDBASIC.H (370)
   965                           ;IF SOURCE THEN
   966     0190  0020               	banksel	85
   967     0191  1CD5               	btfss	85,1
   968     0192  2996               	goto	ELSE25_1
   969                           
   970                           ;TARGETBIT = 1
   971     0193  0025               	banksel	670
   972     0194  169E               	bsf	670,5
   973                           
   974                           ;ELSE
   975     0195  2998               	goto	ENDIF25
   976     0196                     ELSE25_1:
   977                           
   978                           ;TARGETBIT = 0
   979     0196  0025               	banksel	670
   980     0197  129E               	bcf	670,5
   981     0198                     ENDIF25:	
   982                           ;END IF
   983                           
   984                           
   985                           ;START PMW3
   986                           ;SET ((PWM3CON) and 07Fh), 7 ON
   987     0198  002C               	banksel	1561
   988     0199  1799               	bsf	1561,7
   989     019A                     ENDIF17:	
   990                           ;END IF
   991                           
   992     019A  0020               	banksel	3
   993     019B  0008               	return
   994     019C                     HPWMUPDATE:	
   995                           ;********************************************************************************
   996                           ;SOURCE: PWM.H (4076)
   997                           
   998                           
   999                           ;THE FOLLOWING CODE CAN BE OPTIMISED VIA 'DEFINES'
  1000                           ;DIM PRX_TEMP AS LONG
  1001                           ;DIM PWMDUTY AS WORD
  1002                           ;DIM PWMRESOLUTION AS WORD
  1003                           ;RESTORE THE CACHE VALUE
  1004                           ;PRX_TEMP = PRX_TEMP_CACHE
  1005     019C  0828               	movf	40,w
  1006     019D  00A4               	movwf	36
  1007     019E  01A5               	clrf	37
  1008     019F  01A6               	clrf	38
  1009     01A0  01A7               	clrf	39
  1010     01A1                     PWMUPDATE_HARDWAREMODEPWM1:
  1011     01A1                     PWMUPDATE_HARDWAREMODEPWM3:
  1012                           
  1013                           ;IF PWMCHANNEL = 3 THEN 'IN SECTION USE_HPWM3
  1014     01A1  3003               	movlw	3
  1015     01A2  022C               	subwf	44,w
  1016     01A3  1D03               	btfss	3,2
  1017     01A4  29AE               	goto	ENDIF26
  1018                           
  1019                           ;CALCULATES DUTY, ASSISGNS DUTY TO BITS 15-8 AND 7-6 OF PMWXDH(H&L) AND LINKS THIS PWM TO THE CORRECT TIMER
  1020                           ;CALCULATEDUTY 'SETS PRX_TEMP  TO THE DUTY VALUE FOR BITS 15-8 AND 7-6
  1021     01A5  2077               	call	CALCULATEDUTY
  1022                           
  1023                           ;ASSUMES PRX_TEMP AND PWMDUTY ARE ((AT1CON1) and 07Fh), 0
  1024                           ;PWM3DCH = PRX_TEMP_H
  1025     01A6  0825               	movf	37,w
  1026     01A7  002C               	banksel	1560
  1027     01A8  0098               	movwf	1560
  1028                           
  1029                           ;PWM3DCL = PRX_TEMP
  1030     01A9  0020               	banksel	36
  1031     01AA  0824               	movf	36,w
  1032     01AB  002C               	banksel	1559
  1033     01AC  0097               	movwf	1559
  1034                           
  1035                           ;SET ((PWM3CON) and 07Fh), 7 ON
  1036     01AD  1799               	bsf	1561,7
  1037     01AE                     ENDIF26:	
  1038                           ;END IF
  1039                           
  1040     01AE                     PWMUPDATE_CCPMODE:
  1041     01AE                     PWMUPDATE_HARDWAREMODEPWMCCP1:
  1042                           
  1043                           ;IFDEF BIT(CCPR1L) TESTING THIS BIT IS TO IDENTIFY THE USE OF CCPR1L FOR PWM
  1044                           ;IF PWMCHANNEL = 1 THEN 'IN SECTION USE_HPWMCCP1
  1045     01AE  0020               	banksel	44
  1046     01AF  032C               	decf	44,w
  1047     01B0  1D03               	btfss	3,2
  1048     01B1  29BA               	goto	ENDIF27
  1049                           
  1050                           ;ASSUME MORE THAT ONE CCP
  1051                           ;IFDEF BIT(((CCP1CON) and 07Fh), 4) TESTING THIS BIT IS TO IDENTIFY THE USE OF CCPR1H AND CCPR1L FOR PWM
  1052                           ;CALCULATEDUTY 'SETS PRX_TEMP  TO THE DUTY VALUE FOR BITS 15-8 AND 7-6
  1053     01B2  2077               	call	CALCULATEDUTY
  1054                           
  1055                           ;CCPR1H = PRX_TEMP_H
  1056     01B3  0825               	movf	37,w
  1057     01B4  0025               	banksel	658
  1058     01B5  0092               	movwf	658
  1059                           
  1060                           ;CCPR1L = PRX_TEMP
  1061     01B6  0020               	banksel	36
  1062     01B7  0824               	movf	36,w
  1063     01B8  0025               	banksel	657
  1064     01B9  0091               	movwf	657
  1065     01BA                     ENDIF27:	
  1066                           ;END IF
  1067                           
  1068     01BA                     PWMUPDATE_HARDWAREMODEPWMCCP3:
  1069     01BA  0020               	banksel	3
  1070     01BB  0008               	return
  1071     01BC                     INITPPS:	
  1072                           ;********************************************************************************
  1073                           ;SOURCE: GCBASIC_FIRMWARE_FOR_MICROCHIP_CURIOSITY_BOARD_16F1619.GCB (49)
  1074                           
  1075                           
  1076                           ;MODULE: PWM3
  1077                           ;RC5PPS = 0X000E 'PWM3OUT > RC5
  1078     01BC  300E               	movlw	14
  1079     01BD  003D               	banksel	3749
  1080     01BE  00A5               	movwf	3749
  1081     01BF  0020               	banksel	3
  1082     01C0  0008               	return
  1083     01C1                     INITPWM:	
  1084                           ;********************************************************************************
  1085                           ;SOURCE: PWM.H (253)
  1086                           
  1087                           
  1088                           ;_PWMTIMERSELECTED = 2
  1089     01C1  3002               	movlw	2
  1090     01C2  00D7               	movwf	87
  1091     01C3                     LEGACY_STARTOFFIXEDCCPPWMMODECODE:	
  1092                           ;DIM PRX_TEMP AS LONG
  1093                           
  1094                           
  1095                           ;DIM CCPCONCACHE AS BYTE
  1096                           ;CCPCONCACHE = 0
  1097     01C3  01A3               	clrf	35
  1098                           
  1099                           ;SET PWM PERIOD
  1100                           ;PR2 = PR2_CPP_PWM_TEMP
  1101     01C4  30D2               	movlw	210
  1102     01C5  009B               	movwf	27
  1103                           
  1104                           ;SET T2CON.((T2CON) and 07Fh), 4 OFF
  1105     01C6  121C               	bcf	28,4
  1106                           
  1107                           ;SET T2CON.((T2CON) and 07Fh), 5 OFF
  1108     01C7  129C               	bcf	28,5
  1109                           
  1110                           ;SET T2CON.((T2CON) and 07Fh), 6 OFF
  1111     01C8  131C               	bcf	28,6
  1112                           
  1113                           ;SET DUTY CYCLE
  1114                           ;CCPCONCACHE.((CCP1CON) and 07Fh), 4 = 1
  1115     01C9  1623               	bsf	35,4
  1116                           
  1117                           ;CCPR1H = DUTYCYCLEH
  1118     01CA  3069               	movlw	105
  1119     01CB  0025               	banksel	658
  1120     01CC  0092               	movwf	658
  1121                           
  1122                           ;CCPR1L = DUTYCYCLEL*64
  1123     01CD  3080               	movlw	128
  1124     01CE  0091               	movwf	657
  1125                           
  1126                           ;[CANSKIP]T2CLKCON = 1
  1127     01CF  3001               	movlw	1
  1128     01D0  0020               	banksel	30
  1129     01D1  009E               	movwf	30
  1130                           
  1131                           ;[CANSKIP]CCPCONCACHE.EN = 1
  1132     01D2  17A3               	bsf	35,7
  1133                           
  1134                           ;LEGACY CODE, REPLACED BY CANSKIP
  1135                           ;FINISH PREPARING CCP*CON
  1136                           ;SET CCPCONCACHE.CCP1M3 ON
  1137                           ;SET CCPCONCACHE.CCP1M2 ON
  1138                           ;SET CCPCONCACHE.CCP1M1 OFF
  1139                           ;SET CCPCONCACHE.CCP1M0 OFF'
  1140                           ;CCPCONCACHE.CCP1M3, CCPCONCACHE.CCP1M2, CCPCONCACHE.CCP1M1, CCPCONCACHE.CCP1M0 = B'1100'
  1141     01D3  15A3               	bsf	35,3
  1142     01D4  1523               	bsf	35,2
  1143     01D5  10A3               	bcf	35,1
  1144     01D6  1023               	bcf	35,0
  1145                           
  1146                           ;ENABLE TIMER 2
  1147                           ;SET T2CON.((T2CON) and 07Fh), 7 ON
  1148     01D7  179C               	bsf	28,7
  1149                           
  1150                           ;PWMFREQOLD = 0
  1151     01D8  01B4               	clrf	52
  1152                           
  1153                           ;PWMTIMEROLD = 0
  1154     01D9  01B9               	clrf	57
  1155     01DA                     STARTOFFIXEDPWMMODECODE:
  1156     01DA                     SETPWMDUTYCODE:
  1157     01DA  0008               	return
  1158     01DB                     INITSYS:	
  1159                           ;********************************************************************************
  1160                           ;SOURCE: SYSTEM.H (162)
  1161                           
  1162                           
  1163                           ;ASM SHOWDEBUG THIS CODE BLOCK SETS THE INTERNAL OSCILLATOR TO CHIPMHZ
  1164                           ;ASM SHOWDEBUG OSCCON TYPE IS 105 'BIT(SPLLEN) OR BIT(IRCF3) AND NOBIT(INTSRC) AND IFDEF BIT(IRCF3)
  1165                           ;EQUATES TO OSCCON = OSCCON AND B'10000111' & OSCCON = OSCCON OR B'11110000'
  1166                           ;= 32MHZ
  1167                           ;SET ((OSCCON) and 07Fh), 6 ON
  1168     01DB  0021               	banksel	153
  1169     01DC  1719               	bsf	153,6
  1170                           
  1171                           ;SET ((OSCCON) and 07Fh), 5 ON
  1172     01DD  1699               	bsf	153,5
  1173                           
  1174                           ;SET ((OSCCON) and 07Fh), 4 ON
  1175     01DE  1619               	bsf	153,4
  1176                           
  1177                           ;SET ((OSCCON) and 07Fh), 3 OFF
  1178     01DF  1199               	bcf	153,3
  1179                           
  1180                           ;SET ((OSCCON) and 07Fh), 7 ON
  1181     01E0  1799               	bsf	153,7
  1182                           
  1183                           ;ASM SHOWDEBUG _COMPLETE_THE_CHIP_SETUP_OF_BSR,ADCS,ANSEL_AND_OTHER_KEY_SETUP_REGISTERS_OR_REGISTER_BITS
  1184                           ;ENSURE ALL PORTS ARE SET FOR DIGITAL I/O AND, TURN OFF A/D
  1185                           ;SET ((ADCON1) and 07Fh), 7 OFF
  1186     01E1  139E               	bcf	158,7
  1187                           
  1188                           ;SWITCH OFF A/D VAR(ADCON0)
  1189                           ;SET ADCON0.((ADCON0) and 07Fh), 0 OFF
  1190     01E2  101D               	bcf	157,0
  1191                           
  1192                           ;ANSELA = 0
  1193     01E3  0023               	banksel	396
  1194     01E4  018C               	clrf	396
  1195                           
  1196                           ;ANSELB = 0
  1197     01E5  018D               	clrf	397
  1198                           
  1199                           ;ANSELC = 0
  1200     01E6  018E               	clrf	398
  1201                           
  1202                           ;SET COMPARATOR REGISTER BITS FOR MANY MCUS WITH REGISTER CM2CON0
  1203                           ;((CM2CON0) and 07Fh), 7 = 0
  1204     01E7  0022               	banksel	275
  1205     01E8  1393               	bcf	275,7
  1206                           
  1207                           ;((CM1CON0) and 07Fh), 7 = 0
  1208     01E9  1391               	bcf	273,7
  1209                           
  1210                           ;
  1211                           ;'TURN OFF ALL PORTS
  1212                           ;PORTA = 0
  1213     01EA  0020               	banksel	12
  1214     01EB  018C               	clrf	12
  1215                           
  1216                           ;PORTB = 0
  1217     01EC  018D               	clrf	13
  1218                           
  1219                           ;PORTC = 0
  1220     01ED  018E               	clrf	14
  1221     01EE  0008               	return
  1222     01EF                     FN_READAD6:	
  1223                           ;********************************************************************************
  1224                           ;OVERLOADED SIGNATURE: BYTE:, SOURCE: A-D.H (2101)
  1225                           
  1226                           
  1227                           ;((ADCON1) and 07Fh), 7 SHOULD CONFIGURED TO ENSURE LEFT JUSTIFIED
  1228                           ;SET ((ADCON1) and 07Fh), 7 OFF
  1229     01EF  0021               	banksel	158
  1230     01F0  139E               	bcf	158,7
  1231     01F1                     SYSSELECT1CASE1:	
  1232                           ;***************************************
  1233                           ;PERFORM CONVERSION
  1234                           ;LLREADAD 1
  1235                           ;MACRO SOURCE: A-D.H (577)
  1236                           ;HANDLE DEVICES WITH NO ANSEL0 AND NO ANSEL
  1237                           ;CODE FOR DEVICES WITH ANSELA/ANSELB/ANSELE REGISTERS
  1238                           ;SELECT CASE ADREADPORT ' #IFDEF VAR(ANSELA). ANSELA EXISTS DEBUGADC_H
  1239                           ;CHIPPINS = 20
  1240                           ;#IFNDEF BIT(CHS5)
  1241                           ;CASE 2: SET ANSELA.2 ON
  1242                           
  1243     01F1  3002               	movlw	2
  1244     01F2  0020               	banksel	34
  1245     01F3  0222               	subwf	34,w
  1246     01F4  1D03               	btfss	3,2
  1247     01F5  29F9               	goto	SYSSELECT1CASE2
  1248                           
  1249                           ;CASE 2: SET ANSELA.2 ON
  1250     01F6  0023               	banksel	396
  1251     01F7  150C               	bsf	396,2
  1252                           
  1253                           ;CASE 4: SET ANSELC.0 ON
  1254     01F8  29FF               	goto	SYSSELECTEND1
  1255     01F9                     SYSSELECT1CASE2:
  1256     01F9  3004               	movlw	4
  1257     01FA  0222               	subwf	34,w
  1258     01FB  1D03               	btfss	3,2
  1259     01FC  29FF               	goto	SYSSELECTEND1
  1260                           
  1261                           ;CASE 4: SET ANSELC.0 ON
  1262     01FD  0023               	banksel	398
  1263     01FE  140E               	bsf	398,0
  1264     01FF                     SYSSELECTEND1:	
  1265                           ;END SELECT 'END SELECT #1
  1266                           
  1267                           
  1268                           ;SET ((ADCON1) and 07Fh), 6 OFF
  1269     01FF  0021               	banksel	158
  1270     0200  131E               	bcf	158,6
  1271                           
  1272                           ;SET ((ADCON1) and 07Fh), 5 OFF
  1273     0201  129E               	bcf	158,5
  1274                           
  1275                           ;SET ((ADCON1) and 07Fh), 4 ON
  1276     0202  161E               	bsf	158,4
  1277                           
  1278                           ;CHOOSE PORT
  1279                           ;SET ((ADCON0) and 07Fh), 2 OFF
  1280     0203  111D               	bcf	157,2
  1281                           
  1282                           ;SET ((ADCON0) and 07Fh), 3 OFF
  1283     0204  119D               	bcf	157,3
  1284                           
  1285                           ;SET ((ADCON0) and 07Fh), 4 OFF
  1286     0205  121D               	bcf	157,4
  1287                           
  1288                           ;SET ((ADCON0) and 07Fh), 5 OFF
  1289     0206  129D               	bcf	157,5
  1290                           
  1291                           ;SET ((ADCON0) and 07Fh), 6 OFF
  1292     0207  131D               	bcf	157,6
  1293                           
  1294                           ;IF ADREADPORT.0 ON THEN SET ((ADCON0) and 07Fh), 2 ON
  1295     0208  0020               	banksel	34
  1296     0209  1C22               	btfss	34,0
  1297     020A  2A0D               	goto	ENDIF6
  1298                           
  1299                           ;IF ADREADPORT.0 ON THEN SET ((ADCON0) and 07Fh), 2 ON
  1300     020B  0021               	banksel	157
  1301     020C  151D               	bsf	157,2
  1302     020D                     ENDIF6:	
  1303                           ;IF ADREADPORT.0 ON THEN SET ((ADCON0) and 07Fh), 2 ON
  1304                           
  1305                           
  1306                           ;IF ADREADPORT.1 ON THEN SET ((ADCON0) and 07Fh), 3 ON
  1307     020D  0020               	banksel	34
  1308     020E  1CA2               	btfss	34,1
  1309     020F  2A12               	goto	ENDIF7
  1310                           
  1311                           ;IF ADREADPORT.1 ON THEN SET ((ADCON0) and 07Fh), 3 ON
  1312     0210  0021               	banksel	157
  1313     0211  159D               	bsf	157,3
  1314     0212                     ENDIF7:	
  1315                           ;IF ADREADPORT.1 ON THEN SET ((ADCON0) and 07Fh), 3 ON
  1316                           
  1317                           
  1318                           ;IF ADREADPORT.2 ON THEN SET ((ADCON0) and 07Fh), 4 ON
  1319     0212  0020               	banksel	34
  1320     0213  1D22               	btfss	34,2
  1321     0214  2A17               	goto	ENDIF8
  1322                           
  1323                           ;IF ADREADPORT.2 ON THEN SET ((ADCON0) and 07Fh), 4 ON
  1324     0215  0021               	banksel	157
  1325     0216  161D               	bsf	157,4
  1326     0217                     ENDIF8:	
  1327                           ;IF ADREADPORT.2 ON THEN SET ((ADCON0) and 07Fh), 4 ON
  1328                           
  1329                           
  1330                           ;IF ADREADPORT.3 ON THEN SET ((ADCON0) and 07Fh), 5 ON
  1331     0217  0020               	banksel	34
  1332     0218  1DA2               	btfss	34,3
  1333     0219  2A1C               	goto	ENDIF9
  1334                           
  1335                           ;IF ADREADPORT.3 ON THEN SET ((ADCON0) and 07Fh), 5 ON
  1336     021A  0021               	banksel	157
  1337     021B  169D               	bsf	157,5
  1338     021C                     ENDIF9:	
  1339                           ;IF ADREADPORT.3 ON THEN SET ((ADCON0) and 07Fh), 5 ON
  1340                           
  1341                           
  1342                           ;IF ADREADPORT.4 ON THEN SET ((ADCON0) and 07Fh), 6 ON
  1343     021C  0020               	banksel	34
  1344     021D  1E22               	btfss	34,4
  1345     021E  2A21               	goto	ENDIF10
  1346                           
  1347                           ;IF ADREADPORT.4 ON THEN SET ((ADCON0) and 07Fh), 6 ON
  1348     021F  0021               	banksel	157
  1349     0220  171D               	bsf	157,6
  1350     0221                     ENDIF10:	
  1351                           ;IF ADREADPORT.4 ON THEN SET ((ADCON0) and 07Fh), 6 ON
  1352                           
  1353                           
  1354                           ;ENABLE AD OPERATIONS
  1355                           ;SET ((ADCON0) and 07Fh), 0 ON
  1356     0221  0021               	banksel	157
  1357     0222  141D               	bsf	157,0
  1358                           
  1359                           ;ACQUISITION DELAY
  1360                           ;WAIT AD_DELAY
  1361     0223  3002               	movlw	2
  1362     0224  00F5               	movwf	117
  1363     0225  0020               	banksel	3
  1364     0226  20C4               	call	DELAY_10US
  1365                           
  1366                           ;READ A/D 1
  1367                           ;SET GO_NOT_DONE ON
  1368     0227  0021               	banksel	157
  1369     0228  149D               	bsf	157,1
  1370                           
  1371                           ;NOP
  1372     0229  0000               	nop
  1373     022A                     SYSWAITLOOP2:	
  1374                           ;WAIT WHILE GO_NOT_DONE ON
  1375                           
  1376     022A  189D               	btfsc	157,1
  1377     022B  2A2A               	goto	SYSWAITLOOP2
  1378                           
  1379                           ;SWITCH OFF A/D
  1380                           ;SET ADCON0.((ADCON0) and 07Fh), 0 OFF
  1381     022C  101D               	bcf	157,0
  1382                           
  1383                           ;ANSELA = 0
  1384     022D  0023               	banksel	396
  1385     022E  018C               	clrf	396
  1386                           
  1387                           ;ANSELB = 0
  1388     022F  018D               	clrf	397
  1389                           
  1390                           ;ANSELC = 0
  1391     0230  018E               	clrf	398
  1392                           
  1393                           ;READAD = ADRESH
  1394     0231  0021               	banksel	156
  1395     0232  081C               	movf	156,w
  1396     0233  0020               	banksel	58
  1397     0234  00BA               	movwf	58
  1398                           
  1399                           ;SET ((ADCON1) and 07Fh), 7 OFF
  1400     0235  0021               	banksel	158
  1401     0236  139E               	bcf	158,7
  1402     0237  0020               	banksel	3
  1403     0238  0008               	return
  1404     0239                     FN_READAD108:	
  1405                           ;********************************************************************************
  1406                           ;OVERLOADED SIGNATURE: BYTE:, SOURCE: A-D.H (2388)
  1407                           
  1408                           
  1409                           ;ALWAYS RIGHT JUSTIFIED
  1410                           ;SET ((ADCON1) and 07Fh), 7 ON
  1411     0239  0021               	banksel	158
  1412     023A  179E               	bsf	158,7
  1413     023B                     SYSSELECT2CASE1:	
  1414                           ;DO CONVERSION
  1415                           ;LLREADAD 0
  1416                           ;MACRO SOURCE: A-D.H (577)
  1417                           ;HANDLE DEVICES WITH NO ANSEL0 AND NO ANSEL
  1418                           ;CODE FOR DEVICES WITH ANSELA/ANSELB/ANSELE REGISTERS
  1419                           ;SELECT CASE ADREADPORT ' #IFDEF VAR(ANSELA). ANSELA EXISTS DEBUGADC_H
  1420                           ;CHIPPINS = 20
  1421                           ;#IFNDEF BIT(CHS5)
  1422                           ;CASE 2: SET ANSELA.2 ON
  1423                           
  1424     023B  3002               	movlw	2
  1425     023C  0020               	banksel	34
  1426     023D  0222               	subwf	34,w
  1427     023E  1D03               	btfss	3,2
  1428     023F  2A43               	goto	SYSSELECT2CASE2
  1429                           
  1430                           ;CASE 2: SET ANSELA.2 ON
  1431     0240  0023               	banksel	396
  1432     0241  150C               	bsf	396,2
  1433                           
  1434                           ;CASE 4: SET ANSELC.0 ON
  1435     0242  2A49               	goto	SYSSELECTEND2
  1436     0243                     SYSSELECT2CASE2:
  1437     0243  3004               	movlw	4
  1438     0244  0222               	subwf	34,w
  1439     0245  1D03               	btfss	3,2
  1440     0246  2A49               	goto	SYSSELECTEND2
  1441                           
  1442                           ;CASE 4: SET ANSELC.0 ON
  1443     0247  0023               	banksel	398
  1444     0248  140E               	bsf	398,0
  1445     0249                     SYSSELECTEND2:	
  1446                           ;END SELECT 'END SELECT #1
  1447                           
  1448                           
  1449                           ;SET ((ADCON1) and 07Fh), 6 OFF
  1450     0249  0021               	banksel	158
  1451     024A  131E               	bcf	158,6
  1452                           
  1453                           ;SET ((ADCON1) and 07Fh), 5 OFF
  1454     024B  129E               	bcf	158,5
  1455                           
  1456                           ;SET ((ADCON1) and 07Fh), 4 ON
  1457     024C  161E               	bsf	158,4
  1458                           
  1459                           ;CHOOSE PORT
  1460                           ;SET ((ADCON0) and 07Fh), 2 OFF
  1461     024D  111D               	bcf	157,2
  1462                           
  1463                           ;SET ((ADCON0) and 07Fh), 3 OFF
  1464     024E  119D               	bcf	157,3
  1465                           
  1466                           ;SET ((ADCON0) and 07Fh), 4 OFF
  1467     024F  121D               	bcf	157,4
  1468                           
  1469                           ;SET ((ADCON0) and 07Fh), 5 OFF
  1470     0250  129D               	bcf	157,5
  1471                           
  1472                           ;SET ((ADCON0) and 07Fh), 6 OFF
  1473     0251  131D               	bcf	157,6
  1474                           
  1475                           ;IF ADREADPORT.0 ON THEN SET ((ADCON0) and 07Fh), 2 ON
  1476     0252  0020               	banksel	34
  1477     0253  1C22               	btfss	34,0
  1478     0254  2A57               	goto	ENDIF11
  1479                           
  1480                           ;IF ADREADPORT.0 ON THEN SET ((ADCON0) and 07Fh), 2 ON
  1481     0255  0021               	banksel	157
  1482     0256  151D               	bsf	157,2
  1483     0257                     ENDIF11:	
  1484                           ;IF ADREADPORT.0 ON THEN SET ((ADCON0) and 07Fh), 2 ON
  1485                           
  1486                           
  1487                           ;IF ADREADPORT.1 ON THEN SET ((ADCON0) and 07Fh), 3 ON
  1488     0257  0020               	banksel	34
  1489     0258  1CA2               	btfss	34,1
  1490     0259  2A5C               	goto	ENDIF12
  1491                           
  1492                           ;IF ADREADPORT.1 ON THEN SET ((ADCON0) and 07Fh), 3 ON
  1493     025A  0021               	banksel	157
  1494     025B  159D               	bsf	157,3
  1495     025C                     ENDIF12:	
  1496                           ;IF ADREADPORT.1 ON THEN SET ((ADCON0) and 07Fh), 3 ON
  1497                           
  1498                           
  1499                           ;IF ADREADPORT.2 ON THEN SET ((ADCON0) and 07Fh), 4 ON
  1500     025C  0020               	banksel	34
  1501     025D  1D22               	btfss	34,2
  1502     025E  2A61               	goto	ENDIF13
  1503                           
  1504                           ;IF ADREADPORT.2 ON THEN SET ((ADCON0) and 07Fh), 4 ON
  1505     025F  0021               	banksel	157
  1506     0260  161D               	bsf	157,4
  1507     0261                     ENDIF13:	
  1508                           ;IF ADREADPORT.2 ON THEN SET ((ADCON0) and 07Fh), 4 ON
  1509                           
  1510                           
  1511                           ;IF ADREADPORT.3 ON THEN SET ((ADCON0) and 07Fh), 5 ON
  1512     0261  0020               	banksel	34
  1513     0262  1DA2               	btfss	34,3
  1514     0263  2A66               	goto	ENDIF14
  1515                           
  1516                           ;IF ADREADPORT.3 ON THEN SET ((ADCON0) and 07Fh), 5 ON
  1517     0264  0021               	banksel	157
  1518     0265  169D               	bsf	157,5
  1519     0266                     ENDIF14:	
  1520                           ;IF ADREADPORT.3 ON THEN SET ((ADCON0) and 07Fh), 5 ON
  1521                           
  1522                           
  1523                           ;IF ADREADPORT.4 ON THEN SET ((ADCON0) and 07Fh), 6 ON
  1524     0266  0020               	banksel	34
  1525     0267  1E22               	btfss	34,4
  1526     0268  2A6B               	goto	ENDIF15
  1527                           
  1528                           ;IF ADREADPORT.4 ON THEN SET ((ADCON0) and 07Fh), 6 ON
  1529     0269  0021               	banksel	157
  1530     026A  171D               	bsf	157,6
  1531     026B                     ENDIF15:	
  1532                           ;IF ADREADPORT.4 ON THEN SET ((ADCON0) and 07Fh), 6 ON
  1533                           
  1534                           
  1535                           ;ENABLE AD OPERATIONS
  1536                           ;SET ((ADCON0) and 07Fh), 0 ON
  1537     026B  0021               	banksel	157
  1538     026C  141D               	bsf	157,0
  1539                           
  1540                           ;ACQUISITION DELAY
  1541                           ;WAIT AD_DELAY
  1542     026D  3002               	movlw	2
  1543     026E  00F5               	movwf	117
  1544     026F  0020               	banksel	3
  1545     0270  20C4               	call	DELAY_10US
  1546                           
  1547                           ;READ A/D 1
  1548                           ;SET GO_NOT_DONE ON
  1549     0271  0021               	banksel	157
  1550     0272  149D               	bsf	157,1
  1551                           
  1552                           ;NOP
  1553     0273  0000               	nop
  1554     0274                     SYSWAITLOOP3:	
  1555                           ;WAIT WHILE GO_NOT_DONE ON
  1556                           
  1557     0274  189D               	btfsc	157,1
  1558     0275  2A74               	goto	SYSWAITLOOP3
  1559                           
  1560                           ;SWITCH OFF A/D
  1561                           ;SET ADCON0.((ADCON0) and 07Fh), 0 OFF
  1562     0276  101D               	bcf	157,0
  1563                           
  1564                           ;ANSELA = 0
  1565     0277  0023               	banksel	396
  1566     0278  018C               	clrf	396
  1567                           
  1568                           ;ANSELB = 0
  1569     0279  018D               	clrf	397
  1570                           
  1571                           ;ANSELC = 0
  1572     027A  018E               	clrf	398
  1573                           
  1574                           ;WRITE OUTPUT
  1575                           ;READAD10 = ADRESL
  1576     027B  0021               	banksel	155
  1577     027C  081B               	movf	155,w
  1578     027D  0020               	banksel	59
  1579     027E  00BB               	movwf	59
  1580     027F  01BC               	clrf	60
  1581                           
  1582                           ;READAD10_H = ADRESH
  1583     0280  0021               	banksel	156
  1584     0281  081C               	movf	156,w
  1585     0282  0020               	banksel	60
  1586     0283  00BC               	movwf	60
  1587                           
  1588                           ;PUT A/D FORMAT BACK TO NORMAL
  1589                           ;SET ((ADCON1) and 07Fh), 7 OFF
  1590     0284  0021               	banksel	158
  1591     0285  139E               	bcf	158,7
  1592     0286  0020               	banksel	3
  1593     0287  0008               	return
  1594     0288                     READMTOUCH:	
  1595                           ;********************************************************************************
  1596                           ;SOURCE: GCBASIC_FIRMWARE_FOR_MICROCHIP_CURIOSITY_BOARD_16F1619.GCB (141)
  1597                           
  1598                           
  1599                           ;DIM ADCVALUEWORD AS WORD
  1600                           ;DIM SAVEADCON0, SAVEODCONC, SAVEANSELC, SAVETRISC, SAVELATC AS BYTE
  1601                           ;SAVEADCON0 = ADCON0
  1602     0288  0021               	banksel	157
  1603     0289  081D               	movf	157,w
  1604     028A  0020               	banksel	61
  1605     028B  00BD               	movwf	61
  1606                           
  1607                           ;SAVETRISC = TRISC
  1608     028C  0021               	banksel	142
  1609     028D  080E               	movf	142,w
  1610     028E  0020               	banksel	65
  1611     028F  00C1               	movwf	65
  1612                           
  1613                           ;SAVELATC = LATC
  1614     0290  0022               	banksel	270
  1615     0291  080E               	movf	270,w
  1616     0292  0020               	banksel	63
  1617     0293  00BF               	movwf	63
  1618                           
  1619                           ;ADCVALUEWORD = 0
  1620     0294  01A0               	clrf	32
  1621     0295  01A1               	clrf	33
  1622                           
  1623                           ;---- CONSTANTS
  1624                           ;AN5/((PORTC) and 07Fh), 1 - SENSOR CHANNEL
  1625                           ;DIR SENSORCHANNEL ((CWG1CON1) and 07Fh), 5
  1626     0296  0021               	banksel	142
  1627     0297  148E               	bsf	142,1
  1628                           
  1629                           ;AN6/((PORTC) and 07Fh), 2 - SECONDARY (DUMMY) CHANNEL
  1630                           ;DIR SECONDARYCHANNEL OUT
  1631     0298  110E               	bcf	142,2
  1632                           
  1633                           ;INTOFF
  1634                           ;AN1298 - STEP 1: SET SECONDARY (DUMMY) CHANNEL HIGH (VDD)
  1635                           ;SET AS OUTPUT
  1636                           ;DIR SECONDARYCHANNEL OUT
  1637     0299  110E               	bcf	142,2
  1638                           
  1639                           ;SET AS OPEN DRAIN
  1640                           ;SAVEODCONC = ODCONC
  1641     029A  0025               	banksel	654
  1642     029B  080E               	movf	654,w
  1643     029C  0020               	banksel	64
  1644     029D  00C0               	movwf	64
  1645                           
  1646                           ;SET ODCONC.2 = 1
  1647     029E  0025               	banksel	654
  1648     029F  150E               	bsf	654,2
  1649                           
  1650                           ;SET AS DIGITAL
  1651                           ;ANSELC = SAVEANSELC
  1652     02A0  0020               	banksel	62
  1653     02A1  083E               	movf	62,w
  1654     02A2  0023               	banksel	398
  1655     02A3  008E               	movwf	398
  1656                           
  1657                           ;SET ANSELC.2 = 0
  1658     02A4  110E               	bcf	398,2
  1659                           
  1660                           ;SET HIGH (VDD)
  1661                           ;SET SECONDARYCHANNEL = 1
  1662     02A5  0022               	banksel	270
  1663     02A6  150E               	bsf	270,2
  1664                           
  1665                           ;AN1298 - STEP 2: SELECT SECONDARY CHANNEL ON ADC (CHARGE CHOLD TO VDD)
  1666                           ;ADC CHANNEL SELECT -> AN6/((PORTC) and 07Fh), 2 (BITS 2-6)
  1667                           ;SET ADCON0
  1668     02A7  3019               	movlw	25
  1669     02A8  0021               	banksel	157
  1670     02A9  009D               	movwf	157
  1671                           
  1672                           ;AN1298 - STEP 3: SET SENSOR PIN AS OUTPUT, LOW (GND) TO ELIMINATE ANY CHARGE
  1673                           ;SET AS OUTPUT
  1674                           ;DIR SENSORCHANNEL OUT
  1675     02AA  108E               	bcf	142,1
  1676                           
  1677                           ;SET AS DIGITAL
  1678                           ;SET ANSELC.1 = 0
  1679     02AB  0023               	banksel	398
  1680     02AC  108E               	bcf	398,1
  1681                           
  1682                           ;SET LOW (GROUND)
  1683                           ;SET SENSORCHANNEL = 0
  1684     02AD  0022               	banksel	270
  1685     02AE  108E               	bcf	270,1
  1686                           
  1687                           ;AN1298 - STEP 4: SET SENSOR PIN AS INPUT
  1688                           ;SET AS INPUT
  1689                           ;DIR SENSORCHANNEL ((CWG1CON1) and 07Fh), 5
  1690     02AF  0021               	banksel	142
  1691     02B0  148E               	bsf	142,1
  1692                           
  1693                           ;SET AS ANALOG
  1694                           ;SET ANSELC.1 = 1
  1695     02B1  0023               	banksel	398
  1696     02B2  148E               	bsf	398,1
  1697                           
  1698                           ;AN1298 - STEP 5: SELECT SENSOR CHANNEL ON ADC (V-DIV SENSOR:CHOLD)
  1699                           ;ADC CHANNEL SELECT -> AN5/((PORTC) and 07Fh), 1 (BITS 2-6)
  1700                           ;SET ADCON0
  1701     02B3  3015               	movlw	21
  1702     02B4  0021               	banksel	157
  1703     02B5  009D               	movwf	157
  1704                           
  1705                           ;ENABLE ADC (BIT 0)
  1706                           ;DELAY TO ALLOW ADC VOLTAGE TO STABILISE
  1707                           ;WAIT 10 US
  1708     02B6  301A               	movlw	26
  1709     02B7  00F0               	movwf	112
  1710     02B8                     DELAYUS1:
  1711     02B8  0BF0               	decfsz	112,f
  1712     02B9  2AB8               	goto	DELAYUS1
  1713     02BA  0000               	nop
  1714                           
  1715                           ;AN1298 - STEP 6: START ADC CONVERSION
  1716                           ;SET ((ADCON1) and 07Fh), 7 ON
  1717     02BB  179E               	bsf	158,7
  1718                           
  1719                           ;START ADC CONVERSION (SET ((ADCON0) and 07Fh), 1/DONE BIT 1 = 1)
  1720                           ;SET ADCON0.1 = 1
  1721     02BC  149D               	bsf	157,1
  1722     02BD                     SYSWAITLOOP1:	
  1723                           ;WAIT FOR ADC CONVERSION (DONE BIT 1 = 0)
  1724                           ;WAIT WHILE ADCON0.1 = 1
  1725                           
  1726     02BD  189D               	btfsc	157,1
  1727     02BE  2ABD               	goto	SYSWAITLOOP1
  1728                           
  1729                           ;AN1298 - STEP 7: READ ADC RESULT
  1730                           ;ADCVALUEWORD = READAD10(AN5)
  1731     02BF  3005               	movlw	5
  1732     02C0  0020               	banksel	34
  1733     02C1  00A2               	movwf	34
  1734     02C2  2239               	call	FN_READAD108
  1735     02C3  083B               	movf	59,w
  1736     02C4  00A0               	movwf	32
  1737     02C5  083C               	movf	60,w
  1738     02C6  00A1               	movwf	33
  1739                           
  1740                           ;ACTION RESULT
  1741                           ;LATC = SAVELATC
  1742     02C7  083F               	movf	63,w
  1743     02C8  0022               	banksel	270
  1744     02C9  008E               	movwf	270
  1745                           
  1746                           ;IF ADCVALUEWORD > 10 THEN
  1747     02CA  0020               	banksel	32
  1748     02CB  0820               	movf	32,w
  1749     02CC  00F9               	movwf	121
  1750     02CD  0821               	movf	33,w
  1751     02CE  00FA               	movwf	122
  1752     02CF  300A               	movlw	10
  1753     02D0  00F5               	movwf	117
  1754     02D1  01F6               	clrf	118
  1755     02D2  2311               	call	SYSCOMPLESSTHAN16
  1756     02D3  1C70               	btfss	112,0
  1757     02D4  2AD8               	goto	ELSE5_1
  1758                           
  1759                           ;IF TOUCHING S3 TOUCH BUTTON
  1760                           ;LED6 = 1
  1761     02D5  0022               	banksel	268
  1762     02D6  150C               	bsf	268,2
  1763                           
  1764                           ;ELSE
  1765     02D7  2ADA               	goto	ENDIF5
  1766     02D8                     ELSE5_1:
  1767                           
  1768                           ;LED6 = 0
  1769     02D8  0022               	banksel	268
  1770     02D9  110C               	bcf	268,2
  1771     02DA                     ENDIF5:	
  1772                           ;END IF
  1773                           
  1774                           
  1775                           ;TRISC = SAVETRISC
  1776     02DA  0020               	banksel	65
  1777     02DB  0841               	movf	65,w
  1778     02DC  0021               	banksel	142
  1779     02DD  008E               	movwf	142
  1780                           
  1781                           ;ANSELC = SAVEANSELC
  1782     02DE  0020               	banksel	62
  1783     02DF  083E               	movf	62,w
  1784     02E0  0023               	banksel	398
  1785     02E1  008E               	movwf	398
  1786                           
  1787                           ;ODCONC = SAVEODCONC
  1788     02E2  0020               	banksel	64
  1789     02E3  0840               	movf	64,w
  1790     02E4  0025               	banksel	654
  1791     02E5  008E               	movwf	654
  1792                           
  1793                           ;ADCON0 = SAVEADCON0
  1794     02E6  0020               	banksel	61
  1795     02E7  083D               	movf	61,w
  1796     02E8  0021               	banksel	157
  1797     02E9  009D               	movwf	157
  1798                           
  1799                           ;ADCON0.((ADCON0) and 07Fh), 0 = 0
  1800     02EA  101D               	bcf	157,0
  1801                           
  1802                           ;INTON
  1803     02EB  0020               	banksel	3
  1804     02EC  0008               	return
  1805     02ED                     SYSCOMPEQUAL:	
  1806                           ;********************************************************************************
  1807                           ;SOURCE: SYSTEM.H (3081)
  1808                           
  1809                           
  1810                           ;DIM SYSBYTETEMPA, SYSBYTETEMPB, SYSBYTETEMPX AS BYTE
  1811                           ;CLRF SYSBYTETEMPX
  1812     02ED  01F0               	clrf	112
  1813                           
  1814                           ;MOVF SYSBYTETEMPA, W
  1815     02EE  0875               	movf	117,w
  1816                           
  1817                           ;SUBWF SYSBYTETEMPB, W
  1818     02EF  0279               	subwf	121,w
  1819                           
  1820                           ;BTFSC STATUS, Z
  1821     02F0  1903               	btfsc	3,2
  1822                           
  1823                           ;COMF SYSBYTETEMPX,F
  1824     02F1  09F0               	comf	112,f
  1825     02F2  0008               	return
  1826     02F3                     SYSCOMPEQUAL16:	
  1827                           ;********************************************************************************
  1828                           ;SOURCE: SYSTEM.H (3107)
  1829                           
  1830                           
  1831                           ;DIM SYSWORDTEMPA AS WORD
  1832                           ;DIM SYSWORDTEMPB AS WORD
  1833                           ;DIM SYSBYTETEMPX AS BYTE
  1834                           ;CLRF SYSBYTETEMPX
  1835     02F3  01F0               	clrf	112
  1836                           
  1837                           ;TEST LOW, EXIT IF FALSE
  1838                           ;MOVF SYSWORDTEMPA, W
  1839     02F4  0875               	movf	117,w
  1840                           
  1841                           ;SUBWF SYSWORDTEMPB, W
  1842     02F5  0279               	subwf	121,w
  1843                           
  1844                           ;BTFSS STATUS, Z
  1845     02F6  1D03               	btfss	3,2
  1846                           
  1847                           ;RETURN
  1848     02F7  0008               	return
  1849                           
  1850                           ;TEST HIGH, EXIT IF FALSE
  1851                           ;MOVF SYSWORDTEMPA_H, W
  1852     02F8  0876               	movf	118,w
  1853                           
  1854                           ;SUBWF SYSWORDTEMPB_H, W
  1855     02F9  027A               	subwf	122,w
  1856                           
  1857                           ;BTFSS STATUS, Z
  1858     02FA  1D03               	btfss	3,2
  1859                           
  1860                           ;RETURN
  1861     02FB  0008               	return
  1862                           
  1863                           ;COMF SYSBYTETEMPX,F
  1864     02FC  09F0               	comf	112,f
  1865     02FD  0008               	return
  1866     02FE                     SYSCOMPEQUAL32:	
  1867                           ;********************************************************************************
  1868                           ;SOURCE: SYSTEM.H (3161)
  1869                           
  1870                           
  1871                           ;DIM SYSLONGTEMPA AS LONG
  1872                           ;DIM SYSLONGTEMPB AS LONG
  1873                           ;DIM SYSBYTETEMPX AS BYTE
  1874                           ;CLRF SYSBYTETEMPX
  1875     02FE  01F0               	clrf	112
  1876                           
  1877                           ;TEST LOW, EXIT IF FALSE
  1878                           ;MOVF SYSLONGTEMPA, W
  1879     02FF  0875               	movf	117,w
  1880                           
  1881                           ;SUBWF SYSLONGTEMPB, W
  1882     0300  0279               	subwf	121,w
  1883                           
  1884                           ;BTFSS STATUS, Z
  1885     0301  1D03               	btfss	3,2
  1886                           
  1887                           ;RETURN
  1888     0302  0008               	return
  1889                           
  1890                           ;TEST HIGH, EXIT IF FALSE
  1891                           ;MOVF SYSLONGTEMPA_H, W
  1892     0303  0876               	movf	118,w
  1893                           
  1894                           ;SUBWF SYSLONGTEMPB_H, W
  1895     0304  027A               	subwf	122,w
  1896                           
  1897                           ;BTFSS STATUS, Z
  1898     0305  1D03               	btfss	3,2
  1899                           
  1900                           ;RETURN
  1901     0306  0008               	return
  1902                           
  1903                           ;TEST UPPER, EXIT IF FALSE
  1904                           ;MOVF SYSLONGTEMPA_U, W
  1905     0307  0877               	movf	119,w
  1906                           
  1907                           ;SUBWF SYSLONGTEMPB_U, W
  1908     0308  027B               	subwf	123,w
  1909                           
  1910                           ;BTFSS STATUS, Z
  1911     0309  1D03               	btfss	3,2
  1912                           
  1913                           ;RETURN
  1914     030A  0008               	return
  1915                           
  1916                           ;TEST EXP, EXIT IF FALSE
  1917                           ;MOVF SYSLONGTEMPA_E, W
  1918     030B  0878               	movf	120,w
  1919                           
  1920                           ;SUBWF SYSLONGTEMPB_E, W
  1921     030C  027C               	subwf	124,w
  1922                           
  1923                           ;BTFSS STATUS, Z
  1924     030D  1D03               	btfss	3,2
  1925                           
  1926                           ;RETURN
  1927     030E  0008               	return
  1928                           
  1929                           ;COMF SYSBYTETEMPX,F
  1930     030F  09F0               	comf	112,f
  1931     0310  0008               	return
  1932     0311                     SYSCOMPLESSTHAN16:	
  1933                           ;********************************************************************************
  1934                           ;SOURCE: SYSTEM.H (3416)
  1935                           
  1936                           
  1937                           ;DIM SYSWORDTEMPA AS WORD
  1938                           ;DIM SYSWORDTEMPB AS WORD
  1939                           ;DIM SYSBYTETEMPX AS BYTE
  1940                           ;CLRF SYSBYTETEMPX
  1941     0311  01F0               	clrf	112
  1942                           
  1943                           ;TEST HIGH, EXIT IF MORE
  1944                           ;MOVF SYSWORDTEMPA_H,W
  1945     0312  0876               	movf	118,w
  1946                           
  1947                           ;SUBWF SYSWORDTEMPB_H,W
  1948     0313  027A               	subwf	122,w
  1949                           
  1950                           ;BTFSS STATUS,C
  1951     0314  1C03               	btfss	3,0
  1952                           
  1953                           ;RETURN
  1954     0315  0008               	return
  1955                           
  1956                           ;TEST HIGH, EXIT TRUE IF LESS
  1957                           ;MOVF SYSWORDTEMPB_H,W
  1958     0316  087A               	movf	122,w
  1959                           
  1960                           ;SUBWF SYSWORDTEMPA_H,W
  1961     0317  0276               	subwf	118,w
  1962                           
  1963                           ;BTFSS STATUS,C
  1964     0318  1C03               	btfss	3,0
  1965                           
  1966                           ;GOTO SCLT16TRUE
  1967     0319  2B1E               	goto	SCLT16TRUE
  1968                           
  1969                           ;TEST LOW, EXIT IF MORE OR EQUAL
  1970                           ;MOVF SYSWORDTEMPB,W
  1971     031A  0879               	movf	121,w
  1972                           
  1973                           ;SUBWF SYSWORDTEMPA,W
  1974     031B  0275               	subwf	117,w
  1975                           
  1976                           ;BTFSC STATUS,C
  1977     031C  1803               	btfsc	3,0
  1978                           
  1979                           ;RETURN
  1980     031D  0008               	return
  1981     031E                     SCLT16TRUE:
  1982                           
  1983                           ;COMF SYSBYTETEMPX,F
  1984     031E  09F0               	comf	112,f
  1985     031F  0008               	return
  1986     0320                     SYSCOMPLESSTHAN32:	
  1987                           ;********************************************************************************
  1988                           ;SOURCE: SYSTEM.H (3474)
  1989                           
  1990                           
  1991                           ;DIM SYSLONGTEMPA AS LONG
  1992                           ;DIM SYSLONGTEMPB AS LONG
  1993                           ;DIM SYSBYTETEMPX AS BYTE
  1994                           ;CLRF SYSBYTETEMPX
  1995     0320  01F0               	clrf	112
  1996                           
  1997                           ;TEST EXP, EXIT IF MORE
  1998                           ;MOVF SYSLONGTEMPA_E,W
  1999     0321  0878               	movf	120,w
  2000                           
  2001                           ;SUBWF SYSLONGTEMPB_E,W
  2002     0322  027C               	subwf	124,w
  2003                           
  2004                           ;BTFSS STATUS,C
  2005     0323  1C03               	btfss	3,0
  2006                           
  2007                           ;RETURN
  2008     0324  0008               	return
  2009                           
  2010                           ;IF NOT MORE AND NOT ((STATUS) and 07Fh), 2, IS LESS
  2011                           ;BTFSS STATUS,Z
  2012     0325  1D03               	btfss	3,2
  2013                           
  2014                           ;GOTO SCLT32TRUE
  2015     0326  2B37               	goto	SCLT32TRUE
  2016                           
  2017                           ;TEST UPPER, EXIT IF MORE
  2018                           ;MOVF SYSLONGTEMPA_U,W
  2019     0327  0877               	movf	119,w
  2020                           
  2021                           ;SUBWF SYSLONGTEMPB_U,W
  2022     0328  027B               	subwf	123,w
  2023                           
  2024                           ;BTFSS STATUS,C
  2025     0329  1C03               	btfss	3,0
  2026                           
  2027                           ;RETURN
  2028     032A  0008               	return
  2029                           
  2030                           ;IF NOT MORE AND NOT ((STATUS) and 07Fh), 2, IS LESS
  2031                           ;BTFSS STATUS,Z
  2032     032B  1D03               	btfss	3,2
  2033                           
  2034                           ;GOTO SCLT32TRUE
  2035     032C  2B37               	goto	SCLT32TRUE
  2036                           
  2037                           ;TEST HIGH, EXIT IF MORE
  2038                           ;MOVF SYSLONGTEMPA_H,W
  2039     032D  0876               	movf	118,w
  2040                           
  2041                           ;SUBWF SYSLONGTEMPB_H,W
  2042     032E  027A               	subwf	122,w
  2043                           
  2044                           ;BTFSS STATUS,C
  2045     032F  1C03               	btfss	3,0
  2046                           
  2047                           ;RETURN
  2048     0330  0008               	return
  2049                           
  2050                           ;IF NOT MORE AND NOT ((STATUS) and 07Fh), 2, IS LESS
  2051                           ;BTFSS STATUS,Z
  2052     0331  1D03               	btfss	3,2
  2053                           
  2054                           ;GOTO SCLT32TRUE
  2055     0332  2B37               	goto	SCLT32TRUE
  2056                           
  2057                           ;TEST LOW, EXIT IF MORE OR EQUAL
  2058                           ;MOVF SYSLONGTEMPB,W
  2059     0333  0879               	movf	121,w
  2060                           
  2061                           ;SUBWF SYSLONGTEMPA,W
  2062     0334  0275               	subwf	117,w
  2063                           
  2064                           ;BTFSC STATUS,C
  2065     0335  1803               	btfsc	3,0
  2066                           
  2067                           ;RETURN
  2068     0336  0008               	return
  2069     0337                     SCLT32TRUE:
  2070                           
  2071                           ;COMF SYSBYTETEMPX,F
  2072     0337  09F0               	comf	112,f
  2073     0338  0008               	return
  2074     0339                     SYSDIVSUB16:	
  2075                           ;********************************************************************************
  2076                           ;SOURCE: SYSTEM.H (2864)
  2077                           
  2078                           
  2079                           ;DIM SYSWORDTEMPA AS WORD
  2080                           ;DIM SYSWORDTEMPB AS WORD
  2081                           ;DIM SYSWORDTEMPX AS WORD
  2082                           ;DIM SYSDIVMULTA AS WORD
  2083                           ;DIM SYSDIVMULTB AS WORD
  2084                           ;DIM SYSDIVMULTX AS WORD
  2085                           ;SYSDIVMULTA = SYSWORDTEMPA
  2086     0339  0875               	movf	117,w
  2087     033A  00F7               	movwf	119
  2088     033B  0876               	movf	118,w
  2089     033C  00F8               	movwf	120
  2090                           
  2091                           ;SYSDIVMULTB = SYSWORDTEMPB
  2092     033D  0879               	movf	121,w
  2093     033E  00FB               	movwf	123
  2094     033F  087A               	movf	122,w
  2095     0340  00FC               	movwf	124
  2096                           
  2097                           ;SYSDIVMULTX = 0
  2098     0341  01F2               	clrf	114
  2099     0342  01F3               	clrf	115
  2100                           
  2101                           ;AVOID DIVISION BY ((STATUS) and 07Fh), 2
  2102                           ;IF SYSDIVMULTB = 0 THEN
  2103     0343  087B               	movf	123,w
  2104     0344  00F5               	movwf	117
  2105     0345  087C               	movf	124,w
  2106     0346  00F6               	movwf	118
  2107     0347  01F9               	clrf	121
  2108     0348  01FA               	clrf	122
  2109     0349  22F3               	call	SYSCOMPEQUAL16
  2110     034A  1C70               	btfss	112,0
  2111     034B  2B4F               	goto	ENDIF30
  2112                           
  2113                           ;SYSWORDTEMPA = 0
  2114     034C  01F5               	clrf	117
  2115     034D  01F6               	clrf	118
  2116                           
  2117                           ;EXIT SUB
  2118     034E  0008               	return
  2119     034F                     ENDIF30:	
  2120                           ;END IF
  2121                           
  2122                           
  2123                           ;MAIN CALC ROUTINE
  2124                           ;SYSDIVLOOP = 16
  2125     034F  3010               	movlw	16
  2126     0350  00F4               	movwf	116
  2127     0351                     SYSDIV16START:
  2128                           
  2129                           ;SET C OFF
  2130     0351  1003               	bcf	3,0
  2131                           
  2132                           ;ROTATE SYSDIVMULTA LEFT
  2133     0352  0DF7               	rlf	119,f
  2134     0353  0DF8               	rlf	120,f
  2135                           
  2136                           ;ROTATE SYSDIVMULTX LEFT
  2137     0354  0DF2               	rlf	114,f
  2138     0355  0DF3               	rlf	115,f
  2139                           
  2140                           ;SYSDIVMULTX = SYSDIVMULTX - SYSDIVMULTB
  2141     0356  087B               	movf	123,w
  2142     0357  02F2               	subwf	114,f
  2143     0358  087C               	movf	124,w
  2144     0359  3BF3               	subwfb	115,f
  2145                           
  2146                           ;SET SYSDIVMULTA.0 ON
  2147     035A  1477               	bsf	119,0
  2148                           
  2149                           ;IF C OFF THEN
  2150     035B  1803               	btfsc	3,0
  2151     035C  2B62               	goto	ENDIF31
  2152                           
  2153                           ;SET SYSDIVMULTA.0 OFF
  2154     035D  1077               	bcf	119,0
  2155                           
  2156                           ;SYSDIVMULTX = SYSDIVMULTX + SYSDIVMULTB
  2157     035E  087B               	movf	123,w
  2158     035F  07F2               	addwf	114,f
  2159     0360  087C               	movf	124,w
  2160     0361  3DF3               	addwfc	115,f
  2161     0362                     ENDIF31:	
  2162                           ;END IF
  2163                           
  2164                           
  2165                           ;DECFSZ SYSDIVLOOP, F
  2166     0362  0BF4               	decfsz	116,f
  2167                           
  2168                           ;GOTO SYSDIV16START
  2169     0363  2B51               	goto	SYSDIV16START
  2170                           
  2171                           ;SYSWORDTEMPA = SYSDIVMULTA
  2172     0364  0877               	movf	119,w
  2173     0365  00F5               	movwf	117
  2174     0366  0878               	movf	120,w
  2175     0367  00F6               	movwf	118
  2176                           
  2177                           ;SYSWORDTEMPX = SYSDIVMULTX
  2178     0368  0872               	movf	114,w
  2179     0369  00F0               	movwf	112
  2180     036A  0873               	movf	115,w
  2181     036B  00F1               	movwf	113
  2182     036C  0008               	return
  2183     036D                     SYSDIVSUB32:	
  2184                           ;********************************************************************************
  2185                           ;SOURCE: SYSTEM.H (2940)
  2186                           
  2187                           
  2188                           ;DIM SYSLONGTEMPA AS LONG
  2189                           ;DIM SYSLONGTEMPB AS LONG
  2190                           ;DIM SYSLONGTEMPX AS LONG
  2191                           ;#IFDEF PIC
  2192                           ;DIM SYSLONGDIVMULTA AS LONG
  2193                           ;DIM SYSLONGDIVMULTB AS LONG
  2194                           ;DIM SYSLONGDIVMULTX AS LONG
  2195                           ;#ENDIF
  2196                           ;SYSLONGDIVMULTA = SYSLONGTEMPA
  2197     036D  0875               	movf	117,w
  2198     036E  00C2               	movwf	66
  2199     036F  0876               	movf	118,w
  2200     0370  00C3               	movwf	67
  2201     0371  0877               	movf	119,w
  2202     0372  00C4               	movwf	68
  2203     0373  0878               	movf	120,w
  2204     0374  00C5               	movwf	69
  2205                           
  2206                           ;SYSLONGDIVMULTB = SYSLONGTEMPB
  2207     0375  0879               	movf	121,w
  2208     0376  00C6               	movwf	70
  2209     0377  087A               	movf	122,w
  2210     0378  00C7               	movwf	71
  2211     0379  087B               	movf	123,w
  2212     037A  00C8               	movwf	72
  2213     037B  087C               	movf	124,w
  2214     037C  00C9               	movwf	73
  2215                           
  2216                           ;SYSLONGDIVMULTX = 0
  2217     037D  01CA               	clrf	74
  2218     037E  01CB               	clrf	75
  2219     037F  01CC               	clrf	76
  2220     0380  01CD               	clrf	77
  2221                           
  2222                           ;AVOID DIVISION BY ((STATUS) and 07Fh), 2
  2223                           ;IF SYSLONGDIVMULTB = 0 THEN
  2224     0381  0846               	movf	70,w
  2225     0382  00F5               	movwf	117
  2226     0383  0847               	movf	71,w
  2227     0384  00F6               	movwf	118
  2228     0385  0848               	movf	72,w
  2229     0386  00F7               	movwf	119
  2230     0387  0849               	movf	73,w
  2231     0388  00F8               	movwf	120
  2232     0389  01F9               	clrf	121
  2233     038A  01FA               	clrf	122
  2234     038B  01FB               	clrf	123
  2235     038C  01FC               	clrf	124
  2236     038D  22FE               	call	SYSCOMPEQUAL32
  2237     038E  1C70               	btfss	112,0
  2238     038F  2B95               	goto	ENDIF32
  2239                           
  2240                           ;SYSLONGTEMPA = 0
  2241     0390  01F5               	clrf	117
  2242     0391  01F6               	clrf	118
  2243     0392  01F7               	clrf	119
  2244     0393  01F8               	clrf	120
  2245                           
  2246                           ;EXIT SUB
  2247     0394  0008               	return
  2248     0395                     ENDIF32:	
  2249                           ;END IF
  2250                           
  2251                           
  2252                           ;MAIN CALC ROUTINE
  2253                           ;SYSDIVLOOP = 32
  2254     0395  3020               	movlw	32
  2255     0396  00F4               	movwf	116
  2256     0397                     SYSDIV32START:
  2257                           
  2258                           ;SET C OFF
  2259     0397  1003               	bcf	3,0
  2260                           
  2261                           ;ROTATE SYSLONGDIVMULTA LEFT
  2262     0398  0DC2               	rlf	66,f
  2263     0399  0DC3               	rlf	67,f
  2264     039A  0DC4               	rlf	68,f
  2265     039B  0DC5               	rlf	69,f
  2266                           
  2267                           ;ROTATE SYSLONGDIVMULTX LEFT
  2268     039C  0DCA               	rlf	74,f
  2269     039D  0DCB               	rlf	75,f
  2270     039E  0DCC               	rlf	76,f
  2271     039F  0DCD               	rlf	77,f
  2272                           
  2273                           ;SYSLONGDIVMULTX = SYSLONGDIVMULTX - SYSLONGDIVMULTB
  2274     03A0  0846               	movf	70,w
  2275     03A1  02CA               	subwf	74,f
  2276     03A2  0847               	movf	71,w
  2277     03A3  3BCB               	subwfb	75,f
  2278     03A4  0848               	movf	72,w
  2279     03A5  3BCC               	subwfb	76,f
  2280     03A6  0849               	movf	73,w
  2281     03A7  3BCD               	subwfb	77,f
  2282                           
  2283                           ;SET SYSLONGDIVMULTA.0 ON
  2284     03A8  1442               	bsf	66,0
  2285                           
  2286                           ;IF C OFF THEN
  2287     03A9  1803               	btfsc	3,0
  2288     03AA  2BB4               	goto	ENDIF33
  2289                           
  2290                           ;SET SYSLONGDIVMULTA.0 OFF
  2291     03AB  1042               	bcf	66,0
  2292                           
  2293                           ;SYSLONGDIVMULTX = SYSLONGDIVMULTX + SYSLONGDIVMULTB
  2294     03AC  0846               	movf	70,w
  2295     03AD  07CA               	addwf	74,f
  2296     03AE  0847               	movf	71,w
  2297     03AF  3DCB               	addwfc	75,f
  2298     03B0  0848               	movf	72,w
  2299     03B1  3DCC               	addwfc	76,f
  2300     03B2  0849               	movf	73,w
  2301     03B3  3DCD               	addwfc	77,f
  2302     03B4                     ENDIF33:	
  2303                           ;END IF
  2304                           
  2305                           
  2306                           ;DECFSZ SYSDIVLOOP, F
  2307     03B4  0BF4               	decfsz	116,f
  2308                           
  2309                           ;GOTO SYSDIV32START
  2310     03B5  2B97               	goto	SYSDIV32START
  2311                           
  2312                           ;SYSLONGTEMPA = SYSLONGDIVMULTA
  2313     03B6  0842               	movf	66,w
  2314     03B7  00F5               	movwf	117
  2315     03B8  0843               	movf	67,w
  2316     03B9  00F6               	movwf	118
  2317     03BA  0844               	movf	68,w
  2318     03BB  00F7               	movwf	119
  2319     03BC  0845               	movf	69,w
  2320     03BD  00F8               	movwf	120
  2321                           
  2322                           ;SYSLONGTEMPX = SYSLONGDIVMULTX
  2323     03BE  084A               	movf	74,w
  2324     03BF  00F0               	movwf	112
  2325     03C0  084B               	movf	75,w
  2326     03C1  00F1               	movwf	113
  2327     03C2  084C               	movf	76,w
  2328     03C3  00F2               	movwf	114
  2329     03C4  084D               	movf	77,w
  2330     03C5  00F3               	movwf	115
  2331     03C6  0008               	return
  2332     03C7                     SYSMULTSUB32:	
  2333                           ;********************************************************************************
  2334                           ;SOURCE: SYSTEM.H (2685)
  2335                           
  2336                           
  2337                           ;DIM SYSLONGTEMPA AS LONG
  2338                           ;DIM SYSLONGTEMPB AS LONG
  2339                           ;DIM SYSLONGTEMPX AS LONG
  2340                           ;CAN'T USE NORMAL SYSDIVMULT VARIABLES FOR 32 BIT, THEY OVERLAP WITH
  2341                           ;SYSLONGTEMP VARIABLES
  2342                           ;DIM SYSLONGDIVMULTA AS LONG
  2343                           ;DIM SYSLONGDIVMULTB AS LONG
  2344                           ;DIM SYSLONGDIVMULTX AS LONG
  2345                           ;SYSLONGDIVMULTA = SYSLONGTEMPA
  2346     03C7  0875               	movf	117,w
  2347     03C8  00C2               	movwf	66
  2348     03C9  0876               	movf	118,w
  2349     03CA  00C3               	movwf	67
  2350     03CB  0877               	movf	119,w
  2351     03CC  00C4               	movwf	68
  2352     03CD  0878               	movf	120,w
  2353     03CE  00C5               	movwf	69
  2354                           
  2355                           ;SYSLONGDIVMULTB = SYSLONGTEMPB
  2356     03CF  0879               	movf	121,w
  2357     03D0  00C6               	movwf	70
  2358     03D1  087A               	movf	122,w
  2359     03D2  00C7               	movwf	71
  2360     03D3  087B               	movf	123,w
  2361     03D4  00C8               	movwf	72
  2362     03D5  087C               	movf	124,w
  2363     03D6  00C9               	movwf	73
  2364                           
  2365                           ;SYSLONGDIVMULTX = 0
  2366     03D7  01CA               	clrf	74
  2367     03D8  01CB               	clrf	75
  2368     03D9  01CC               	clrf	76
  2369     03DA  01CD               	clrf	77
  2370     03DB                     MUL32LOOP:
  2371                           
  2372                           ;IF SYSLONGDIVMULTB.0 ON THEN SYSLONGDIVMULTX += SYSLONGDIVMULTA
  2373     03DB  1C46               	btfss	70,0
  2374     03DC  2BE5               	goto	ENDIF28
  2375                           
  2376                           ;IF SYSLONGDIVMULTB.0 ON THEN SYSLONGDIVMULTX += SYSLONGDIVMULTA
  2377     03DD  0842               	movf	66,w
  2378     03DE  07CA               	addwf	74,f
  2379     03DF  0843               	movf	67,w
  2380     03E0  3DCB               	addwfc	75,f
  2381     03E1  0844               	movf	68,w
  2382     03E2  3DCC               	addwfc	76,f
  2383     03E3  0845               	movf	69,w
  2384     03E4  3DCD               	addwfc	77,f
  2385     03E5                     ENDIF28:	
  2386                           ;IF SYSLONGDIVMULTB.0 ON THEN SYSLONGDIVMULTX += SYSLONGDIVMULTA
  2387                           
  2388                           
  2389                           ;SET STATUS.C OFF
  2390     03E5  1003               	bcf	3,0
  2391                           
  2392                           ;ROTATE SYSLONGDIVMULTB RIGHT
  2393     03E6  0CC9               	rrf	73,f
  2394     03E7  0CC8               	rrf	72,f
  2395     03E8  0CC7               	rrf	71,f
  2396     03E9  0CC6               	rrf	70,f
  2397                           
  2398                           ;SET STATUS.C OFF
  2399     03EA  1003               	bcf	3,0
  2400                           
  2401                           ;ROTATE SYSLONGDIVMULTA LEFT
  2402     03EB  0DC2               	rlf	66,f
  2403     03EC  0DC3               	rlf	67,f
  2404     03ED  0DC4               	rlf	68,f
  2405     03EE  0DC5               	rlf	69,f
  2406                           
  2407                           ;IF SYSLONGDIVMULTB > 0 THEN GOTO MUL32LOOP
  2408     03EF  0846               	movf	70,w
  2409     03F0  00F9               	movwf	121
  2410     03F1  0847               	movf	71,w
  2411     03F2  00FA               	movwf	122
  2412     03F3  0848               	movf	72,w
  2413     03F4  00FB               	movwf	123
  2414     03F5  0849               	movf	73,w
  2415     03F6  00FC               	movwf	124
  2416     03F7  01F5               	clrf	117
  2417     03F8  01F6               	clrf	118
  2418     03F9  01F7               	clrf	119
  2419     03FA  01F8               	clrf	120
  2420     03FB  2320               	call	SYSCOMPLESSTHAN32
  2421     03FC  1870               	btfsc	112,0
  2422                           
  2423                           ;IF SYSLONGDIVMULTB > 0 THEN GOTO MUL32LOOP
  2424     03FD  2BDB               	goto	MUL32LOOP
  2425                           
  2426                           ;IF SYSLONGDIVMULTB > 0 THEN GOTO MUL32LOOP
  2427                           ;SYSLONGTEMPX = SYSLONGDIVMULTX
  2428     03FE  084A               	movf	74,w
  2429     03FF  00F0               	movwf	112
  2430     0400  084B               	movf	75,w
  2431     0401  00F1               	movwf	113
  2432     0402  084C               	movf	76,w
  2433     0403  00F2               	movwf	114
  2434     0404  084D               	movf	77,w
  2435     0405  00F3               	movwf	115
  2436     0406  0008               	return
  2437                           
  2438                           	psect	PROGMEM1
  2439                           
  2440                           ;********************************************************************************
  2441                           ;START OF PROGRAM MEMORY PAGE 1
  2442     0800                     	org	2048
  2443                           
  2444                           	psect	PROGMEM2
  2445                           
  2446                           ;START OF PROGRAM MEMORY PAGE 2
  2447     1000                     	org	4096
  2448                           
  2449                           	psect	PROGMEM3
  2450                           
  2451                           ;START OF PROGRAM MEMORY PAGE 3
  2452     1800                     	org	6144
  2453                           
  2454                           	psect	config
  2455                           
  2456                           ;Config register CONFIG1 @ 0x8007
  2457                           ;	Oscillator Selection Bits
  2458                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2459                           ;	Power-up Timer Enable
  2460                           ;	PWRTE = 0x1, unprogrammed default
  2461                           ;	MCLR Pin Function Select
  2462                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2463                           ;	Flash Program Memory Code Protection
  2464                           ;	CP = OFF, Program memory code protection is disabled
  2465                           ;	Brown-out Reset Enable
  2466                           ;	BOREN = 0x3, unprogrammed default
  2467                           ;	Clock Out Enable
  2468                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT pin
  2469                           ;	Internal/External Switch Over
  2470                           ;	IESO = 0x1, unprogrammed default
  2471                           ;	Fail-Safe Clock Monitor Enable
  2472                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2473     8007                     	org	32775
  2474     8007  3FFC               	dw	16380
  2475                           
  2476                           ;Config register CONFIG2 @ 0x8008
  2477                           ;	Flash Memory Self-Write Protection
  2478                           ;	WRT = OFF, Write protection off
  2479                           ;	Peripheral Pin Select one-way control
  2480                           ;	PPS1WAY = 0x1, unprogrammed default
  2481                           ;	Zero Cross Detect Disable Bit
  2482                           ;	ZCD = 0x1, unprogrammed default
  2483                           ;	PLL Enable Bit
  2484                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  2485                           ;	Stack Overflow/Underflow Reset Enable
  2486                           ;	STVREN = 0x1, unprogrammed default
  2487                           ;	Brown-out Reset Voltage Selection
  2488                           ;	BORV = 0x1, unprogrammed default
  2489                           ;	Low-Power Brown Out Reset
  2490                           ;	LPBOR = 0x1, unprogrammed default
  2491                           ;	Low-Voltage Programming Enable
  2492                           ;	LVP = ON, Low-voltage programming enabled
  2493     8008                     	org	32776
  2494     8008  3EFF               	dw	16127
  2495                           
  2496                           ;Config register CONFIG3 @ 0x8009
  2497                           ;	WDT Period Select
  2498                           ;	WDTCPS = 0x1F, unprogrammed default
  2499                           ;	Watchdog Timer Enable
  2500                           ;	WDTE = OFF, WDT disabled
  2501                           ;	WDT Window Select
  2502                           ;	WDTCWS = 0x7, unprogrammed default
  2503                           ;	WDT Input Clock Selector
  2504                           ;	WDTCCS = 0x7, unprogrammed default
  2505     8009                     	org	32777
  2506     8009  3F9F               	dw	16287


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                                                                               Thu Apr 06 09:26:20 2023

                             LATA 010C                               LATC 010E                               T2PR 001B                               PIR1 0010  
                            T2CON 001C                              T2HLT 001D                 TIMERSELECTIONBITS 0055                              T2TMR 001A  
                            T2RST 001F                              PORTA 000C                              PORTB 000D                              PORTC 000E  
                            TRISA 008C                              TRISC 008E                              TX_PR 0056                             ADCON0 009D  
                           ADCON1 009E                             ADRESH 009C                             ADRESL 009B                             CCPR1H 0292  
                           CCPR1L 0291                             ENDIF1 0070                             ENDIF2 0070                             ENDIF4 0042  
                           ENDIF5 02DA                             ANSELA 018C                             ENDIF6 020D                             ANSELB 018D  
                           ENDIF7 0212                             ANSELC 018E                             ENDIF8 0217                             ENDIF9 021C  
                           RC5PPS 0EA5                             ODCONC 028E                             READAD 003A                             HPWM27 00E2  
                           HPWM28 00E3                             OSCCON 0099                             STATUS 0003                       FN_READAD108 0239  
                      D10US_START 00C4                            CM1CON0 0111                            CM2CON0 0113                            DELAY_S 00DA  
                          CCPTMRS 029E                            ENDIF10 0221                            ENDIF11 0257                            ENDIF12 025C  
                          ENDIF20 0142                            ENDIF13 0261                            ENDIF30 034F                            ENDIF14 0266  
                          ENDIF31 0362                            ENDIF15 026B                            ENDIF23 0160                            ENDIF32 0395  
                          ENDIF24 0190                            ENDIF16 0177                            ENDIF33 03B4                            ENDIF25 0198  
                          ENDIF17 019A                            ENDIF26 01AE                            ENDIF18 0122                            ENDIF27 01BA  
                          ENDIF19 0132                            ENDIF28 03E5                            ELSE2_1 006A                            ELSE5_1 02D8  
                       ADREADPORT 0022                            INITPPS 01BC                            INITPWM 01C1                            INITSYS 01DB  
                          PWM3DCH 0618                            PWM3DCL 0617                            PWM3CON 0619                            PWMFREQ 0032  
                          PWMDUTY 002F                         DELAY_10US 00C4                         DELAYTEMP2 0071                    SYSREADAD10WORD 003B  
                    SYSDIV32START 0397                      SYSDIV16START 0351                   PRX_TEMP_CACHE_E 002B                   PRX_TEMP_CACHE_H 0029  
                 PRX_TEMP_CACHE_U 002A                      CALCULATEDUTY 0077                         READAD10_H 003C                  SYSCOMPLESSTHAN32 0320  
                SYSCOMPLESSTHAN16 0311                      SYSDIVMULTA_H 0078                      SYSDIVMULTB_H 007C                      SYSDIVMULTX_H 0073  
                       READMTOUCH 0288                         FN_READAD6 01EF                           DELAYUS0 00C6                           DELAYUS1 02B8  
                         DELAY_MS 00CC                         SCLT32TRUE 0337                         SCLT16TRUE 031E                         HPWMUPDATE 019C  
                       SAVEADCON0 003D                           ELSE24_1 018E                           ELSE16_1 016F                           ELSE25_1 0196  
                         T2CLKCON 001E                      SYSREADADBYTE 003A                         SAVEANSELC 003E                     PRX_TEMP_CACHE 0028  
                       SAVEODCONC 0040                           READAD10 003B                           DS_START 00DA                  SYSLONGDIVMULTA_E 0045  
                SYSLONGDIVMULTA_H 0043                  SYSLONGDIVMULTB_E 0049                  SYSLONGDIVMULTB_H 0047                  SYSLONGDIVMULTA_U 0044  
                SYSLONGDIVMULTB_U 0048                           SAVELATC 003F                  SYSLONGDIVMULTX_E 004D                  SYSLONGDIVMULTX_H 004B  
                SYSLONGDIVMULTX_U 004C                           RESETVEC 0000                    SYSLONGDIVMULTA 0042                    SYSLONGDIVMULTB 0046  
                  SYSLONGDIVMULTX 004A                  PWMUPDATE_CCPMODE 01AE                        CCPCONCACHE 0023                      SYSSELECTEND1 01FF  
                    SYSSELECTEND2 0249                      SYSSELECTEND3 0162                     ADCVALUEWORD_H 0021                           PRX_TEMP 0024  
    PWMUPDATE_HARDWAREMODEPWMCCP1 01AE      PWMUPDATE_HARDWAREMODEPWMCCP3 01BA                         PWMCHANNEL 002C                           SYSTEMP1 004F  
                         SYSTEMP2 0053                           SYSTEMP3 0054                    SYSSELECT1CASE1 01F1                    SYSSELECT1CASE2 01F9  
                  SYSSELECT2CASE1 023B                    SYSSELECT2CASE2 0243                    SYSSELECT3CASE1 0142                         PWMFREQOLD 0034  
                    SYSWAITTEMPMS 0072                      SYSWAITTEMPUS 0075                         PRX_TEMP_E 0027                         PRX_TEMP_H 0025  
                       PRX_TEMP_U 0026                         SYSDIVLOOP 0074                         SYSTEMP1_E 0052                         SYSTEMP1_H 0050  
                       SYSTEMP1_U 0051                      BASPROGRAMEND 0075                       PWMDIRECTION 002D                   TENBITPMWSECTION 0177  
                     PWMDUTYVALUE 0031                     SETPWMDUTYCODE 01DA                  SYSREPEATLOOPEND1 00A3                  SYSREPEATLOOPEND2 00C3  
                  SYSWAITTEMP10US 0075                    SYSWAITTEMPMS_H 0073                    SYSWAITTEMPUS_H 0076                     SYSCOMPEQUAL32 02FE  
                   SYSCOMPEQUAL16 02F3                       ADCVALUEWORD 0020                          DELAYTEMP 0070                          DMS_INNER 00D1  
                        DMS_OUTER 00CF                          DMS_START 00CD                       SYSCOMPEQUAL 02ED                       SYSDOLOOP_E1 0075  
                     SYSDOLOOP_S1 0037            STARTOFFIXEDPWMMODECODE 01DA         PWMUPDATE_HARDWAREMODEPWM1 01A1         PWMUPDATE_HARDWAREMODEPWM3 01A1  
                        MUL32LOOP 03DB                       SYSBYTETEMPA 0075                       SYSBYTETEMPB 0079                       SYSBYTETEMPX 0070  
                        SAVETRISC 0041                       SYSLONGTEMPA 0075                       SYSLONGTEMPB 0079                       SYSLONGTEMPX 0070  
                   SYSLONGTEMPA_E 0078                     SYSLONGTEMPA_H 0076                     SYSLONGTEMPB_E 007C                     SYSLONGTEMPB_H 007A  
                   SYSLONGTEMPA_U 0077                     SYSLONGTEMPB_U 007B                     SYSLONGTEMPX_E 0073                     SYSLONGTEMPX_H 0071  
                   SYSLONGTEMPX_U 0072                          PWMFREQ_H 0033                          PWMDUTY_H 0030                     SYSREPEATLOOP1 009D  
                   SYSREPEATLOOP2 00BD                       SYSWAITLOOP1 02BD                       SYSWAITLOOP2 022A                       SYSWAITLOOP3 0274  
                   SYSREPEATTEMP1 004E                       SYSWAITTEMPS 0074                    BASPROGRAMSTART 0005                       SYSMULTSUB32 03C7  
                     SYSWORDTEMPA 0075                       SYSWORDTEMPB 0079                       SYSWORDTEMPX 0070                     PWMDIRECTION_H 002E  
                      PWMTIMEROLD 0039                  SYSREADAD10WORD_H 003C                        SYSDIVSUB32 036D                        SYSDIVSUB16 0339  
                      SYSDIVMULTA 0077                        SYSDIVMULTB 007B                        SYSDIVMULTX 0072  LEGACY_STARTOFFIXEDCCPPWMMODECODE 01C3  
                   SYSWORDTEMPA_H 0076                     SYSWORDTEMPB_H 007A                     SYSWORDTEMPX_H 0071                  _PWMTIMERSELECTED 0057  
                  PWMSETCOUNTER_H 0038                    PWMRESOLUTION_H 0036                      PWMSETCOUNTER 0037                      PWMRESOLUTION 0035  
