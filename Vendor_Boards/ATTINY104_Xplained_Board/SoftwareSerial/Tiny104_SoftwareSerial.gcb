'''A demonstration program for GCBASIC
'''---------------------------------------------------------------------------------
''' This program shows how to use software serial.
'''
'''
'''@author  Evan Venn
'''@licence GPL
'''@version 1.0
'''@date    03/07/2020
'''********************************************************************************

/*
Diagram Author : Ardunaut
                 __________
           VCC--|1       14|--GND (TPI CLK)
           PA0--|2       13|--PB3 (CDC TX) -->USART_Transmit()
(TPI DATA) PA1--|3       12|--PB2 (CDC RX) <--USART_Receive()
   (RESET) PA2--|4       11|--PB1 (BUTTON)
           PA3--|5       10|--PB0
           PA4--|6        9|--PA7
     (LED) PA5--|7        8|--PA6
                \__________/
        Atmel ATtiny104 Xplained Nano
*/


#chip  TINY104, 8
#option Explicit


  ; Start of board specific configuration

  'Adjust Oscillator frequency to ensure operation of Serial, if required
  OSCCAL = OSCCAL - 5

  #Define SWITCH  portb.1
  #Define LED     porta.5

  'Set Internal Pullup for SWITCH port
  PUEB.PORTB1 = 1
  'Set direction of Switch
  Dir SWITCH in

  'Use Volatile to ensure the compiler does not try to optimize the code
  #option Volatile LED
  'Set direction of LED
  Dir LED out

  ; End of board specific configuration

  #include <softserial.h>
  ; ----- Config Serial UART :
  #define SER1_BAUD 9600     ; baudrate must be defined - this was intended to be 9600 but the internal clock is SO bad.. I had to adjust the BPS to 9500
  #define SER1_DATABITS 8    ; databits optional (default = 8)
  #define SER1_STOPBITS 1    ; stopbits optional (default = 1)
  #define SER1_INVERT Off    ; inverted polarity optional (default = Off)
  ; Config I/O ports for transmitting:
  #define SER1_TXPORT PORTB  ; I/O port (without .bit) must be defined
  #define SER1_TXPIN 2       ; portbit  must be defined


; ----- Variables
    Dim StringLenByte, RecByte  As Byte

; ----- Main body of program commences here.

    wait 3 s      'To give you time to connect the terminal

    Ser1Send 1
    Ser1Send 10   'new line in Terminal
    Ser1Send 13
    Ser1Send 10   'new line in Terminal
    Ser1Send 13

    for RecByte = 1 to 31
     ReadTable Strings, RecByte, STxDataByte
     Ser1Send STxDataByte
    next
    Ser1Send 10   'new line in Terminal
    Ser1Send 13

    for RecByte = 1 to 29
     ReadTable String2, RecByte, STxDataByte
     Ser1Send STxDataByte
    next
    Ser1Send 10   'new line in Terminal
    Ser1Send 13

    REM - enable to show constraint     HSerPrint "Hello this is a string"

    table Strings
    87,101,108,99,111,109,101,32,116,111,32,71,114,101,97,116,32,67,111,119,32,66,65,83,73,67,32,50,48,50,48
    end table

    table String2
    84,104,105,115,32,105,115,32,117,115,105,110,103,32,83,111,102,116,119,97,114,101,32,83,101,114,105,97,108
    end table

    Do

        wait 100 ms
        Ser1Send "."
        LED = ! LED

    Loop
