'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the T6963 LCD and GLCD capabilities.
'''This program will draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    3.1.19
'''********************************************************************************

#CHIP 18F47K42,32
#OPTION Explicit

#INCLUDE <glcd.h>
#DEFINE GLCD_TYPE GLCD_TYPE_T6963_64


'***********************************************************************************************
'define the connectivity - the 8bit port
'Library support contigous 8-bit port
#DEFINE GLCD_DATA_PORT PORTD

'  or
'  #define GLCD_DB0      PORTD.0            'chip specific configuration where the ibrary supports 8-bit port defined via 8 constants
'  #define GLCD_DB1      PORTD.1            'chip specific configuration
'  #define GLCD_DB2      PORTD.2            'chip specific configuration
'  #define GLCD_DB3      PORTD.3            'chip specific configuration
'  #define GLCD_DB4      PORTD.4            'chip specific configuration
'  #define GLCD_DB5      PORTD.5            'chip specific configuration
'  #define GLCD_DB6      PORTD.6            'chip specific configuration
'  #define GLCD_DB7      PORTD.7            'chip specific configuration

'Command or Data conrol line port
#DEFINE GLCD_CD        porte.0
'Read control line  port
#DEFINE GLCD_RD        PORTe.1
'Write control line port
#DEFINE GLCD_WR        PORTe.2

'Reset port
#DEFINE GLCD_RESET     PORTc.2
'FS port
#DEFINE GLCD_FS        PORTc.1
'Chip Enable (Active Low)
#DEFINE GLCD_CS        PORTc.0

'FS1 Font Select port. 6x8 font: FS1="High"=1 8x8 font FS1="Low"=0 for GLCD_FS_SELECT
#DEFINE GLCD_FS_SELECT 1

'***********************************************************************************************
'*
'* Note    :   The T6963 controller's RAM address space from $0000 - $7FFF, total 32kbyte RAM, or it could be 64kbyte RAM best check!!
'*
'***********************************************************************************************
'This is specific to the GLCD display
#DEFINE TEXT_HOME_ADDR      0x0000
'This is specific to the GLCD display
#DEFINE GRH_HOME_ADDR       0x3FFF
'This is specific to the GLCD display
#DEFINE CG_HOME_ADDR        0x77FF
'Set column number to be 40 , 32, 30 etc.                 This is specific to the GLCD display
#DEFINE COLUMN              40
'MAX_ROW_PIXEL the physical matrix length (y direction)   This is specific to the GLCD display
#DEFINE MAX_ROW_PIXEL       64
'MAX_COL_PIXEL the physical matrix width (x direction)    This is specific to the GLCD display
#DEFINE MAX_COL_PIXEL       240

'***********************************************************************************************
'* End of configuration
'***********************************************************************************************

'Start of demonstration main program

Do Forever

    GLCDPrintLargeFont ( 0, 0, "WG24064A-TMI-TZ#")
    GLCDPrintLargeFont ( 0, 20, "Feb 2019")
    Wait 2 s

    CLS

    Locate 5, 3
    Print "40cols x 8rows character mode"
    Locate 6, 3
    Print "Mixed mode LCD and GLCD!!"
    Locate 7, 32
    Print "Anobium"
    Wait 4 s
    CLS
    GLCDCLS

    GLCDPrintLargeFont ( 0, 0, "WG24064A-TMI-TZ#")
    GLCDPrintLargeFont ( 0, 20, "LCD Capability")
    Wait 4 s
    CLS
    GLCDCLS

    // ----- Main body of program commences here.
    Repeat 1
        CLS
        Print "START TEST"
        Locate 1,12
        Print "Version 0x"
        LCDHex ( 1, LeadingZeroActive )
        Locate 1,0
        Print "DISPLAY ON"
        Wait 2 s

        CLS
        Locate 0,0
        Print "Cursor ON"
        Locate 1,0
        LCDCursor CURSORON
        Wait 1 s

        CLS
        LCDCursor CURSOROFF
        Locate 0,0
        Print "Cursor OFF"
        Wait 1 s

        CLS
        Locate 0,0
        Print "FLASH ON"
        Locate 1,0
        LCDCursor FLASHON
        Wait 1 s

        CLS
        Locate 0,0
        Print "FLASH OFF"
        LCDCursor FLASHOFF
        Wait 1 sec

        Locate 0,0
        Print "CURSR & FLSH ON"
        Locate 1,0
        LCDCursor CURSORON
        LCDCursor FLASHON, 8
        Wait 1 sec

        Locate 0,0
        Print "CURSR & FLSH OFF"
        Locate 1,0
        LCDCursor CURSOROFF
        LCDCursor FLASHOFF
        Wait 1 sec

        CLS
        Locate 0,4
        Print "Flashing"
        Locate 1,4
        Print "Display"
        Wait 500 ms

        Repeat 10
            LCDCursor LCDOFF
            Wait 500 ms
            LCDCursor LCDON
            Wait 500 ms
        End Repeat

        CLS
        Locate 0,0
        Print "DISPLAY OFF"
        Locate 1,0
        Print "FOR 2 SEC"
        Wait 2 SEC
        LCDCursor LCDOFF
        Wait 2 s

        CLS
        Dim Xposition, Yposition As Byte
        Locate 20, 4
        Print "Put ( row, column, ascii character )"
        For Yposition = 0 To MAX_ROWS -1
            Put Yposition, 0, "*"
            Wait 10 ms
        Next
        For Xposition = 0 To MAX_COLUMNS -1
            Put 0, Xposition ,"*"
            Put MAX_ROWS -1, Xposition, "*"
            Wait 10 ms
        Next
        For Yposition = 0 To MAX_ROWS -1
            Put Yposition, MAX_COLUMNS -1 , "*"
            Wait 10 ms
        Next

        Wait 2 s

        CLS
        Locate 0,0
        LCDCursor LCDON
        Print "END TEST"
        Wait 1 s

    End Repeat


GLCDTest:
    '#DEFINE GLCD_OLED_FONT
    CLS
    GLCDCLS
    GLCDPrintLargeFont ( 0, 0, "WG24064A-TMI-TZ#")
    GLCDPrintLargeFont ( 0, 20, "GLCD Capability")
    Wait 2 s
    GLCDPrint 50, 40, "240 * 64  pixels mode"

    GLCDPrint 50, 50, "Full GCB GLCD capable"
    Wait 4 s
    CLS
    GLCDCLS


    Dim BYTENUMBER, CCOUNT As Byte

    CCount = 0
    Dim longNumber As Long
    ' max value = 4294967296
    longNumber = 4294967290
    Dim wordNumber As Word
    Dim outString As String
    wordNumber = 0
    byteNumber = 0


    ' Prepare the static components of the screen
    ' Print some text
    GLCDPrint ( 2,   0, "PrintStr")
    ' Print some more text
    GLCDPrint ( 64,  0, "LAT@")
    ' Print chip speed
    GLCDPrint ( 88,  0, ChipMHz)
    ' Print some text
    GLCDPrint ( 100, 0, "Mhz")
    ' Draw some text
    GLCDDrawString( 2,8,"DrawStr")
    ' Draw a box
    Box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1
    ' Draw a box
    Box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1
    ' Draw a circle
    Circle( 44,41,15)
    ' Draw a line
    Line 64,31,0,31

    Repeat 1
        For CCount = 32 To 127
            ' Print a HEX string
            GLCDPrint ( 64 ,  36,  Hex(longNumber_E ) )
            ' Print a HEX string
            GLCDPrint ( 76 ,  36,  Hex(longNumber_U ) )
            ' Print a HEX string
            GLCDPrint ( 88 ,  36,  Hex(longNumber_H ) )
            ' Print a HEX string
            GLCDPrint ( 100 ,  36, Hex(longNumber   ) )
            ' Print a HEX string
            GLCDPrint ( 112 ,  36, "h" )


            ' Print a padded string
            GLCDPrint ( 64 ,  44, Pad(Str(wordNumber), 5 ) )
            ' Print a padded string
            GLCDPrint ( 64 ,  52, Pad(Str(byteNumber), 3 ) )


            ' Draw a Box
            FilledBox (46,9,56,19,0)
            Box (46,9,56,19)
            ' Draw a character
            GLCDDrawChar(49, 10, CCount )
            ' Prepare a string
            outString = Str( CCount )
            ' Draw a string
            GLCDDrawString(64, 9, Pad(outString,3) )

            ' Draw a filled box
            FilledBox 3,43,11,51, wordNumber.1

            ' Draw a filled box
            FilledCircle( 44,41,9, longNumber.3)
            ' Draw a line
            Line 0,63,64,31

            ' Do some simple maths
            longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
        Next
    End Repeat

    CLS
    GLCDCLS
    GLCDPrintLargeFont ( 0, 0, "WG24064A-TMI-TZ#")
    GLCDPrintLargeFont ( 0, 40, "Anobium :-)")

    Wait 5 s
    CLS
    GLCDCLS

Loop
End
