'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates shows one LCD (16x2 or a  16x4) being driven using a LCD I2C adapters.
'''This uses the GCB hardware implementation of IC2 for Microchip devices.
'''Two types are supported as shown below.  This example is using "#define LCD_IO 10"
'''- Set LCD_I0 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter.
'''- Set LCD_I0 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip.
'''- Use the following to address a diferent I2C device.
'''-     #define LCD_I2C_Address 0x4e            'This is the default value, change as appropiate
'''@author   EvanV
'''@licence  GPL
'''@version  1.0a
'''@date     29.07.2016
'''********************************************************************************


#CHIP 16f18326,32


'Set the PPS of the PWM and the RS232 ports.
'Set the PPS of the PWM and the RS232 ports.
'Set the PPS for this solution.
#STARTUP InitPPS, 85

Sub InitPPS
    UNLOCKPPS
    'Pin RC5 source is an input for RX
    RXPPS  = 0x15
    'Pin RC4 source is TX/CK
    RC4PPS = 0x14

    'RA2->MSSP:SDA;
    RA2PPS = 0x0019
    'RA2->MSSP:SDA;
    SSP1DATPPS = 0x0002
    'RA4->MSSP:SCL;
    SSP1CLKPPS = 0x0004
    'RA4->MSSP:SCL;
    RA4PPS = 0x0018
    LOCKPPS
End Sub

#DEFINE USART_BAUD_RATE 19200
#DEFINE USART_TX_BLOCKING




' ----- Define Hardware settings for HWI2C2
' Define I2C settings - CHANGE PORTS if required for your specific device.
#DEFINE HI2C_BAUD_RATE 400
#DEFINE HI2C_DATA PORTA.3
#DEFINE HI2C_CLOCK PORTA.4
'Initialise I2C Master
'I2C pins need to be input for SSP module
Dir HI2C_DATA In
Dir HI2C_CLOCK In
'MASTER Second Port
HI2CMode Master

'''Set up LCD
#DEFINE LCD_IO 10

'You may need to use SLOW or MEDIUM if your LCD is a slower device.
#DEFINE LCD_SPEED FAST
'You may need to invert these states. Dependent of LCD I2C adapter.
#DEFINE LCD_Backlight_On_State  1
#DEFINE LCD_Backlight_Off_State 0

' ----- Constants
'None required beyond the scope of the hardware.

' ----- Quick Command Reference:

'''Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
'''Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip

// ----- Main body of program commences here.
CLS
Print "Great Cow BASIC"
Locate 1,0
Print "16F18326 i2C/LCD"
Wait 3 s

Do Forever
    CLS
    Wait 3 s
    Print "START TEST"
    Locate 1,0
    Print "DISPLAY ON"
    Wait 3 s

    CLS
    Locate 0,0
    Print "Cursor ON"
    Locate 1,0
    LCDCursor CURSORON
    Wait 3 s
    CLS
    LCDCursor CURSOROFF
    Locate 0,0
    Print "Cursor OFF"
    Wait 3 s
    CLS
    Locate 0,0
    Print "FLASH ON"
    Locate 1,0
    LCDCursor FLASHON
    Wait 3 s

    CLS
    Locate 0,0
    Print "FLASH OFF"
    LCDCursor FLASHOFF
    Wait 3 sec

    Locate 0,0
    Print "CURSR & FLSH ON"
    Locate 1,0
    LCDCursor CURSORON
    LCDCursor FLASHON
    Wait 3 sec

    Locate 0,0
    Print "CURSR & FLSH OFF"
    Locate 1,0
    LCDCursor CURSOROFF
    LCDCursor FLASHOFF
    Wait 3 sec

    CLS
    Locate 0,4
    Print "Flashing"
    Locate 1,4
    Print "Display"
    Wait 500 ms

    Repeat 10
        LCDCursor LCDOFF
        Wait 500 ms
        LCDCursor LCDON
        Wait 500 ms
    End Repeat
    CLS
    Locate 0,0
    Print "DISPLAY & BACKL."
    Locate 1,0
    Print "FOR 5 SEC"
    Wait 2 SEC
    LCDCursor LCDOFF
    LCDBacklight Off
    Wait 5 s
    LCDBacklight On
    CLS
    Locate 0,0
    LCDCursor LCDON
    Print "END TEST"
    Wait 3 s
Loop


End
