''' A demonstration program for GCBASIC.
'''
'''
''' Pulse-Width Modulation (PWM) is a scheme that provides power to a load by switching
''' quickly between fully on and fully off states. The PWM signal resembles a square wave
''' where the high portion of the signal is considered the on state and the low portion of
''' the signal is considered the off state. The high portion, also known as the pulse width,
''' can vary in time and is defined in steps. A longer, high on time will illuminate the LED
''' brighter. The frequency or period of the PWM does not change. A larger number of
''' steps applied, which lengthens the pulse width, also supplies more power to the load.
''' Lowering the number of steps applied, which shortens the pulse width, supplies less
''' power. The PWM period is defined as the duration of one complete cycle or the total
''' amount of on and off time combined.
'''
''' This demonstation shows a how the changing PWM values via connnector RC1
'''
'''
'''   You need four LEDs connnect to portc.1 connected via a suitable resistor.
'''  ************************************************************************************************************************************************************************************
'''
'''  PIC: 16F18326
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''
'''@author   EvanV
'''@licence  GPL
'''@version  1.0
'''@date     29.07.2016




#CHIP 16F18326, 32
#OPTION Explicit


'Set the PPS for this solution.
#STARTUP InitPPS, 85

Sub InitPPS
    UNLOCKPPS
    'Setting the port in PPS VERY important... CCP will not work if you do not set correctly
    'RC1->CCP4:CCP4;
    RC1PPS = 0x0F
    '----------------------------------------------------------------------
    'Pin RC5 source is an input for RX
    RXPPS  = 0x15
    'Pin RC4 source is TX/CK
    RC4PPS = 0x14
    '----------------------------------------------------------------------
    LOCKPPS
End Sub

#DEFINE USART_BAUD_RATE 19200
#DEFINE USART_TX_BLOCKING

'This will optimise the CCP/PWM code... try removing these defines and look at the code size!
' This is not used, so, optimise
#DEFINE USE_HPWMCCP1 FALSE
' This is not used, so, optimise
#DEFINE USE_HPWMCCP2 FALSE
' This is not used, so, optimise
#DEFINE USE_HPWMCCP3 FALSE
' This is used, so, include in the compiled code
#DEFINE USE_HPWMCCP4 TRUE

'Setting the port an output is VERY important... LED will not work if you do not set as an output.
' CCP4
Dir portC.1 Out

Dim BRIGHT As Byte


Do Forever
    For Bright = 0 To 255
        HPWM 4, 40, Bright
        Wait 25 ms
    Next
    For Bright = 255 To 0 Step -1
        HPWM 4, 40, Bright
        Wait 25 ms
    Next

Loop
