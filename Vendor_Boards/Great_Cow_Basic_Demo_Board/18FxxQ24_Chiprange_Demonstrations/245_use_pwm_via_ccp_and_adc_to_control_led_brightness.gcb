/*
    This demonstration flashes an LED to show the use of CCP PWM operations

    Uses variable mode PWM operations


    ************************************************************************
    @author  EvanV
    @licence GPL
    @version 1.00
    @date    12-12-2024
    */

//  ----- Configuration
// Chip Settings.
#CHIP 18F26Q24
#OPTION Explicit

    // PIC PPS Tool version: 0.0.6.5
    #define PPSToolPart 18F26Q24
    #startup InitPPS, 85
    Sub InitPPS
            
            // Module: CCP1
            RB0PPS = 0x000D    // CCP1 > RB0
            CCP1PPS = 0x0008    // RB0 > CCP1 (bi-directional)
            RB1PPS = 0x000D    // CCP1 > RB1
            CCP1PPS = 0x0009    // RB1 > CCP1 (bi-directional)
            RB2PPS = 0x000D    // CCP1 > RB2
            CCP1PPS = 0x000A    // RB2 > CCP1 (bi-directional)
            RB3PPS = 0x000D    // CCP1 > RB3
            CCP1PPS = 0x000B    // RB3 > CCP1 (bi-directional)
            // Module: UART pin directions
            Dir PORTC.6 Out    ' Make TX1 pin an output
            // Module: UART1
            RC6PPS = 0x0015    // TX1 > RC6
        
        End Sub
    // Add this code segment to your GCBASIC source program

    #DEFINE USART_BAUD_RATE 9600
    #DEFINE USART_TX_BLOCKING
    #DEFINE USART_DELAY OFF
    
/*
    Hardware
    -------------------PORTA----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    ----------------SW----------ADC-- 
    ----------------------------------------

    -------------------PORTB----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    ----------------LED-LED-LED-LED--
    ----------------------------------------
    
    ------------------PORTC-----------------
    Bit#:  -X---6---5---4---3---2---1---0---
    IO:    -^--TX---------------------------
    -----VDDIO2----------------------------- You must apply correct Voltage

    -------------------PORTE----------------
    Bit#:  -----------------3---------------
    IO:---------------------SW-------------- INTMCLR or EXTMCLR
    
  */

    // Define constants to make things easier. We can reuse a constant at any time.
    #DEFINE LEDD0 PORTB.0
    #DEFINE LEDD1 PORTB.1
    #DEFINE LEDD2 PORTB.2
    #DEFINE LEDD3 PORTB.3

    #DEFINE LEDPORT LATB

    Dir     LEDD0 Out
    Dir     LEDD1 Out
    Dir     LEDD2 Out
    Dir     LEDD3 Out

    #DEFINE POTENTIOMETER PORTA.0
    //This is the PORTA.0 port
    Dir POTENTIOMETER In

    #DEFINE RSTBUTTON     PORTE.3
    Dir     RSTBUTTON     In  // this is set automatically - and, you cannot set as an output

    #DEFINE SWITCHIN      PORTA.3
    Dir     SWITCHIN      In
    #DEFINE DOWN          1

    #DEFINE RSTBUTTON     PORTE.3
    Dir     RSTBUTTON     In  // this is set automatically - and, you cannot set as an output

//*****************************************************************************************************
// Main program commences here.. everything before this is setup for the board.

    HPWM 1, 38, 127

    Do

        // HPWM CCPchannel, frequency, duty cycle
            // Uncomment to use ADC to change Duty 
                Dim ADCVal as Byte
                ADCVal = ReadAD( ANA0 )
                Wait 10 ms
                HPWM 1, 38, ADCVal

    Loop



/* GCBASIC Optimisation file - this will optimise PWM operations by disabling the PWM operations on the PWM channel and Timer that is set to FALSE
                             to enable PWM and Timer operations set to FALSE

           Optimise CCP/PWM    
*/
           #DEFINE USE_HPWMCCP1 TRUE
           #DEFINE USE_HPWMCCP2 FALSE
           #DEFINE USE_HPWMCCP4 FALSE
           #DEFINE USE_HPWMCCP5 FALSE

//         Optimise PWM
           #DEFINE USE_HPWM1 FALSE
           #DEFINE USE_HPWM2 FALSE
           #DEFINE USE_HPWM3 FALSE
           #DEFINE USE_HPWM4 FALSE
           #DEFINE USE_HPWM5 FALSE
           #DEFINE USE_HPWM6 FALSE
           #DEFINE USE_HPWM7 FALSE
           #DEFINE USE_HPWM8 FALSE

//         Optimise Timers associated with PWM operations
           #DEFINE USE_HPWM_TIMER2 TRUE
           #DEFINE USE_HPWM_TIMER4 FALSE
           #DEFINE USE_HPWM_TIMER6 FALSE
