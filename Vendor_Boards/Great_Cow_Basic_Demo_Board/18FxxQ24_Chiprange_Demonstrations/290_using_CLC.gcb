/*
    This demonstration flashes an LED to show the use of PIN IO operation but with no code in the main loop using CLC.

    The Microchip Configurable Logic Cell (CLC) is a built-in feature in PIC18F microcontrollers that allows users 
    to implement custom logic functions without CPU intervention.
    
    It enables the combination of up to 16 input signals using configurable gates, which are then reduced to four logic lines 
    driving one of eight selectable single-output logic functions. 
    
    This feature is useful for tasks like data signal modulation, LED dimming, and creating custom logic signals

    ************************************************************************
    @author  EvanV
    @licence GPL
    @version 1.00
    @date    15.12.2024
    */
' ----- Configuration

#chip 18F26Q24
#option explicit

  // PPS hand written as at the time of creation MPLAB-X does not support Q24
    /**
    PPS registers
    */
    CLCIN0PPS = 0x03 //RA3->CLC1:CLCIN0
    RB0PPS = 0x03 //CLC1:CLC1OUT
    // RB1PPS = 0x03 //CLC1:CLC1OUT
    // RB2PPS = 0x03 //CLC1:CLC1OUT
    RB3PPS = 0x03 //CLC1:CLC1OUT

  // CLC hand written as at the time of creation MPLAB-X does not support Q24
    /**
    CLC1_Initialize section
    */
    // SLCT 0x2
    CLCSELECT = 0x2
    // LCG1POL not_inverted; LCG2POL not_inverted; LCG3POL not_inverted; LCG4POL not_inverted; LCPOL inverted
    CLCnPOL = 0x80
    // LCD1S CLCIN0 (CLCIN0PPS)
    CLCnSEL0 = 0x0
    // LCD2S CLCIN0 (CLCIN0PPS)
    CLCnSEL1 = 0x0
    // LCD3S CLCIN0 (CLCIN0PPS)
    CLCnSEL2 = 0x0
    // LCD4S CLCIN0 (CLCIN0PPS)
    CLCnSEL3 = 0x0
    // LCG1D1N disabled; LCG1D1T enabled; LCG1D2N disabled; LCG1D2T disabled; LCG1D3N disabled; LCG1D3T disabled; LCG1D4N disabled; LCG1D4T disabled
    CLCnGLS0 = 0x2
    // LCG2D1N disabled; LCG2D1T disabled; LCG2D2N disabled; LCG2D2T disabled; LCG2D3N disabled; LCG2D3T disabled; LCG2D4N disabled; LCG2D4T disabled
    CLCnGLS1 = 0x0
    // LCG3D1N disabled; LCG3D1T disabled; LCG3D2N disabled; LCG3D2T disabled; LCG3D3N disabled; LCG3D3T disabled; LCG3D4N disabled; LCG3D4T disabled
    CLCnGLS2 = 0x0
    // LCG4D1N disabled; LCG4D1T disabled; LCG4D2N disabled; LCG4D2T disabled; LCG4D3N disabled; LCG4D3T disabled; LCG4D4N disabled; LCG4D4T disabled
    CLCnGLS3 = 0x0
    // LCOUT 0x00
    CLCDATA = 0x0
    // LCMODE OR-XOR; LCINTN disabled; LCINTP disabled; LCEN enabled
    CLCnCON = 0x81

    // Define constants to make things easier. We can reuse a constant at any time.
    #DEFINE LEDD0 PORTB.0
    #DEFINE LEDD1 PORTB.1
    #DEFINE LEDD2 PORTB.2
    #DEFINE LEDD3 PORTB.3

    #DEFINE LEDPORT LATB

    Dir     LEDD0 Out
    Dir     LEDD1 Out
    Dir     LEDD2 Out
    Dir     LEDD3 Out

    #DEFINE POTENTIOMETER PORTA.0
    //This is the PORTA.0 port
    Dir POTENTIOMETER In

    #DEFINE RSTBUTTON     PORTE.3
    Dir     RSTBUTTON     In  // this is set automatically - and, you cannot set as an output

    #DEFINE SWITCHIN      PORTA.3
    Dir     SWITCHIN      In
    #DEFINE DOWN          1

    #DEFINE RSTBUTTON     PORTE.3
    Dir     RSTBUTTON     In  // this is set automatically - and, you cannot set as an output

// Main program

Do
  // Look no code....no interrupt... just CLC magic
Loop