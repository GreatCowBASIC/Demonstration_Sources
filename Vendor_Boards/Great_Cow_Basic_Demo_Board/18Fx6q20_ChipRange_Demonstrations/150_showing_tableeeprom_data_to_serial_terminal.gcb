/*
    This demonstration shows the use of EEProm values created from a Table..

    This will show the value of the EEPROM on the serial Terminal.

    ************************************************************************
    @author  EvanV
    @licence GPL
    @version 1.00
    @date    04-02-2024
*/
//  ----- Configuration

// Chip Settings.
#CHIP 18F16Q20
#OPTION Explicit

    #DEFINE USART_BAUD_RATE 9600
    #DEFINE USART_TX_BLOCKING
    #DEFINE USART_DELAY OFF

    // PIC PPS Tool version: 0.0.6.5
    
    #startup InitPPS, 85
    #define PPSToolPart 18F16Q20

    Sub InitPPS
            
            // Module: UART pin directions
            Dir PORTB.7 Out    //  Make TX1 pin an output
            // Module: UART1
            RB7PPS = 0x0013    // TX1 > RB7
        
        End Sub
    // Add this code segment to your GCBASIC source program


/*
    Hardware
    -------------------PORTA----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    -----------------SW---------ADC-- 
    -----------------------------------------


    -------------------PORTB----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    TX-------------------------------
    ----------------------------------------

    ------------------PORTC-----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    LED-LED-LED-LED------------------
    ----------------------------------------
  */
  
// Define constants to make things easier. We can reuse these at any time.
    #DEFINE LEDPORT LATC
    #DEFINE LEDD7 PORTC.7
    #DEFINE LEDD6 PORTC.6
    #DEFINE LEDD5 PORTC.5
    #DEFINE LEDD4 PORTC.4

// Set the ports as an output
    Dir LEDD7 Out
    Dir LEDD6 Out
    Dir LEDD5 Out
    Dir LEDD4 Out

    #DEFINE POTENTIOMETER PORTA.0
    // This is the PORTA.0 port
    Dir POTENTIOMETER In

    #DEFINE SWITCHIN      PORTA.3
    Dir     SWITCHIN      In
    #DEFINE DOWN          0

// *****************************************************************************************************
// Main program commences here.. everything before this is setup for the board.

    Dim DisplayNewLine, Outdata, Indata  As Byte
    Dim EEPromAddress as Word

    Wait 1 s


    // Read EEPROM items
    ShowEEProm()

    Do
    Loop


    // Table of values to write to EEPROM
    // EEPROM location is specified
    // Subsequent locations will each store a value

    EEPROM TestDataSource 0x10
        0x01
        0x02
        0x03
        0x04
        0x05
        0x06
    End EEPROM

    EEPROM TestDataSource2 0x16
        0x11
        0x12
        0x13
        0x14
        0x15
        0x16
    End EEPROM


Sub ShowEEProm

    HserPrintCRLF 2

    HserPrint "      "
    For EEPromAddress = 0 To 15
        HSerPrint Hex(EEPromAddress)
        HSerPrint " "
    Next

    For EEPromAddress = 0 To ChipEEProm -1
        DisplayNewLine = EEPromAddress % 16
        If DisplayNewLine = 0 Then
            HSerPrintCRLF
            HSerPrint right(Hex(EEPromAddress_H),1)
            HSerPrint Hex(EEPromAddress)
            HSerPrint ": "
        End If
        HSerPrint " "

        // Read EEPROM at specific address
        Indata = 0
        EPRead  ( EEPromAddress, Indata )
        HSerPrint  Hex(Indata)

    Next

End Sub
