'''
''' This demonstration will provide code for raising an event when a port changes.
''' The port that is being set then inspected in PORTA.3. Why? Because we have the switch on that port.
'''
''' When the event happens the LED is toggled.  The LED will toggle when the Signal value is 0.
'''
''' This does not have a proper debounce check, you can add one.
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.00
'''@date    05.11.2024
' ----- Configuration

'Chip Settings.
#CHIP 18F16Q20
#OPTION Explicit

    // Ensure PPS is NOT set
            RC4PPS = 0x00
            CCP1PPS = 0x0
            RC5PPS = 0x00
            CCP1PPS = 0x00
            RC6PPS = 0x00
            CCP1PPS = 0x00
            RC7PPS = 0x00
            CCP1PPS = 0x00

/*
    Hardware
    -------------------PORTA----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    -----------------SW---------ADC-- 
    -----------------------------------------


    -------------------PORTB----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    TX-------------------------------
    ----------------------------------------

    ------------------PORTC-----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    LED-LED-LED-LED------------------
    ----------------------------------------
  */

// Define constants to make things easier. We can reuse these at any time.
    #DEFINE LEDPORT LATC
    #DEFINE LEDD7 PORTC.7
    #DEFINE LEDD6 PORTC.6
    #DEFINE LEDD5 PORTC.5
    #DEFINE LEDD4 PORTC.4

// Set the ports as an output
    Dir LEDD7 Out
    Dir LEDD6 Out
    Dir LEDD5 Out
    Dir LEDD4 Out

    #DEFINE POTENTIOMETER PORTA.0
    // This is the PORTA.0 port
    Dir POTENTIOMETER In

    #DEFINE SWITCHIN      PORTA.3
    Dir     SWITCHIN      In
    #DEFINE DOWN          0

//*****************************************************************************************************
// Main program commences here.. everything before this is setup for the board.

/* Interrupt-on-change enabled on the IOCx pin for a negative-going edge. Associated Status bit 
    and interrupt flag will be set upon detecting an edge. */
IOCAN3 = 1

// Setup the handler
On Interrupt PORTChange  Call InterruptHandler

'Loop forever
Do
    LEDD6 = !LEDD6
    wait 25 ms
Loop


Sub InterruptHandler

    Dim SWState as BIT

    'Save the switch state
    SWState = SWITCHIN

    'Toggle the LED
    LEDD7 = !LEDD7

    'We must clear this specific bit flag in software, the main IOC is cleare by the GCBASIC interrupt handler
    IOCAF3  = 0

End Sub
