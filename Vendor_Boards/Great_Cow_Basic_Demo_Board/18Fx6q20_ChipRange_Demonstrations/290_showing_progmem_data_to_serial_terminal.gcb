'''
'''  This demonstration shows reading PROGMEM on the Serial Terminal.
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.00
'''@date    31.11.2022
' ----- Configuration

#CHIP 18F16Q20
#OPTION Explicit

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.6.1
    'PinManager data: v1.79.0
    'Generated for 18F16Q20
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18F16Q20

    Sub InitPPS

            'Module: UART pin directions
            Dir PORTC.4 Out    ' Make TX1 pin an output
            'Module: UART1
            RB7PPS = 0x13           'RC4->EUSART1:TX1

    End Sub
    'Template comment at the end of the config file


'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:   -------------SDA-SW------SCL-ADC--
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----TX---------LED--LED-LED LED--
''-----------------------------------------



'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING
#DEFINE USART_DELAY 0

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.
' Now assumes Serial Terminal is operational

    Dim  ProgMemAddress as long
    Dim  DataWord as word

    wait 1 s
    HSerPrintCRLF 2

    'We are reading words, so we send the ProgMemAddress address every two bytes (a word).
    for ProgMemAddress = 0x0000 to 0x001F Step 2
    
        'Display the value
        HSerPrint "0x"
        HSerPrint hex(ProgMemAddress_h)
        HSerPrint hex(ProgMemAddress)
        HSerSend 9
        HSerSend 9

        'Read the value of the ProgMem
        PFMRead  ( ProgMemAddress, DataWord )

        'Display the received value
        HSerPrint "0x"
        HSerPrint hex(DataWord_h)
        HSerPrint hex(DataWord)
        HSerPrintCRLF

    Next
    HSerPrintCRLF

    'PFMWrite
    PFMWrite ( 0x3FF8, 0x11 )
    PFMWrite ( 0x3FFC, 0x55AA )

    'We are reading words, so we send the ProgMemAddress address every two bytes (a word).
    for ProgMemAddress = 0x3FF0 to 0x3FFF Step 2

        'Display the value
        HSerPrint "0x"
        HSerPrint hex(ProgMemAddress_h)
        HSerPrint hex(ProgMemAddress)
        HSerSend 9
        HSerSend 9

        'Read the value of the ProgMemAddress
        PFMRead  ( ProgMemAddress, DataWord )


        'Display the received value
        HSerPrint "0x"
        HSerPrint hex(DataWord_h)
        HSerPrint hex(DataWord)
        HSerPrintCRLF

    Next
    HSerPrintCRLF

    do
    loop
