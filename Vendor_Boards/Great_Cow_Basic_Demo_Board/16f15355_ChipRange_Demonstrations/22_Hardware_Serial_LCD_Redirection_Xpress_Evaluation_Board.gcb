''' A demonstration program for GCBASIC.
'''
''' This program redirects the normal LCD output to an ANSI serial terminal.
''' On a suitable test board/setup.
''' It requires the inclusion of the support file "LCD2SerialRedirect.h".
'''
'''
'''   You need four LEDs connnect to PORTC.0, PORTC.1, PORTC.2 and PORTC.3 connected via suitable resistors.
'''  You will to connect a pot to porta.0.  The needs to be connected the supply voltage and 0v using an appropiate method.
'''   You will also need to connect a serial Terminal to PORTC.4.  Using PUTTY.EXE for an excellent terminal program.  Also, you msy need to connect the microcontroller via a TTL converter.
'''  ************************************************************************************************************************************************************************************
'''
'''
'''@author   EvanV
'''@licence  GPL
'''@version  1.0
'''@date     04.12.2016

'''********************************************************************************

; ----- Configuration
  #chip     16f15355
  #option explicit




  #include   <lcd2serialredirect.h>

  ; ----- Define Hardware settings
      'Set the PPS of the RS232 port to USB.
    'Set the PPS for this solution.
  #startup InitPPS, 85

  Sub InitPPS
    UNLOCKPPS
      RX1DTPPS = 0x15     'RC5->EUSART1:RX1;
      RC4PPS = 0x0F     'RC4->EUSART1:TX1;
      LOCKPPS
  End sub

  #define USART_BAUD_RATE 19200
  #define USART_TX_BLOCKING

  ; Required to LCD to Serial redirection
   #define LCD_IO 0

  Dim YPOS, XPOS as Byte

   wait 500 ms

; ----- Main body of program commences here.

    Do Forever

        PRINT chr(7)  ' Bell Character
        CLS
        PRINT "START TEST"

        locate 1,0

        PRINT "DISPLAY ON"
        wait 3 s

        locate 0,0

        for ypos = 0 to 1
            for xpos = 0 to 16
               locate ypos, xpos
               print "*"
               ' flush HSerPrint buffer
               print ""
               wait 100 ms
            next
        next


        CLS
        Locate 0,0
        LCDCURSOR LCDON
        Print "END TEST"
        wait 3 s

    loop
