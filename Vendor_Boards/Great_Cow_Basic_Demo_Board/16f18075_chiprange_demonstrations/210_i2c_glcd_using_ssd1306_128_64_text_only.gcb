'''
'''This demonstration program is a simple GLCD demonstration of the SSD1306 GLCD capabilities.
'''
'''This program is a simple GLCD demonstration of the SSD1306 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The SSD1306 controller a small graphical OLED, suitable for a lot of various projects.
'''The display is 38*35 mm, with an active display surface of 0.96inches, and a 128*64 pixel resolution.
'''The display is easy to interface, using an I2C type of communication.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''
'''This version is compatible will all version of GCBASIC as this demonstration uses Full Memory GLCD mode only.  This can be adapted to Low Memory GLCD mode.
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.01
'''@date    15/09/2022
' ----- Configuration


'Chip Settings.
#CHIP 16F18075
#OPTION Explicit

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.6.2
    'PinManager data: Not available (3)
    'Generated for 16F18075
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 16F18075

    Sub InitPPS

            'Module: EUSART
            RC6PPS = 0x000E    'TX > RC6
            'Module: MSSP1
            SSP1CLKPPS = 0x13;  //RC3->MSSP1:SCL1;
            RC3PPS = 0x15;  //RC3->MSSP1:SCL1;
            SSP1DATPPS = 0x14;  //RC4->MSSP1:SDA1;
            RC4PPS = 0x16;  //RC4->MSSP1:SDA1;

    End Sub
    'Template comment at the end of the config file


'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    --------IN-LED--LED-LED LED -----
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----TX------SDA-SCL--------------
''-----------------------------------------
''

'' ------------------PORTE-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----------------RST--------------
''-----------------------------------------
''

'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDD1 PORTB.1
#DEFINE LEDD2 PORTB.2
#DEFINE LEDD3 PORTB.3
#DEFINE LEDD4 PORTB.4
#DEFINE LEDPORT LATB


Dir     LEDD1         Out
Dir     LEDD2         Out
Dir     LEDD3         Out
Dir     LEDD4         Out

#DEFINE POTENTIOMETER PORTA.0
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTB.5
Dir     SWITCHIN      In

'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING


' Define I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA PORTC.4
#DEFINE HI2C_CLOCK PORTC.3
'Initialise I2C - note for the I2C module the ports need to be set to correct direction
Dir HI2C_DATA In
Dir HI2C_CLOCK In
'Port specific controls may be required - see the datasheet

#INCLUDE <glcd.h>
#DEFINE GLCD_TYPE GLCD_TYPE_SSD1306
#DEFINE GLCD_I2C_Address 0x78

' ----- Define variables

'These constants allow you to change the GLCD memory usage.
#DEFINE GLCD_PROTECTOVERRUN
'These constants allow you to change the GLCD memory usage.
'We have set this demonstration to use only 128bytes of RAM for GLCD operations.
#DEFINE GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
#DEFINE GLCD_TYPE_SSD1306_CHARACTER_MODE_ONLY

' ----- Define variables

Dim BYTENUMBER, CCOUNT As Byte

CCount = 0
Dim longNumber As Long
' max value = 4294967290
longNumber = 123456
Dim wordNumber As Word
Dim outstring As String
wordNumber = 0
byteNumber = 0

// ----- Main program

GLCD_Open_PageTransaction 0,7
    GLCDPrint 0, 0,   "GCBASIC"
    GLCDPrint (0, 16, "Anobium 2023")
    GLCDPrint (0, 32, "Portability Demo")
    GLCDPrint (0, 48, ChipNameStr )
GLCD_Close_PageTransaction
End
