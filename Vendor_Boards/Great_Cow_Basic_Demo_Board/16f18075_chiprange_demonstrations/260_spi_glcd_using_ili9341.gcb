
'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ILI9341 GLCD capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
''':
'''This has been tested using the hardware and software SPI option.  If you change from harware SPI when using PPS, you will need to power cycle the chip.
''':
''':
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    15/09/2022
'''********************************************************************************

'Chip Settings
#CHIP 16F18075

#OPTION Explicit
#INCLUDE <glcd.h>

#DEFINE GLCD_TYPE GLCD_TYPE_ILI9341

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.6.1
    'PinManager data: v1.79.0
    'Generated for 16F18075
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 16F18075

    Sub InitPPS
        // 'This #ifdef support the SPI hardware!!
        // #ifdef ILI9341_hardwarespi
        //     'Module: SPI1
        //     RC5PPS = 0x16       //RC5->MSSP1:SDO1;
        //     RC3PPS = 0x15       //SCK1 > RC3
        //     SSP1CLKPPS = 0x13 //RC3 > SCK1 (bi-directional)
        // #endif

    End Sub
    'Template comment at the end of the config file


'Pin mappings for ILI9341
#DEFINE GLCD_DC porta.1
#DEFINE GLCD_CS porta.2
#DEFINE GLCD_RESET porta.3

'This is a PPS chip, so, needs to make the PPS match these assignments
'The following example is commented out intentionally
'#define GLCD_DI portc.4
#DEFINE GLCD_DO portc.5
#DEFINE GLCD_SCK portc.3

'Comment out the next line... disable the PPS!!!
#DEFINE ILI9341_hardwarespi

' ********************** DEMO REALLY STARTS HERE ************************************************

GLCDfntDefaultSize = 1

'GLCDCLS  supports GLCDBackground as default
'GLCDCLS  also support passing color parameter.
'GLCDCLS [color]
' optionally you can rotate the screen.
GLCDRotate ( Landscape_Rev )


'Available colors
'ILI9341_BLACK
'ILI9341_RED
'ILI9341_GREEN
'ILI9341_BLUE
'ILI9341_WHITE
'ILI9341_PURPLE
'ILI9341_YELLOW
'ILI9341_CYAN
'ILI9341_D_GRAY
'ILI9341_L_GRAY
'ILI9341_SILVER
'ILI9341_MAROON
'ILI9341_OLIVE
'ILI9341_LIME
'ILI9341_AQUA
'ILI9341_TEAL
'ILI9341_NAVY
'ILI9341_FUCHSIA

Dim CCOUNT, BYTENUMBER, OLDFONT, OLDFONT As Byte

CCount = 31
Dim longNumber As Long
' max value = 4294967290
longNumber = 0
Dim wordNumber As Word
wordNumber = 0
byteNumber = 0


Repeat 2

    GLCDRotate ( Landscape_Rev )
    GLCDCLS ILI9341_BLUE

    Wait 2 s

    GLCDForeground = ILI9341_YELLOW
    GLCDfntDefaultSize = 3
    GLCDPrint ( 2,30, "GLCDPrint String" )

    longNumber = 0xFFFFFFFF
    wordNumber = 0xFFFF
    byteNumber = 0xFF

    GLCDRotate ( Portrait )
    GLCDCLS ILI9341_WHITE

    GLCDForeground = ILI9341_MAROON
    GLCDfntDefaultSize = 1
    GLCDPrint ( 2, 2, bytenumber )


    GLCDForeground = ILI9341_BLACK
    GLCDfntDefaultSize = 2
    GLCDPrint ( 2, 12, wordNumber )


    GLCDForeground = ILI9341_CYAN
    GLCDfntDefaultSize = 3
    GLCDPrint ( 2,30, longnumber )

    Wait 2 s

End Repeat



GLCDCLS ILI9341_BLUE
GLCDfntDefaultSize = 1

ShowCase
End

// Use a sub to fix the large program into a page
Sub ShowCase

    // GLCDRotate ( Portrait )

    // GLCDDrawString (2, 1, "GCB", ILI9341_WHITE )
    // GLCDDrawString (50,1,"v.1.00", ILI9341_YELLOW )
    // GLCDDrawString (2, 16, "DrawStr", ILI9341_WHITE )

    // GLCDDrawString ( 60, 31, "Long Number" )
    // GLCDDrawString ( 60, 39, "Word Number" )
    // GLCDDrawString ( 60, 47, "Byte Number" )

    // GLCDDrawString ( 74, 16, "Asc:" )

    // Box 0,0,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_YELLOW
    // Box ILI9341_GLCD_WIDTH-5, ILI9341_GLCD_HEIGHT-5,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_WHITE

    // 'center
    // Circle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 50, ILI9341_SILVER )
    // FilledCircle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 25, ILI9341_D_GRAY  )

    // Line 0,  ILI9341_GLCD_HEIGHT-1 , ILI9341_GLCD_WIDTH/2 +100,  (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN
    // Line  0, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_GLCD_WIDTH/2 +100, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN

    // FilledBox 2,ILI9341_GLCD_HEIGHT/2+10,42,ILI9341_GLCD_HEIGHT/2+50, ILI9341_RED

    // oldfont = GLCDfntDefaultSize
    // GLCDfntDefaultSize = 2
    // GLCDDrawString ( 42, ILI9341_GLCD_HEIGHT - 30 , "ILI9341 Driver" , ILI9341_WHITE )

    // GLCDfntDefaultSize = 1
    // GLCDDrawString ( ILI9341_GLCD_WIDTH - 57, 2 , "Sep 2023" , ILI9341_WHITE )
    // #IFDEF ILI9341_HardwareSPI
    //     GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "HW SPI" , ILI9341_WHITE )
    // #ENDIF

    // #IFNDEF ILI9341_HardwareSPI
    //     GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "SW SPI" , ILI9341_WHITE )
    // #ENDIF

    // 'Revert the font size
    // GLCDfntDefaultSize = oldfont
    // GLCDForeground = ILI9341_WHITE

    // Do Forever

    //     GLCDPrint ( 144 , 31, longNumber)
    //     GLCDPrint ( 144 , 39, Pad( Str(wordnumber),5))
    //     GLCDPrint ( 144 , 47, Pad( Str(bytenumber),3))

    //     GLCDDrawChar(54, 16, CCount )
    //     'Draw a box around the Char below
    //     Box 52,15,62,26, ILI9341_WHITE

    //     GLCDDrawString ( 100, 16 , Pad( Str(CCount),3) )

    //     CCount++
    //     If CCount = 0 Then CCount = 31
    //     If CCount = 128 Then CCount = 192
    //     longNumber = longNumber + 7

    //     wordNumber = wordNumber + 3
    //     byteNumber++

    // Loop

End Sub
