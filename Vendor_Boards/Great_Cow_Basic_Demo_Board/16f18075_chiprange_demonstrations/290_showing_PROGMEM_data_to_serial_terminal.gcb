'''
'''  This demonstration shows the PROGMEM on the Serial Terminal.
'''
''' This shows code for writing and reading values onto the PROGMEM or PFM.
'''
'''
''' If you read the chip and look at the memory locations 0xFFC0 to 0xFFFE - you will see the correct values.


'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.01
'''@date    15/09/2022
' ----- Configuration

'Chip Settings.
#CHIP 16F18075
#OPTION Explicit


    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.6.1
    'PinManager data: v1.79.0
    'Generated for 16F18075
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 16F18075

    Sub InitPPS

            'Module: EUSART
            RC6PPS = 0x000E    'TX > RC6

    End Sub
    'Template comment at the end of the config file

'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    --------IN-LED--LED-LED LED -----
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----TX---------------------------
''-----------------------------------------
''

'' ------------------PORTE-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----------------RST--------------
''-----------------------------------------
''

'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDD1 PORTB.1
#DEFINE LEDD2 PORTB.2
#DEFINE LEDD3 PORTB.3
#DEFINE LEDD4 PORTB.4
#DEFINE LEDPORT LATB


Dir     LEDD1         Out
Dir     LEDD2         Out
Dir     LEDD3         Out
Dir     LEDD4         Out

#DEFINE POTENTIOMETER PORTA.0
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTB.5
Dir     SWITCHIN      In

'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING



'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.
' Now assumes Serial Terminal is operational

  Dim  ProgMemAddress as long
  Dim  DataWord as word

  wait 1 s
  HSerPrintCRLF 2


  'PFMReadWord


  'We are reading words, so we send the ProgMemAddress address every two bytes (a word).
  for ProgMemAddress = 0x0000 to 0x001F #IGNOREWARNING

      'Display the value
      HSerPrint "0x"
      HSerPrint hex(ProgMemAddress_h)
      HSerPrint hex(ProgMemAddress)
      HSerSend 9
      HSerSend 9

      'Read the value of the ProgMem
      ProgramRead  ( ProgMemAddress, DataWord )

      'Display the received value
      HSerPrint "0x"
      HSerPrint hex(DataWord_h)
      HSerPrint hex(DataWord)
      HSerPrintCRLF

  Next
  HSerPrintCRLF

 'ProgramWrite
  ProgramWrite ( 0x3FF8, 0x55 )
  ProgramWrite ( 0x3FFC, 0x1234 )

  'We are reading words, so we send the ProgMemAddress address every two bytes (a word).
  for ProgMemAddress = 0x3FF0 to 0x3FFF #IGNOREWARNING

      'Display the value
      HSerPrint "0x"
      HSerPrint hex(ProgMemAddress_h)
      HSerPrint hex(ProgMemAddress)
      HSerSend 9
      HSerSend 9

      'Read the value of the ProgMemAddress
      ProgramRead  ( ProgMemAddress, DataWord )


      'Display the received value
      HSerPrint "0x"
      HSerPrint hex(DataWord_h)
      HSerPrint hex(DataWord)
      HSerPrintCRLF

  Next
  HSerPrintCRLF

do
loop
