''' A demonstration program for GCBASIC.
'''
'''******************************************************************
'''
''' Pulse-Width Modulation (PWM) is a scheme that provides power to a load by switching
''' quickly between fully on and fully off states. The PWM signal resembles a square wave
''' where the high portion of the signal is considered the on state and the low portion of
''' the signal is considered the off state. The high portion, also known as the pulse width,
''' can vary in time and is defined in steps. A longer, high on time will illuminate the LED
''' brighter. The frequency or period of the PWM does not change. A larger number of
''' steps applied, which lengthens the pulse width, also supplies more power to the load.
''' Lowering the number of steps applied, which shortens the pulse width, supplies less
''' power. The PWM period is defined as the duration of one complete cycle or the total
''' amount of on and off time combined.
'''
''' This demonstation shows a how the changing the POT changes the PWM values across the LEDs using the PWM module.
'''
'''
'''   You need four LEDs connnect to PORTD.0, PORTD.1, PORTD.2 and PORTD.3 connected via suitable resistors.
'''  ************************************************************************************************************************************************************************************
'''
'''  PIC: 16f18877
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''
'''@author   EvanV
'''@licence  GPL
'''@version  1.0
'''@date     04.12.2016

'''
#CHIP 16f18877,32



'Set the PPS of the PWM
'Set the PPS for this solution.
#STARTUP InitPPS, 85

Sub InitPPS
    UNLOCKPPS
    '   'RD3->PWM6:PWM6OUT;
    RD3PPS = 0x000E
    '   'RD2->PWM6:PWM6OUT;
    RD2PPS = 0x000E
    '   'RD1->PWM6:PWM6OUT;
    RD1PPS = 0x000E
    '   'RD0->PWM6:PWM6OUT;
    RD0PPS = 0x000E
    LOCKPPS
End Sub

'' -------------------LATC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' LED:   ---------------|D5 |D4 |D3 |D2 |-
''-----------------------------------------
''
#DEFINE LEDD2  PORTD.0
#DEFINE LEDD3  PORTD.1
#DEFINE LEDD4  PORTD.2
#DEFINE LEDD5  PORTD.3
#DEFINE LEDBANK PORTD
#DEFINE Potentiometer porta.0

Dir     LEDD2 Out
Dir     LEDD3 Out
Dir     LEDD4 Out
Dir     LEDD5 Out
Dir     Potentiometer In

'Create an alias to the registers that control the PWM on channel 6
Dim Bright As Word Alias PWM6DCH, PWM6DCL

'Setup PMW6 at 62kHz, 0% Duty using timer2
HPWM ( 6, 62, 0 , 2  )

Do Forever

    'Set the variable(this maps to the registers) to the value of the ADC moved the left by 6 shifts.
    Bright = FnLSL( ReadAD10( ANA0 ), 6 )

Loop

End

' used so compile
#DEFINE USE_ADA0 TRUE
' not used Optimise
#DEFINE USE_ADA1 FALSE
' not used Optimise
#DEFINE USE_ADA2 FALSE
' not used Optimise
#DEFINE USE_ADA3 FALSE
' not used Optimise
#DEFINE USE_ADA4 FALSE
' not used Optimise
#DEFINE USE_ADA5 FALSE
' not used Optimise
#DEFINE USE_ADA6 FALSE
' not used Optimise
#DEFINE USE_ADA7 FALSE
' not used Optimise
#DEFINE USE_ADB0 FALSE
' not used Optimise
#DEFINE USE_ADB1 FALSE
' not used Optimise
#DEFINE USE_ADB2 FALSE
' not used Optimise
#DEFINE USE_ADB3 FALSE
' not used Optimise
#DEFINE USE_ADB4 FALSE
' not used Optimise
#DEFINE USE_ADB5 FALSE
' not used Optimise
#DEFINE USE_ADB6 FALSE
' not used Optimise
#DEFINE USE_ADB7 FALSE
' not used Optimise
#DEFINE USE_ADC0 FALSE
' not used Optimise
#DEFINE USE_ADC1 FALSE
' not used Optimise
#DEFINE USE_ADC2 FALSE
' not used Optimise
#DEFINE USE_ADC3 FALSE
' not used Optimise
#DEFINE USE_ADC4 FALSE
' not used Optimise
#DEFINE USE_ADC5 FALSE
' not used Optimise
#DEFINE USE_ADC6 FALSE
' not used Optimise
#DEFINE USE_ADC7 FALSE
' not used Optimise
#DEFINE USE_ADD0 FALSE
' not used Optimise
#DEFINE USE_ADD1 FALSE
' not used Optimise
#DEFINE USE_ADD2 FALSE
' not used Optimise
#DEFINE USE_ADD3 FALSE
' not used Optimise
#DEFINE USE_ADD4 FALSE
' not used Optimise
#DEFINE USE_ADD5 FALSE
' not used Optimise
#DEFINE USE_ADD6 FALSE
' not used Optimise
#DEFINE USE_ADD7 FALSE
' not used Optimise
#DEFINE USE_ADE0 FALSE
' not used Optimise
#DEFINE USE_ADE1 FALSE
' not used Optimise
#DEFINE USE_ADE2 FALSE


'Optimise commands  for PWM modules to reduce the size of the code produced.
' not used Optimise      ' not used Optimise
#DEFINE USE_HPWMCCP1 FALSE
' not used Optimise      ' not used Optimise
#DEFINE USE_HPWMCCP2 FALSE
' not used Optimise      ' not used Optimise
#DEFINE USE_HPWMCCP3 FALSE
' not used Optimise      ' not used Optimise
#DEFINE USE_HPWMCCP4 FALSE

' used so compile
#DEFINE USE_HPWM6 TRUE
' not used Optimise         ' not used Optimise
#DEFINE USE_HPWM7 FALSE

' used so compile
#DEFINE USE_HPWM_TIMER2 TRUE
' not used Optimise   ' not used Optimise
#DEFINE USE_HPWM_TIMER4 FALSE
' not used Optimise   ' not used Optimise
#DEFINE USE_HPWM_TIMER6 FALSE
