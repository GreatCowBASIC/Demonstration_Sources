'''
'''This demonstration program is a simple GLCD demonstration of the SSD1306 GLCD capabilities.
'''
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The SSD1306 controller a small graphical OLED, suitable for a lot of various projects.
'''The display is 38*17 mm, with an active display surface of 0.96inches , and a 128*32 pixel resolution.
'''The display is easy to interface, using an I2C type of communication.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''
'''This version is compatible will all version of GCBASIC but only version greater than v1.00.xx support low memory GLCD modes.
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version 1.00
'''@date    11.02.2023
' ----- Configuration

'Chip Settings.
#CHIP 18F26Q71
#OPTION Explicit

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.6.2
    'PinManager data: v1.81.0
    'Generated for 18F26Q71
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 18F26Q71

    Sub InitPPS

            'Module: I2C1
            RB6PPS = 0x0020    'SCL1 > RB6
            I2C1SCLPPS = 0x000E    'RB6 > SCL1 (bi-directional)
            RB4PPS = 0x0021    'SDA1 > RB4
            I2C1SDAPPS = 0x000C    'RB4 > SDA1 (bi-directional)

            'Module: UART pin directions
            Dir PORTC.6 Out    ' Make TX1 pin an output
            'Module: UART1
            RC6PPS = 0x0015    'TX1 > RC6

    End Sub
    'Template comment at the end of the config file

'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:   -----------------SW--ADC----------
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----SCL-----SDA------------------
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----TX1--------LED--LED-LED LED--
''-----------------------------------------

'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDPORT LATC

Dir     RC0         Out
Dir     RC1         Out
Dir     RC2         Out
Dir     RC3         Out

#DEFINE POTENTIOMETER PORTA.2
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTA.3
Dir     SWITCHIN      In

'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING


' Define I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA PORTB.4
#DEFINE HI2C_CLOCK PORTB.6

Dir HI2C_DATA Out
Dir HI2C_CLOCK Out

' Define I2C clock sources for minimal operation
#DEFINE I2C1ClockSource     I2C1CLOCK_MFINTOSC
#DEFINE HI2CITSCLWaitPeriod 100    'minimum for this type of GLCD

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.

#INCLUDE <glcd.h>
#DEFINE GLCD_TYPE GLCD_TYPE_SSD1306_32
#DEFINE GLCD_I2C_Address 0x78

' ----- Define variables

'These constants allow you to change the GLCD memory usage.
'We have set this demonstration to use only 128bytes of RAM for GLCD operations.
#DEFINE GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
#DEFINE GLCD_TYPE_SSD1306_CHARACTER_MODE_ONLY
#DEFINE GLCD_PROTECTOVERRUN

Dim BYTENUMBER, CCOUNT As Byte

CCount = 0
Dim longNumber As Long
' max value = 4294967290
longNumber = 0
Dim wordNumber, adcval, ldrval As Word
Dim outstring As String
wordNumber = 0
byteNumber = 0

Dir PORTB.1 Out
Dir PORTB.5 Out
Dir PORTB.0 In

// ----- Main program

#IFDEF GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
    GLCD_Open_PageTransaction 0,3
#ENDIF

GLCDPrint 0, 0,   "GCBASIC"
GLCDPrint (0, 16, "Anobium 2023")
GLCDPrint (76, 16, GLCD_WIDTH )
GLCDPrint (96, 16, "*" )
GLCDPrint (104, 16, GLCD_HEIGHT )

#IFDEF GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
    GLCD_Close_PageTransaction
#ENDIF

Wait 3 s
GLCDCLS

#IFDEF GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
    GLCD_Open_PageTransaction 0, 3
#ENDIF

GLCDPrint 0, 0,   "Version 1.00.xx"


#IFDEF GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
    GLCDPrint (0, 16, "LM GLCD MODE")
#ENDIF

#IFNDEF GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
    GLCDPrint (0, 16, "FULL GLCD MODE")
#ENDIF


#IFDEF GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
    GLCD_Close_PageTransaction
#ENDIF

Wait 3 s
GLCDCLS


Do Forever

    For CCount = 31 To 127

        ' Prepare a string
        outString = Str( CCount )
        adcval = ReadAD ( ANA2 )

        ' Prepare the static components of the screen
        #IFDEF GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
            GLCD_Open_PageTransaction 0,3
        #ENDIF

        ' Print some text
        GLCDPrint ( 1,   1, "PrintStr")
        ' Print some more text
        GLCDPrint ( 64,  1, "@")
        ' Print chip speed
        GLCDPrint ( 72,  1, ChipMHz)
        ' Print some text
        GLCDPrint ( 86, 1, "Mhz")
        ' Draw some text
        GLCDDrawString( 1,11,"DrawStr")
        ' Draw a box
        Box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1
        ' Draw a box
        Box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1
        ' Draw a circle
        Circle( 44,24,5)
        ' Draw a line
        Line 0,GLCD_HEIGHT-1,44,19

        GLCDPrint ( 75 ,  20,  "ADC:"+Pad(Str(adcval),4 ) )

        ' Draw a Box
        Box (3,24,6,27)

        ' Draw a string
        GLCDDrawString(44, 11, CHR(CCount)+"="+Pad(outString,3) )

        Ellipse 118, 6, 7, 4
        If adcval > 127 Then
            FilledEllipse 118, 6, 5, 2
        Else
            FilledEllipse 118, 6, 5, 2, GLCDBackground
        End If

        #IFDEF GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
            GLCD_Close_PageTransaction
        #ENDIF

        longNumber = longNumber + 7


    Next
Loop
End
