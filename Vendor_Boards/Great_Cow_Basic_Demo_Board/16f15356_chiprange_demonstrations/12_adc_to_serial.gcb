''' GCBASIC demonstration
'''
''' This demonstration simply turns the LED on with equates to the PWM duty value of the specified ADC port.
''' This PWM is updated with the HPWMUpdate command, and, then send duty value to the PWM Channel, the LED and the Serial port.
'''
'''
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    15/12/2018
'''********************************************************************





'Specify the Device you are compiling for - this board is the 16F15356
#CHIP 16F15356
'GCBASIC simplifies the configuration by setting the frequency and the configuration for you.

' External Oscillator mode selection bits->Oscillator not enabled - we need this to enable ANA7 - which is PortA.7
FEXTOSC = Off

'Set a constant to refer to the LED.
#DEFINE LED0 portc.1
'Set LED as an output
Dir LED0 Out

'Set a constant to refer to the switch
#DEFINE SW0 portc.0
'Set the switch as an input
Dir SW0 In
'Enable weak pullup
WPUC0 = 1


'Generated by PIC PPS Tool for GCBASIC
'PPS Tool version: 0.0.5.25
'PinManager data: v1.75
'Generated for 16f15356
'
'Template comment at the start of the config file
'
#STARTUP InitPPS, 85
#DEFINE PPSToolPart 16f15356

Sub InitPPS

    'Module: PWM6
    'PWM6OUT > RC1
    RC1PPS = 0x000E
    'Module: EUSART1
    'TX1 > RC6
    RC6PPS = 0x000F

End Sub
'Template comment at the end of the config file


'USART settings
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING


HSerPrintCRLF
HSerPrint "Welcome...."
HSerPrintCRLF


Dim lastDutyValue, currentDutyValue As Word
lastDutyValue = 1024
'Define a variable.
Dim PMWDuty As Word
PMWDuty = 1023

'Use the parameters to the PWM method. Channel 4, frequency of 40mhz, the variable duty and to use timer 2.
HPWM 6, 40, PMWDuty, 2

Do Forever

    PMWDuty = ReadAD10( ANA7 )
    'Set the value
    HPWMUpdate 6, PMWDuty
    currentDutyValue = Scale ( PMWDuty, 0, 1023, 0, 100 )
    'Test the value - display the value if different
    If currentDutyValue <> lastDutyValue Then
        lastDutyValue = currentDutyValue

        HSerPrint  currentDutyValue
        HSerPrint "% Duty"
        HSerPrintCRLF

    End If
    Wait 5 ms

Loop
