'''
''' This demonstration uses a simple software routine to avoid the initial noise on the switch
''' pin. The code will inspect the switch status, but should overcome most of the noise from a switch.
''' Some switches are worse than others.
'''
''' The switch is attached to the microcontroller with a suitable pull up resistor.
'''
''' When the switch is held down, one LED will toggle.
'''
'''
'''
'''GCBASIC Header block
'''
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    27/10/2018
'''****
' ----- Configuration
'Chip Settings.
#CHIP 18F25Q10, 32
#OPTION Explicit

'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    -------------------| I | A |-----
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------| O | O | O | O |-
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ---------------------------------
''-----------------------------------------
''

'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDPORT PORTB
#DEFINE LEDD1   LEDPORT.0
#DEFINE LEDD2   LEDPORT.1
#DEFINE LEDD3   LEDPORT.2
#DEFINE LEDD4   LEDPORT.3


Dir     LEDD1         Out
Dir     LEDD2         Out
Dir     LEDD3         Out
Dir     LEDD4         Out

#DEFINE SWITCHPORT    PORTA
#DEFINE SwitchIn      SWITCHPORT.2
Dir     SwitchIn      In

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.

Dim lastKeyDown As Byte

'Set the initial LED states
LEDD1 = 0
LEDD2 = 0
LEDD3 = 0
LEDD4 = 1

Dim     LEDState As Byte
'We are only interested in the lower four bits, so, use a mask to extract the state of these bits.
LEDState = LEDPORT AND 0B00001111

'Debouncing a switch

Do Forever
    Wait 10 ms

    If  keyPressed( lastKeyDown ) = TRUE Then

        'Rotate the LEDs.  We are only interested in the four LEDs so we mask the other bits.
        'Clear the C register bit, rotate the LEDState variable, check if the C register bit is set and set the LEDState variable.
        ' Clear the carry flag
        Set C Off
        ' and shift the contents of LEDState
        Rotate LEDState Right
        ' If the Carry is equal to 1 then the sequence has completed, then set the initial state again, the same operation as the starting LED.
        If C = 1 Then
            'Set the initial LED states
            LEDD1 = 0
            LEDD2 = 0
            LEDD3 = 0
            LEDD4 = 1
            LEDState = LEDPORT AND 0B00001111
        Else
            'Set the port
            LEDPORT = LEDState
        End If

    End If

Loop


Function  keyPressed ( In lastKeyDown )

    Dim actKeyDown As Byte

    Wait 5 ms

    If ( !SwitchIn ) Then

        actKeyDown = TRUE

    Else

        actKeyDown = FALSE

    End If

    If (actKeyDown <> lastKeyDown) Then
        lastKeyDown = actKeyDown
        keyPressed =  actKeyDown
    Else
        keyPressed = FALSE
    End If



End Function
