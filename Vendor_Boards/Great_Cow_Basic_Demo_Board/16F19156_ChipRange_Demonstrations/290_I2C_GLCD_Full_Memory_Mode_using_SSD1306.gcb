'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates theGCBASIC primatives of a Graphical LCD (GLCD)
'''
'''
'''This program uses the Full Mode GLCD - this means the microcontroller need to have a 1024 byte buffer for the GLCD.
'''There are two other demonstration programs that show how to use a lot less memory so you can use GLCD on memory contrained microcontrollers.
'''
'''This program when compiles uses about ~1139 bytes (total), including a GLCD buffer of 1024 bytes, of RAM. Compare this to the other GLCD modes of operation.
'''
''':
'''@author  EvanV
'''@licence GPL
'''@version 1.02a includes OLED Fonts
'''@date    13.09.2017
'''********************************************************************************
'''
'''  PIC: 18f26k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: GCBASIC Board
'''  Date: 29.8.17
'''
' ----- Configuration
    'Chip Settings.
    #chip 16F19156, 32

    #option Explicit

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.11
    'PinManager data: v1.55
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

    Sub InitPPS

            'Module: MSSP1
            RC3PPS = 0x0013    'SCL1 > RC3
            SSP1CLKPPS = 0x0013    'RC3 > SCL1 (bi-directional)
            RC4PPS = 0x0014    'SDA1 > RC4
            SSP1DATPPS = 0x0014    'RC4 > SDA1 (bi-directional)
            'Module: EUSART1
            RC6PPS = 0x000D    'TX1 > RC6
            TX1PPS = 0x0016    'RC6 > TX1 (bi-directional)

    End Sub
    'Template comment at the end of the config file


    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---|RS |RW | E |D7 |D6 |D5 |D4
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------| O | A |-------| O | I |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---| TX| A |-I---I---------------
    ''-----------------------------------------
    ''


    #define LEDD1 PORTB.1
    #define LEDD2 PORTB.5
    #define SwitchIn        PORTB.0
    #define LDR             PORTA.4

    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     SwitchIn      In
    Dir     LDR           In    'this is the ANB4 port


    ' Define I2C settings
    #define HI2C_BAUD_RATE 100
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3

    HI2CMode Master

    'Initialise I2C - For the MSSP module the ports need to be set to Input
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in

    #include <glcd.h>
    #define GLCD_TYPE GLCD_TYPE_SSD1306
    #define GLCD_I2C_Address 0x78

    'These constants allow you to change the GLCD memory usage.
    #define GLCD_PROTECTOVERRUN

    #define GLCD_OLED_FONT

'*******************************************************************************************
   DIM myString as string * 28
   myString = "GCBASIC 2023"

   GLCDfntDefaultSize = 2
   GLCDFontWidth = 5
   GLCDPrint(24, 2,"GCBASIC")
   GLCDDrawString(20, 15,"Extensive")
   GLCDDrawString(20, 28,"Libraries")

   GLCDfntDefaultSize = 1
   GLCDPrint(20, 48,"https://goo.gl/gjrxkp")
   GLCDDrawString(20, 56,myString)

   Box (0, 0, 127 , 63 )

   FilledCircle 8, 8, 5
   Triangle 127, 0, 117, 0, 127, 10, 1

   Do Forever
   Loop
