'''
'''******************************************************************
''' LCD demonstration for the board. We have added the LCD section to specific the ports.
''' All the LCD commands are standard GCBASIC LCD commands, as are the ReadAD and HPWM commands.
'''
''' The program uses PWM/CCP1 channel (which is on Portc.2), at a frequency of 40hz and the PWM width is set to 255 minus the LDR value to invert the display.
'''
''' These are all standard GCBASIC commands
'''
''' See the section "Setup LCD Parameters" for the specification of the LCD commands.
'''
''' This program simply read the ADC and sets the Pulse Width Modulation (PWM) to the a value that is the inverse of the light level.
'''
'''************************************************************************
    'Chip Settings.
    #chip 16F19156, 32

    #option Explicit

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.11
    'PinManager data: v1.55
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

    Sub InitPPS

            'Module: MSSP1
            RC3PPS = 0x0013    'SCL1 > RC3
            SSP1CLKPPS = 0x0013    'RC3 > SCL1 (bi-directional)
            RC4PPS = 0x0014    'SDA1 > RC4
            SSP1DATPPS = 0x0014    'RC4 > SDA1 (bi-directional)
            'Module: EUSART1
            RC6PPS = 0x000D    'TX1 > RC6
            TX1PPS = 0x0016    'RC6 > TX1 (bi-directional)

    End Sub
    'Template comment at the end of the config file


    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---|RS |RW | E |D7 |D6 |D5 |D4
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------| O | A |-------| O | I |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---| TX| A |-I---I---------------
    ''-----------------------------------------
    ''


    #define LEDD1 PORTB.1
    #define LEDD2 PORTB.5
    #define SwitchIn        PORTB.0

    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     SwitchIn      In

    ' Define I2C settings
    #define HI2C_BAUD_RATE 100
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3

    HI2CMode Master

    'Initialise I2C - For the MSSP module the ports need to be set to Input
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in

    '''Set up LCD
    #define LCD_IO 10
    #define LCD_I2C_Address_1 0x4E

    'You may need to use SLOW or MEDIUM if your LCD is a slower device.
    #define LCD_SPEED slow
    'You may need to invert these states. Dependent of LCD I2C adapter.
    #define LCD_Backlight_On_State  1
    #define LCD_Backlight_Off_State 0

    '*****************************************************************************************************
    'Main program commences here.. everything before this is setup for the board.

    Do forever

     CLS
     PRINT "GREAT"
     lOCATE 1, 0
     PRINT "COW"
     WAIT 1 s
     LOCATE 0, 0
     PRINT "COW  "
     LOCATE 1, 0
     PRINT "BASIC"
     WAIT 1 s
     LOCATE 0, 0
     PRINT "BASIC"
     LOCATE 1, 0
     PRINT "2017  "
     WAIT 1 s

     LCDBacklight ( On )

     CLS
     PRINT "GREAT"
     lOCATE 1, 0
     PRINT "COW"
     WAIT 1 s
     LOCATE 0, 0
     PRINT "COW  "
     LOCATE 1, 0
     PRINT "BASIC"
     WAIT 1 s
     LOCATE 0, 0
     PRINT "BASIC"
     LOCATE 1, 0
     PRINT "2017  "
     WAIT 1 s

     LCDBacklight ( Off )

    Loop

