'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates theGCBASIC primatives of a Graphical LCD (GLCD)
'''
'''
'''This program uses the Low Memory Mode GLCD - this means the microcontroller does not require a large amount of RAM.
'''There are two other demonstration programs that show how memory usage is is used when using GLCD.
'''
'''This program when compiles uses about ~246 bytes (total), including a GLCD buffer of 128 bytes,  of RAM. Compare this to the other GLCD modes of operation.
'''
'''To support this mode of GLCD, you need to start the GLCD page with GLCD_Open_PageTransaction and close the page with GLCD_Close_PageTransaction.
'''See the code below for the full syntax.
'''
'''
''':
'''@author  EvanV
'''@licence GPL
'''@version 1.02a includes OLED Fonts
'''@date    13.09.2017
'''********************************************************************************
'''
'''  PIC: 18f26k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: GCBASIC Board
'''  Date: 29.8.17
'''
' ----- Configuration
    'Chip Settings.
    #chip 16F19156, 32

    #option Explicit

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.11
    'PinManager data: v1.55
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

    Sub InitPPS

            'Module: MSSP1
            RC3PPS = 0x0013    'SCL1 > RC3
            SSP1CLKPPS = 0x0013    'RC3 > SCL1 (bi-directional)
            RC4PPS = 0x0014    'SDA1 > RC4
            SSP1DATPPS = 0x0014    'RC4 > SDA1 (bi-directional)
            'Module: EUSART1
            RC6PPS = 0x000D    'TX1 > RC6
            TX1PPS = 0x0016    'RC6 > TX1 (bi-directional)

    End Sub
    'Template comment at the end of the config file


    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---|RS |RW | E |D7 |D6 |D5 |D4
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------| O | A |-------| O | I |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---| TX| A |-I---I---------------
    ''-----------------------------------------
    ''


    #define LEDD1 PORTB.1
    #define LEDD2 PORTB.5
    #define SwitchIn        PORTB.0
    #define LDR             PORTA.4

    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     SwitchIn      In
    Dir     LDR           In    'this is the ANB4 port

    ' Define I2C settings
    #define HI2C_BAUD_RATE 100
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3

    HI2CMode Master

    'Initialise I2C - For the MSSP module the ports need to be set to Input
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in

    #include <glcd.h>
    #define GLCD_TYPE GLCD_TYPE_SSD1306
    #define GLCD_I2C_Address 0x78

    'These constants allow you to change the GLCD memory usage.
    #define GLCD_PROTECTOVERRUN
'*******************************************************************************************
    #define GLCD_OLED_FONT
    #define GLCD_TYPE_SSD1306_CHARACTER_MODE_ONLY
    #define GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE

    DIM myString as string * 28
    myString = "GCBASIC 2023"


    'Open GLCD page mode of operations. The SSD1306 has 8 pages, so, we use the pages 0 and 7
    GLCD_Open_PageTransaction ( 0, 7 )

        GLCDfntDefaultSize = 2
        GLCDFontWidth = 5
        GLCDPrint(24, 2,"GCBASIC")
        GLCDDrawString(20, 15,"Extensive")
        GLCDDrawString(20, 28,"Libraries")

        FilledCircle 120, 8, 5
        Line 10, 0, 0, 10


        GLCDfntDefaultSize = 1
        GLCDPrint(20, 48,"https://goo.gl/gjrxkp")
        GLCDDrawString(20, 56,myString)


        Box (0, 0, 127 , 63 )

    'Close GLCD page mode of operations.
    GLCD_Close_PageTransaction

    Do Forever
    Loop
