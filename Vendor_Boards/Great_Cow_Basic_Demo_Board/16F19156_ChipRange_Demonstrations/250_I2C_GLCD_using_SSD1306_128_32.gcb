'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the SSD1306 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The SSD1306 controller a small graphical OLED, suitable for a lot of various projects.
'''The display is 38*17 mm, with an active display surface of 0.96inches , and a 128*32 pixel resolution.
'''The display is easy to interface, using an I2C type of communication.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''
'''This version is compatible will all version of GCBASIC but only version greater than v1.00.xx support low memory GLCD modes.
'''
'''@author  EvanV
'''@licence GPL
'''@version 2.1
'''@date    27.8.17
'''************************************************************************
'''
'''  PIC: 18f26k22
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: GCBASIC Board
'''  Date: 29.8.17
'''
' ----- Configuration
    'Chip Settings.
    #chip 16F19156, 32

    #option Explicit

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.11
    'PinManager data: v1.55
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

    Sub InitPPS

            'Module: MSSP1
            RC3PPS = 0x0013    'SCL1 > RC3
            SSP1CLKPPS = 0x0013    'RC3 > SCL1 (bi-directional)
            RC4PPS = 0x0014    'SDA1 > RC4
            SSP1DATPPS = 0x0014    'RC4 > SDA1 (bi-directional)
            'Module: EUSART1
            RC6PPS = 0x000D    'TX1 > RC6
            TX1PPS = 0x0016    'RC6 > TX1 (bi-directional)

    End Sub
    'Template comment at the end of the config file


    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---|RS |RW | E |D7 |D6 |D5 |D4
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------| O | A |-------| O | I |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---| TX| A |-I---I---------------
    ''-----------------------------------------
    ''


    #define LEDD1 PORTB.1
    #define LEDD2 PORTB.5
    #define SwitchIn        PORTB.0
    #define LDR             PORTA.4

    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     SwitchIn      In
    Dir     LDR           In    'this is the ANB4 port


        ' Define I2C settings
    #define HI2C_BAUD_RATE 100
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3

    HI2CMode Master

    'Initialise I2C - For the MSSP module the ports need to be set to Input
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in


    #include <glcd.h>
    #define GLCD_TYPE GLCD_TYPE_SSD1306_32
    #define GLCD_I2C_Address 0x78

; ----- Define variables

    'These constants allow you to change the GLCD memory usage.
    'We have set this demonstration to use only 128bytes of RAM for GLCD operations.
    #define GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
    #define GLCD_TYPE_SSD1306_CHARACTER_MODE_ONLY
    #define GLCD_PROTECTOVERRUN

    Dim BYTENUMBER, CCOUNT as Byte

    CCount = 0
    dim longNumber as long
    longNumber = 0 ' max value = 4294967290
    dim wordNumber, ldrval as Word
    dim outstring as string
    wordNumber = 0
    byteNumber = 0

    Dir PORTB.1 Out
    Dir PORTB.5 Out
    DIR PORTB.0 In

  ; ----- Main program

      #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
        GLCD_Open_PageTransaction 0,3
      #endif

          GLCDPrint 0, 0,   "GCBASIC"
          GLCDPrint (0, 16, "Anobium 2023")
          GLCDPrint (76, 16, GLCD_WIDTH )
          GLCDPrint (96, 16, "*" )
          GLCDPrint (104, 16, GLCD_HEIGHT )

      #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
        GLCD_Close_PageTransaction
      #endif

    wait 3 s
    GLCDCLS

      #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
        GLCD_Open_PageTransaction 0, 3
      #endif

          GLCDPrint 0, 0,   "Version 1.00.xx"


          #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
              GLCDPrint (0, 16, "LM GLCD MODE")
          #endif

          #ifndef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
              GLCDPrint (0, 16, "FULL GLCD MODE")
          #endif


      #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
        GLCD_Close_PageTransaction
      #endif

    wait 3 s
    GLCDCLS


    DO forever

       for CCount = 32 to 127

            outString = str( CCount )                                  ; Prepare a string
            ldrval = readad ( ANB4 )

            GLCDSetContrast ( ldrval )
            ' Prepare the static components of the screen
            #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
              GLCD_Open_PageTransaction 0,3
            #endif

              GLCDPrint ( 1,   1, "PrintStr")                                ; Print some text
              GLCDPrint ( 64,  1, "@")                                    ; Print some more text
              GLCDPrint ( 72,  1, ChipMhz)                                   ; Print chip speed
              GLCDPrint ( 86, 1, "Mhz")                                     ; Print some text
              GLCDDrawString( 1,11,"DrawStr")                                 ; Draw some text
              box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1                            ; Draw a box
              box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1    ; Draw a box
              Circle( 44,24,5)                                              ; Draw a circle
              line 0,GLCD_HEIGHT-1,44,19                                    ; Draw a line

              GLCDPrint ( 75 ,  11,  "LDR:"+pad(str(ldrval),4 ) )

              box (3,24,6,27)                                           ; Draw a Box

              GLCDDrawString(44, 11, chr(CCount)+"="+pad(outString,3) )                   ; Draw a string

              Ellipse 118, 6, 7, 4
              if ldrval > 127 then
                FilledEllipse 118, 6, 5, 2
              else
                FilledEllipse 118, 6, 5, 2, GLCDBackground
              end if

          #ifdef GLCD_TYPE_SSD1306_LOWMEMORY_GLCD_MODE
            GLCD_Close_PageTransaction
          #endif

          longNumber = longNumber + 7


        NEXT
    LOOP
    end
