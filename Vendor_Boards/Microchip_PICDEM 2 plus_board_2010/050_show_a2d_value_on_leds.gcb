/*
    A demonstration program for GCBASIC
    --------------------------------------------------------------------------------
    This shows how to read the A2D converter and display the a proportioanal value on the LEDs.
    The pot on the board varies the voltage coming in on the microcontroller.
    
    Rotate the POT to see the LEDs change.
    
    The A2D is referenced to the same Vdd as the device, which
    is nominally is 5V.  The A2D returns the ratio of the voltage
    on Pin RA0 to 5V.  The A2D has a resolution of 8 bits, with 255
    representing 5V and 0 representing 0V.
    
    
    Rotate the potentiometer to change the LEDs displayed.


@author 	EvanV
@licence	GPL
@version	1.0a
@date   	27.12.2024
********************************************************************************/

//Set chip model required
#chip 16F1937
#option Explicit

/*
        ------------PORTA---------------
Bit#:  -7---6---5---4---3---2---1---0---
IO:    ----------------------------ADC--
IO:    ---------------------------------

        ------------PORTB----------------
Bit#:  -7---6---5---4---3---2---1---0---
IO:    ----------------LED-LED-LED-LED--
IO:    ---------------------------------

        ------------PORTC----------------
Bit#:  -7---6---5---4---3---2---1---0---
IO:    ---------------------------------
IO:    ---------------------------------

        ------------PORTD----------------
Bit#:  -7---6---5---4---3---2---1---0---
IO:    PWR-EN--RW--RS--DB7-DB6-DB5-DB4--
IO:    ---------------------------------
*/

// Define constants to make things easier. We can reuse a constant at any time.
#DEFINE LEDD0 PORTB.0
#DEFINE LEDD1 PORTB.1
#DEFINE LEDD2 PORTB.2
#DEFINE LEDD3 PORTB.3

// #OPTION Volatile LEDD3

Dir     LEDD0 Out
Dir     LEDD1 Out
Dir     LEDD2 Out
Dir     LEDD3 Out



// *****************************************************************************************************
    // Main program commences here.. everything before this is setup for the board.

    Dim adcVal As Byte

    Do

        adcVal =  ReadAD ( ANA0 )

    // One method
        //   Select Case adcVal
        //     Case 0 to 49

        //         LEDD0 = 0
        //         LEDD1 = 0
        //         LEDD2 = 0
        //         LEDD3 = 0

        //     Case 50 to 99
        //         LEDD0 = 1
        //         LEDD1 = 0
        //         LEDD2 = 0
        //         LEDD3 = 0

        //     Case 100 to 149
        //         LEDD0 = 1
        //         LEDD1 = 1
        //         LEDD2 = 0
        //         LEDD3 = 0

        //     Case 150 to 200
        //         LEDD0 = 1
        //         LEDD1 = 1
        //         LEDD2 = 1
        //         LEDD3 = 0

        //     Case Else
        //         LEDD0 = 1Q24
        //         LEDD1 = 1
        //         LEDD2 = 1
        //         LEDD3 = 1

        //   End Select

        //  Or, another way

    // Another method

            If adcVal < 50 then
                    LEDD0 = 0
                    LEDD1 = 0
                    LEDD2 = 0
                    LEDD3 = 0
                    
            else if adcVal > 49 and adcVal < 100 then
                    LEDD0 = 1
                    LEDD1 = 0
                    LEDD2 = 0
                    LEDD3 = 0

            else if adcVal > 99 and adcVal < 150 then
                    LEDD0 = 1
                    LEDD1 = 1
                    LEDD2 = 0
                    LEDD3 = 0

            else if adcVal > 149 and adcVal < 200 then
                    LEDD0 = 1
                    LEDD1 = 1
                    LEDD2 = 1
                    LEDD3 = 0

            else if adcVal > 200 then
                    LEDD0 = 1
                    LEDD1 = 1
                    LEDD2 = 1
                    LEDD3 = 1
            End if

        wait 100 ms

    Loop






/* GCBASIC Optimisation file - this will optimise ADC operations by disabling the ADC operations on the AD channel that is set to FALSE
                             to enable ADC operations on a specific AD channel set to TRUE

            Legacy chip Constants for ADC
 */
            #DEFINE USE_AD0 TRUE
            #DEFINE USE_AD1 FALSE
            #DEFINE USE_AD2 FALSE
            #DEFINE USE_AD2 FALSE
            #DEFINE USE_AD3 FALSE
            #DEFINE USE_AD4 FALSE
            #DEFINE USE_AD5 FALSE
            #DEFINE USE_AD6 FALSE
            #DEFINE USE_AD7 FALSE
            #DEFINE USE_AD8 FALSE
            #DEFINE USE_AD9 FALSE
            #DEFINE USE_AD10 FALSE
            #DEFINE USE_AD11 FALSE
            #DEFINE USE_AD12 FALSE
            #DEFINE USE_AD13 FALSE
            #DEFINE USE_AD14 FALSE
            #DEFINE USE_AD15 FALSE
            #DEFINE USE_AD16 FALSE
            #DEFINE USE_AD17 FALSE
            #DEFINE USE_AD18 FALSE
            #DEFINE USE_AD19 FALSE
            #DEFINE USE_AD20 FALSE
            #DEFINE USE_AD21 FALSE
            #DEFINE USE_AD22 FALSE
            #DEFINE USE_AD23 FALSE
            #DEFINE USE_AD24 FALSE
            #DEFINE USE_AD25 FALSE
            #DEFINE USE_AD26 FALSE
            #DEFINE USE_AD27 FALSE
            #DEFINE USE_AD28 FALSE
            #DEFINE USE_AD29 FALSE
            #DEFINE USE_AD30 FALSE
            #DEFINE USE_AD31 FALSE
            #DEFINE USE_AD32 FALSE
            #DEFINE USE_AD33 FALSE
            #DEFINE USE_AD34 FALSE
//          Recent chip Constants for ADC 
            #DEFINE USE_ADA0 TRUE
            #DEFINE USE_ADA1 FALSE
            #DEFINE USE_ADA2 FALSE
            #DEFINE USE_ADA3 FALSE
            #DEFINE USE_ADA4 FALSE
            #DEFINE USE_ADA5 FALSE
            #DEFINE USE_ADA6 FALSE
            #DEFINE USE_ADA7 FALSE
            #DEFINE USE_ADB0 FALSE
            #DEFINE USE_ADB1 FALSE
            #DEFINE USE_ADB2 FALSE
            #DEFINE USE_ADB3 FALSE
            #DEFINE USE_ADB4 FALSE
            #DEFINE USE_ADB5 FALSE
            #DEFINE USE_ADB6 FALSE
            #DEFINE USE_ADB7 FALSE
            #DEFINE USE_ADC0 FALSE
            #DEFINE USE_ADC1 FALSE
            #DEFINE USE_ADC2 FALSE
            #DEFINE USE_ADC3 FALSE
            #DEFINE USE_ADC4 FALSE
            #DEFINE USE_ADC5 FALSE
            #DEFINE USE_ADC6 FALSE
            #DEFINE USE_ADC7 FALSE
            #DEFINE USE_ADD0 FALSE
            #DEFINE USE_ADD1 FALSE
            #DEFINE USE_ADD2 FALSE
            #DEFINE USE_ADD3 FALSE
            #DEFINE USE_ADD4 FALSE
            #DEFINE USE_ADD5 FALSE
            #DEFINE USE_ADD6 FALSE
            #DEFINE USE_ADD7 FALSE
            #DEFINE USE_ADE0 FALSE
            #DEFINE USE_ADE1 FALSE
            #DEFINE USE_ADE2 FALSE
