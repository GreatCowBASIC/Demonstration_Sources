''' GCBASIC demonstration
'''
''' This demonstration simply turns the LED on and off with a wait of 1 s using a timer.  See http://gcbasic.sourceforge.net/help/_timer_overview.html
''' The microcontroller has a timer called timer0. This timers is a 16-bit timer. We setup the timer to create an Interrupt event every 1 second.
''' This Interrupt event then toggles the LED0 state.
'''
''' There is one yellow LED available on the MPLABÂ® Xpress PIC16F18446 board that can be turned ON
''' and OFF. The LED can be activated by driving the connected I/O line to GND.
'''
'''@author  Evan R. Venn
'''@licence GPL
'''@version 1.00
'''@date    30/06/2018
'''********************************************************************

'Specify the Device you are compiling for - this board is the 16F18446
#CHIP 16F18446
'Great Cow BASIC simplifies the configuration by setting the frequency and the configuration for you.

'This option ensures that all variables are dimensioned in the user program.  See http://gcbasic.sourceforge.net/help/__option_explicit.html
#OPTION Explicit



'Set a constant.  The LED can be activated by driving the connected I/O line to GND, see section 3.3.2 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf
#DEFINE LEDOn  = 0
'Set a constant.  The LED can be de-activated by driving the connected I/O line to the supply voltage, see section 3.3.2 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf
#DEFINE LEDOff = 1

'Set a constant to refer to the LED.  RA2 is a Yellow LED called LED0 Edge connector, see section 3.3.1 of the MPLAB-Xpress-PIC16F18446-Evaluation-Board.pdf
#DEFINE LED0 porta.2
'Set LED as an output
Dir LED0 Out



''' Initialise the timer.

'Firstly tell the compiler to use a 16bit timer for this demonstration
#DEFINE TMR0_16BIT

'For this timer event we need the following settings
'  Prescaler
'      1:256
'       HF int Osc, and
'       NOT to sync Timer
'  Post scaler
'      1:2
InitTimer0 Osc, PRE0_256 + TMR0_HFINTOSC ,  POST0_2

'Start the Timer.  You need to start the timer.
StartTimer 0

'Set the Interrupt every 1 sec which equates to the hex value of 0x0bdc
SetTimer ( 0 , 0x0bdc  )
'To calculate this value use this tool  https://libstock.mikroe.com/projects/view/398/timer-calculator


''' Most programs run in a loop such as this one
Do

    'Wait for the Interrupt event
    Wait While !TMR0IF

    'The Interrupt event must have happened!  Clear the timer event flag
    TMR0IF = 0

    'The real work. Toggle the LED
    LED0 = !LED0

    'Set timer again to 1s. In 1s the next event will occur.
    SetTimer ( 0 , 0x0bdc )

Loop

End
