/*
    The program shows how to save data - bytes, arrays and strings to the externally attach I2C EEPROM

*/
; ----- Configuration
#CHIP 16F15376
#option explicit

    // Include the library needed
    #include <i2ceeprom.h>

    // Serial Setup Constants and the PPS
        #DEFINE USART_BAUD_RATE 9600
        #DEFINE USART_TX_BLOCKING
        #DEFINE USART_DELAY OFF

    // PIC PPS Tool version: 0.0.6.5
    
    #startup InitPPS, 85
    #DEFINE PPSToolPart 16F15376

    Sub InitPPS
            
            // Module: EUSART1
            RC6PPS = 0x000F    // TX1 > RC6
        
        End Sub

    // I2C settings - set the software ports using the constants
    #DEFINE I2C_MODE Master
    #DEFINE I2C_DATA PORTC.4
    #DEFINE I2C_CLOCK PORTC.3
    #DEFINE I2C_DISABLE_INTERRUPTS ON

; ----- Define Hardware settings
  #define EEPDEV 0xA0               'Change this ADDRESS to suit
  #define EEPROMPAGESIZE 8          'Change to the EEPROM page size
                                    'This IS EEPROM device specific

; ----- Variables
  Dim XLOOP as Byte

  Dim eepAddr as Word               'For this specific EEPROM used a Word.
                                    'This IS EEPROM device specific. Smaller device with 16 byte page size are typically requird 'Dim eepAddr as byte'
                                    'Large devices will required 'Dim eepAddr as word'

  Dim datarray( 10 )
  Dim datastring as String * 16

; ----- Main body of program commences here.

    wait 1 s

    'Show whether you have selected harware or software I2C
    HSerPrintCRLF 2
    HSerPrint "SW I2C  Operational"
    HserPrintCRLF 2


    ArrayOps:
  ' Write an Array
        'populate the array, the array is 10 elements long
        datarray = 10,9,8,7,6,5,4,3,2,1

        HSerPrint "Initialise a RAM Array with values"
        HSerPrintCRLF
        HSerPrint "    -:"
        for xloop = 1 to 10
            HSerPrint datarray(xloop)
            if xloop < 10 then HSerPrint ","
        next
        HSerPrintCRLF 2

        'set EEProm start address for saving the array
        eepAddr = 0
        'write array
        HSerPrint "Write Array to i2C device"
        HSerPrintCRLF 2
        eeprom_wr_array( EEPDEV, EEPROMPAGESIZE, eepAddr , datarray(), 10 )

        'populate the array with 127 as test to see if the operation populates correctly.
        HSerPrint "Populate Array with #127 to clear the Array"
        HSerPrintCRLF
        HSerPrint "    -:"
        for xloop = 1 to 10
            datarray(xloop) = 127
            HSerPrint datarray(xloop)
            if xloop < 10 then HSerPrint ","
        next
        HSerPrintCRLF 2

        'set EEProm start address for reading the array
        eepAddr = 0
        HSerPrint "Read I2C device"
        HSerPrintCRLF 2        
        eeprom_rd_array( EEPDEV, eepAddr , datarray(), 10 )
        HSerPrint "EEProm results - should be `10,9,8,7,6,5,4,3,2,1` "
        HSerPrintCRLF
        HSerPrint "    -:"
        'show results
        for xloop = 1 to 10
            HSerPrint datarray(xloop)
            if xloop < 10 then HSerPrint ","
        next
        HSerPrintCRLF 2
        HSerPrint "End of array operations"
        HSerPrintCRLF 2

        stringOps:
        HSerPrint "Start of string operations"
        HSerPrintCRLF 2


    ' Write a String
        'populate the string
        datastring ="0123456789ABCDEF"
        datastring ="This is a string"
        'set EEProm start address for saving the length of string
        eepAddr = 0
        HSerPrint "Writing string"
        HSerPrintCRLF
        HSerPrint "    -:"
        HSerPrint datastring
        HSerPrintCRLF 2

        'write byte zero of the string. Byte zero is the length of the string.
        eeprom_wr_byte( EEPDEV, eepAddr , datastring(0) )
        'set EEProm next address for saving the whole string
        eepAddr = 1
        'write string - note passing the BRACES () in datastring()
        eeprom_wr_string( EEPDEV, EEPROMPAGESIZE, eepAddr , datastring(), datastring(0) )

        'empty string
        datastring = "XXXXXXXXXXXXXXXX"
        HSerPrint "Populate the string with X's"
        HSerPrintCRLF
        HSerPrint "    -:"
        HSerPrint datastring
        HSerPrintCRLF 2

        'rebuild string by reading eleven bytes - from byte zero and next ten bytes
        for eepAddr = 0 to datastring(0)
            eeprom_rd_byte( EEPDEV, eepAddr , datastring(eepAddr) )
        next

        HSerPrint "Read String from EEProm - should be `This is a string`"
        HSerPrintCRLF
        HSerPrint "    -:"
        HSerPrint datastring
        HSerPrintCRLF 2
        HSerPrint "End of string operations"
        HSerPrintCRLF
        wait 100 ms
        end

