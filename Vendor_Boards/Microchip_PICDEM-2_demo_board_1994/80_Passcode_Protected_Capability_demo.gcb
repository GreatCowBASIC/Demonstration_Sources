/*

    This program requires a passcode.  The passcode is stored in the external I2C EEPROM.

    The default byte value returned by the I2C EEPROM is 255, therefore, you must set the passcode using `50_Set_Passcode_to_I2C_EEPROM_demo.gcb`

    This program setups the following:
        A LCD as an 8Bit device
        A KeyPad connected to J4
        J6 is disconnected
        Serial out on PORTC.6
        Switches as inputs
        ADC is analog input as 10bit ADC

    The program uses the LCD to show the value of the ADC, state of the switches and last key pressed on the keypad


*/

#CHIP 16F15376
#option explicit

    // Include the library needed
    #include <i2ceeprom.h>

    // LCD Setup Constants and connection settings 
        #DEFINE LCD_IO 8 
        #DEFINE LCD_RS PORTA.1 
        #DEFINE LCD_Enable PORTA.3
        #DEFINE LCD_RW PORTA.2
        #DEFINE LCD_DATA_PORT PORTD

    // Keypad Setup Constants
        #DEFINE KEYPAD_ROW_1 portb.7
        #DEFINE KEYPAD_ROW_2 portb.6
        #DEFINE KEYPAD_ROW_3 portb.5
        #DEFINE KEYPAD_ROW_4 portb.4
        #DEFINE KEYPAD_COL_1 portb.3
        #DEFINE KEYPAD_COL_2 portb.2
        #DEFINE KEYPAD_COL_3 portb.1
        #DEFINE KEYPAD_COL_4 portb.0

    // Setup the Switches as constants and set the DIRection
        #DEFINE SW2_RA4 PORTA.4
        #DEFINE SW3_RC2 PORTC.2
        #DEFINE SW1_RE3 PORTE.3

        DIR SW2_RA4 IN
        DIR SW3_RC2 IN
        DIR SW1_RE3 IN


    // Serial Setup Constants and the PPS
        #DEFINE USART_BAUD_RATE 9600
        #DEFINE USART_TX_BLOCKING
        #DEFINE USART_DELAY OFF

    // PIC PPS Tool version: 0.0.6.5
    
    #startup InitPPS, 85
    #DEFINE PPSToolPart 16F15376

    Sub InitPPS
            
            // Module: EUSART1
            RC6PPS = 0x000F    // TX1 > RC6
        
        End Sub
        // Add this code segment to your GCBASIC source program

    // I2C settings - set the software ports using the constants
    #DEFINE I2C_MODE Master
    #DEFINE I2C_DATA PORTC.4
    #DEFINE I2C_CLOCK PORTC.3
    #DEFINE I2C_DISABLE_INTERRUPTS ON

    ; ----- Define Hardware settings
    #define EEPDEV 0xA0               'Change this ADDRESS to suit
    #define EEPROMPAGESIZE 8          'Change to the EEPROM page size
                                        'This IS EEPROM device specific


// Main body of program commences here.

    Dim eepAddr as Word               'For this specific EEPROM used a Word.
                                        'This IS EEPROM device specific. 
        eepAddr = 0                     //  Location in EEPROM to save password
    Dim passcodeArrayEE ( 4 )
        passcodeArrayEE = 0,0,0,0
    Dim verified as Bit 
    Dim ccount, temp, ccount as Byte

    Print "GCBASIC 2024"
    Locate 1,0
    Print "PICDEM-2 DEMO BOARD"
    Wait 3 s
    CLS
    Print "To operate keypad remove J6 jumper"
            repeat 2
                LCDCURSOR LCDOFF
                wait 500 ms
                LCDCURSOR LCDON
                wait 500 ms
                If !SW2_RA4 or !SW3_RC2 or !SW1_RE3 Then Exit Repeat
            end repeat

    
    // Enter the passcode !! store in the EEPROM
    Do While NOT ValidPassCode
    Loop

    CLS
    Print "Key Pressed :"

    Do Forever

        'Get key value from keypad
        Temp = KeypadData
        'If a key is pressed, then display it
        If Temp <> KEY_NONE Then

            // Send to Serial
            HSerPrint Temp
            HserPrintCRLF

            // Send to LCD
            Locate 0,0
            Print "Key Pressed :"
            Print LeftPad ( ByteToString(Temp), 2, " ")

            'Wait until key is released
            wait while KeypadData <> KEY_NONE

        End If
        
        Locate 1,0
        Print "ADC/RA0 :"
        Print LeftPad ( ByteToString(ReadAD10 ( AN0 )), 4, " ")

        Locate 0, 16
        Print "SW1_RE3"
        Locate 1, 19
        Print SW1_RE3 

        Locate 0, 24
        Print "SW2_RA4"
        Locate 1, 27
        Print SW2_RA4

        Locate 0, 32
        Print "SW3_RC2"
        Locate 1, 35
        Print SW3_RC2

    Loop

Function ValidPassCode 

    // Read the array from EEProm
    eepAddr = 0
    eeprom_rd_array( EEPDEV, eepAddr , passcodeArrayEE(), 4 )

    // Dump any keypad
    Do While KeypadData <> KEY_NONE
    Loop


    CLS
    Print "Enter passcode on KeyPad, 4 presses"

    verified = TRUE
    ccount = 1
    Do While ccount < 5
            'Get key value from keypad
        Temp = KeypadData
        'If a key is pressed, then display it
        If Temp <> KEY_NONE Then

            If  passcodeArrayEE( ccount) <> Temp Then
                verified = FALSE
            End if

            // Send to LCD
            Locate 1, 0
            Print "Key Pressed :"
            Locate 1, ccount + 13
            Print Temp

            'Wait until key is released
            wait while KeypadData <> KEY_NONE
            ccount++    
        End If
    Loop

    If !verified Then
        CLS
        Print "Passcode does not match"
        Wait 4 s
    End If

    Return verified

End Function