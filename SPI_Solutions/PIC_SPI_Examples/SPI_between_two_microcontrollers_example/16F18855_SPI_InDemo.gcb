'''
'''  This demonstration produces a variable speed rotating LED display that is proportional to the ADC value.
'''  The ADC value and LED rotate speed are inversely proportional to each other.
'''
'''  This demonstration has two parts the Master and the Slave.  Use 16F18855_SPI_OutDemo.gcb as the Master and 16F18855_SPI_InDemo.gcb for the Slave
'''
'''  Rotate the POT counterclockwise to see the LEDs shift faster, press the switch to reverse the direction of the LEDs.
'''
'''  An attached Serial Terminal will show the state of the LEDs and the direction of the rotation.
'''
'''  The four LSbs of the ADC are mirrored onto the LEDs. Rotate the potentiometer
'''  to change the display.
'''
'''
'''  PIC: 16F18855
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: Xpress Evaluation Board
'''  Date: 19.10.2016
'''

' ----- Configuration
    #chip 16f18855
    #option explicit


    'Set the PPS of the PWM and the RS232 ports.
    'Set the PPS for this solution.
  #startup InitPPS, 85

  Sub InitPPS
    UNLOCKPPS
      RC0PPS = 0x0010     'RC0->EUSART:TX;
      RXPPS  = 0x0011     'RC1->EUSART:RX;

      'Module: MSSP1
      RB3PPS = 0x0014    'SCL1 > RB3
      SSP1CLKPPS = 0x000B    'RB3 > SCL1 (bi-directional)
      RB4PPS = 0x0015    'SDA1 > RB4
      SSP1DATPPS = 0x000C    'RB4 > SDA1 (bi-directional)
      RB5PPS = 0x0015    'SDO1 > RB5

    LOCKPPS
  End sub

    #define USART_BAUD_RATE 19200
    #define USART_TX_BLOCKING

    #define SWITCH_DOWN         0
    #define SWITCH_UP           1

    #define LEDD1               porta.0
    #define SWITCH      PORTA.5

    'Potentitor is connected to RA4...set as input
    dir porta.4 in
    'setup switch (SW1)
    dir SWITCH in

    'Set SPI mode to slave
    SPIMode Slave
    'setup direction of SPI pins
    dir PORTB.3 in    'clock
    dir PORTB.4 in     'data in
    dir PORTB.5 out    'data out

    dir LEDD1 out


    HSerPrintCRLF 2
    HSerPrint "GCBASIC @2023": HSerPrintCRLF
    HSerPrint "SPI Board": HSerPrintCRLF 2
    wait 1 s

    dim InValue as byte

    do

      'Show BYTE read of THE remote ADC
          SPITransfer 0, InValue
          hserprint InValue
          HSerPrintCRLF
          LEDD1 = not LEDD1
    loop





