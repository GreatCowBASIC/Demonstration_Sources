'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------
'***************************************************************
' SI4703 FM Radio Tuner Module
' Description: The si4703.h header file provides the necessary constants,
'              configurations, and functions to interface with
'              the SI4703 FM Radio Tuner module using GCBASIC.
' Features:
' - FM band support (76–108 MHz)
' - Digital low-IF receiver
' - Automatic frequency control (AFC)
' - Signal strength measurement
' - RDS/RBDS support
' - Stereo audio output
'***************************************************************
'''@author    alexandr-g
'''@license   GPL
'''@version   1.00
'''@date      2025-03-13
'''********************************************************************************



#chip mega328p, 16
#include <glcd.h>
#include "si4703.h"     //local folder

/*
            ------------PORTA---------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    ---------------------------------
    IO:    ---------------------------------

            ------------PORTB----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    ---------------------------------
    IO:    ---------------------------------

            ------------PORTC----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    -----------------SW--SW--SW--SW--
    IO:    ------------------V<--V>--UP--DN--


            ------------PORTD----------------
    Bit#:  -7---6---5---4---3---2---1---0---
    IO:    -SW------------------------------
    IO:    -UP------------------------------    
*/



// Config I2C for LCD SSD1306
#DEFINE HI2C_DATA       PORTC.4
#DEFINE HI2C_CLOCK      PORTC.5
#DEFINE HI2C_BAUD_RATE  400
HI2CMode Master

// Config GLCD
#define GLCD_TYPE GLCD_TYPE_SSD1306_32
#define GLCD_I2C_Address 0x78


// Config Si4703
#define 4703_adress 0x20    // i2c address of the Si4703 module
#define si4703_SEN PORTD.5  // pin SEN
#define si4703_RST PORTD.4  // pin RST
Dir si4703_SEN out
Dir si4703_RST out

// Buttons (when pressing low level)
#define StUp PortD.7 // switching to the next saved channel
Dir StUp In
#define StDn PortB.0 // switching to the previous saved channel
Dir StDn In
#define SeekUp PortB.1 // channel search up
Dir SeekUp In
#define SeekDn PortB.2 // channel search down
Dir SeekDn In
#define VolUp PortB.3 // volume level up (max-15)
Dir VolUp In
#define VolDn PortB.4 // volume level down (min-1)
Dir VolDn In

// saved channels 
ChMax=50 // number of saved channels
Dim Ch(50) as Word // array of saved channels

Ch(1) = 875 // Бизнес FM (87.5MHz)
Ch(2) = 879 // Like FM 
Ch(3) = 883 // Ретро FM
Ch(4) = 887 // Юмор FM
Ch(5) = 891 // Радио Jazz
Ch(6) = 895 // Мегаполис FM
Ch(7) = 899 // Радио Record
Ch(8) = 903 // Авторадио
Ch(9) = 908 // Relax FM
Ch(10) = 912 // Эхо Москвы
Ch(11) = 916 // Радио Культура
Ch(12) = 920 // Москва FM
Ch(13) = 924 // Радио Дача
Ch(14) = 928 // Радио Карнавал
Ch(15) = 932 // Спорт FM
Ch(16) = 936 // Коммерсант FM
Ch(17) = 940 // Восток FM
Ch(18) = 944 // Весна FM
Ch(19) = 948 // Говорит Москва
Ch(20) = 952 // ROCK FM
Ch(21) = 956 // Радио Звезда
Ch(22) = 960 // Дорожное радио
Ch(23) = 964 // Такси FM
Ch(24) = 968 // Детское радио
Ch(25) = 972 // Комсомольская Правда
Ch(26) = 976 // Вести FM
Ch(27) = 980 // Radio Chocolate (Радио Шоколад)
Ch(28) = 984 // Новое радио (бывшее радио Рекорд)
Ch(29) = 988 // Радио Romantika (радио Романтика)
Ch(30) = 992 // Радио Орфей
Ch(31) = 996 // Столица FM
Ch(32) = 1001 // Серебряный дождь
Ch(33) = 1005 // Best FM
Ch(34) = 1009 // Радио Вера
Ch(35) = 1012 // DFM
Ch(36) = 1017 // Наше Радио
Ch(37) = 1021 // Монте-Карло
Ch(38) = 1025 // Comedy Radio (Камеди радио)
Ch(39) = 1030 // Шансон
Ch(40) = 1034 // Радио Маяк
Ch(41) = 1037 // Maximum (радио Максимум)
Ch(42) = 1042 // NRJ (Energy, радио Энерджи, Энергия)
Ch(43) = 1047 // Радио 7 на семи холмах
Ch(44) = 1052 // Moscow FM (Москоу FM, Москва ФМ)
Ch(45) = 1057 // Русское Радио
Ch(46) = 1062 // Европа Плюс
Ch(47) = 1066 // Love Radio (Лав радио)
Ch(48) = 1070 // Русская служба новостей
Ch(49) = 1074 // Хит FM
Ch(50) = 1078 // Милицейская волна#EXTM3U

// enabling i2c mode Si4703
Set si4703_SEN=1
Set HI2C_DATA=0; //A low SDIO indicates a 2-wire interface
Set si4703_RST=0; //Put Si4703 into reset
Wait 1 ms; //Some delays while we allow pins to settle
Set si4703_RST=1; //Bring Si4703 out of reset with SDIO set to low and SEN pulled high with on-board resistor
Wait 100 ms; //Allow Si4703 to come out of reset

Volume=12 // volume when turned on
ChVal=7 // the number of the saved channel when turned on


GLCDCLS // cleaning the display

Call InitSi // Si4703 initialization
Call SetVolume // set volume  "Volume"
Call SetChannel // set channel "ChVal"
//Call Read_Ch_St
Call PrintChannel //Print Channel

Do
    If StUp<1 or StDn<1 or SeekUp<1 or SeekDn<1 or VolUp<1 or VolDn<1 Then Call Button // calling the button click handler when one of the buttons is pressed
    Call Read_Ch_St
    Call PrintChannel //Print Channel
    Call RDS // starting the RDS reading

    // printing the radio station name from RDS on LCD (array 8 byte)
    GLCDfntDefaultsize = 2
    GLCDPrint 0,16, "           "

    Simb1=0
    For Simb = 1 to 8
        If RDSBufSt(Simb) < 32 Then Exit For
        GLCDPrint Simb1,16, chr(RDSBufSt(Simb))
        Simb1=Simb1+12
        If StUp<1 or StDn<1 or SeekUp<1 or SeekDn<1 or VolUp<1 or VolDn<1 Then Call Button // calling the button click handler when one of the buttons is pressed
        Wait 50 ms
        If Simb = 8 Then Exit For
        Next
    Wait 500 ms

    // a running line with the name of the song from RDS (array 64 byte)
    GLCDPrint 0,16, "           "
    Simb1=0
    For Simb=1 to 55

        If RDSBuf(Simb)<32 Then Exit For
        GLCDPrint 0,16, chr(RDSBuf(Simb))

        If RDSBuf(Simb+1)<32 Then Exit For
        GLCDPrint 12,16, chr(RDSBuf(Simb+1))

        If RDSBuf(Simb+2)<32 Then Exit For
        GLCDPrint 24,16, chr(RDSBuf(Simb+2))

        If RDSBuf(Simb+3)<32 Then Exit For
        GLCDPrint 36,16, chr(RDSBuf(Simb+3))

        If RDSBuf(Simb+4)<32 Then Exit For
        GLCDPrint 48,16, chr(RDSBuf(Simb+4))

        If RDSBuf(Simb+5)<32 Then Exit For
        GLCDPrint 60,16, chr(RDSBuf(Simb+5))

        If RDSBuf(Simb+6)<32 Then Exit For
        GLCDPrint 72,16, chr(RDSBuf(Simb+6))

        If RDSBuf(Simb+7)<32 Then Exit For
        GLCDPrint 84,16, chr(RDSBuf(Simb+7))

        If RDSBuf(Simb+8)<32 Then Exit For
        GLCDPrint 96,16, chr(RDSBuf(Simb+8))

        If RDSBuf(Simb+9)<32 Then Exit For
        GLCDPrint 108,16, chr(RDSBuf(Simb+9))

        If RDSBuf(Simb+10)<32 Then Exit For
        If StUp<1 or StDn<1 or SeekUp<1 or SeekDn<1 or VolUp<1 or VolDn<1 Then Call Button
        Wait 200 ms
        If Simb=55 Then Exit For
    Next
Loop

Sub Button
    if StUp<1 Then 
        ChVal++
        Call SetChannel
        GLCDfntDefaultsize = 2
        GLCDPrint 0, 0, "     "
        Call PrintChannel
    End If

    if StDn<1 Then 
        ChVal--
        Call SetChannel
        GLCDfntDefaultsize = 2
        GLCDPrint 0, 0, "     "
        Call PrintChannel
    End If

    if SeekUp<1 Then 
        Call 4703_Seek_Up
        GLCDfntDefaultsize = 2
        GLCDPrint 0, 0, "     "
        Call PrintChannel
    End If

    if SeekDn<1 Then 
        Call 4703_Seek_Down
        GLCDfntDefaultsize = 2
        GLCDPrint 0, 0, "     "
        Call PrintChannel
    End If

    if VolUp<1 Then
        Volume++
        Call SetVolume
        GLCDfntDefaultsize = 2
        GLCDPrint 0,16, "           "
        GLCDPrint 0,16, "Vol: "
        GLCDPrint 48,16, Volume
    End If

    if VolDn<1 Then
        Volume--
        Call SetVolume
        GLCDfntDefaultsize = 2
        GLCDPrint 0,16, "           "
        GLCDPrint 0,16, "Vol: "
        GLCDPrint 48,16, Volume
    End If

    Wait 300 ms
End Sub


Sub PrintChannel // The Sub PrintChannel name cannot be changed, as the PrintChannel is called after each station change.

    Call Read_Ch_St
    // channel frequency
    ReadChannel=READ_CH_0+875
    ChanR=ReadChannel/10
    GLCDfntDefaultsize = 2
    GLCDPrint 0, 0, ChanR
    GLCDPrint 36, 0, ","
    DECM= ReadChannel-ChanR*10
    GLCDPrint 48, 0, DECM
    GLCDPrint 60, 0, "MHz"

    // Stereo Mono
    If STEREO=1 Then
        GLCDfntDefaultsize = 1
        GLCDPrint 110, 0, "St"
    Else
        GLCDfntDefaultsize = 1
        GLCDPrint 110, 0, "Mo"
    End If

    // Signal strength
    GLCDfntDefaultsize = 1
    GLCDPrint 95,8, RSSI_0
    GLCDPrint 108,8, "dB"
End Sub


Sub PrintVolume // The Sub PrintVolume name cannot be changed, as the PrintVolume is called after volume change.
    GLCDfntDefaultsize = 2
    GLCDPrint 0,16, "           "
    GLCDPrint 0,16, "Vol: "
    GLCDPrint 48,16, Volume
End Sub
