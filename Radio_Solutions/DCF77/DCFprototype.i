# 1 "d:\\GreatCowBASICGits\\Demonstration_Sources.git\\trunk\\Radio_Solutions\\DCF77\\DCFprototype.S"
# 1 "<built-in>" 1
# 1 "d:\\GreatCowBASICGits\\Demonstration_Sources.git\\trunk\\Radio_Solutions\\DCF77\\DCFprototype.S" 2
;Program compiled by Great Cow BASIC (1.00.00 Release Candidate 2022-10-13 (Windows 64 bit) : Build 1178) for Microchip PIC-AS
; See the GCBASIC forums at http:
; Check the documentation and Help at http:
;or, email:
; evanvennn at users dot sourceforge dot net

;********************************************************************************


;Set up the assembler options (Chip type, clock source, other bits and pieces)
;PROCESSOR 12LF1552
 PAGEWIDTH 180
 RADIX DEC
 TITLE "d:\GreatCowBASICGits\Demonstration_Sources.git\trunk\Radio_Solutions\DCF77\DCFprototype.s"
 SUBTITLE "10-14-2022"

; Reverse lookup file(s)
; C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic12lf1552.inc
; C:\Program Files\Microchip\xc8\v2.40\pic\dat\cfgmap\12lf1552.cfgmap
; Alternative CONFIG file is to be found at C:\Program Files\Microchip\xc8\vX.YY\pic\dat\cfgdata as per Microchip support ticket #00730936

;********************************************************************************

;********************************************************************************
;Explicit CONFIG
 CONFIG CLKOUTEN=OFF ;C1 Reverselookup CLKOUTEN = OFF
 CONFIG BOREN=OFF ;C1 Reverselookup BOREN = OFF
 CONFIG CP=OFF ;C1 Reverselookup CP = OFF
 CONFIG MCLRE=OFF ;C1 Reverselookup MCLRE = OFF
 CONFIG WDTE=OFF ;C1 Reverselookup WDTE = OFF
 CONFIG FOSC=INTOSC ;C1 Reverselookup FOSC = INTOSC
 CONFIG LVP=OFF ;C1 Reverselookup LVP = OFF
 CONFIG WRT=OFF ;C1 Reverselookup WRT = OFF
;Inferred CONFIG


;********************************************************************************
; The XC8 xc.inc include file. This MUST be placed after the CONFIG statements.


# 1 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\xc.inc" 1 3






# 1 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\pic.inc" 1 3



# 1 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\pic_as_chip_select.inc" 1 3
# 565 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\pic_as_chip_select.inc" 3
# 1 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\proc\\pic12lf1552.inc" 1 3
# 48 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\proc\\pic12lf1552.inc" 3
INDF0 equ 0000h

INDF0_INDF0_POSN equ 0000h
INDF0_INDF0_POSITION equ 0000h
INDF0_INDF0_SIZE equ 0008h
INDF0_INDF0_LENGTH equ 0008h
INDF0_INDF0_MASK equ 00FFh



INDF1 equ 0001h

INDF1_INDF1_POSN equ 0000h
INDF1_INDF1_POSITION equ 0000h
INDF1_INDF1_SIZE equ 0008h
INDF1_INDF1_LENGTH equ 0008h
INDF1_INDF1_MASK equ 00FFh



PCL equ 0002h

PCL_PCL_POSN equ 0000h
PCL_PCL_POSITION equ 0000h
PCL_PCL_SIZE equ 0008h
PCL_PCL_LENGTH equ 0008h
PCL_PCL_MASK equ 00FFh



STATUS equ 0003h

STATUS_C_POSN equ 0000h
STATUS_C_POSITION equ 0000h
STATUS_C_SIZE equ 0001h
STATUS_C_LENGTH equ 0001h
STATUS_C_MASK equ 0001h
STATUS_DC_POSN equ 0001h
STATUS_DC_POSITION equ 0001h
STATUS_DC_SIZE equ 0001h
STATUS_DC_LENGTH equ 0001h
STATUS_DC_MASK equ 0002h
STATUS_Z_POSN equ 0002h
STATUS_Z_POSITION equ 0002h
STATUS_Z_SIZE equ 0001h
STATUS_Z_LENGTH equ 0001h
STATUS_Z_MASK equ 0004h
STATUS_nPD_POSN equ 0003h
STATUS_nPD_POSITION equ 0003h
STATUS_nPD_SIZE equ 0001h
STATUS_nPD_LENGTH equ 0001h
STATUS_nPD_MASK equ 0008h
STATUS_nTO_POSN equ 0004h
STATUS_nTO_POSITION equ 0004h
STATUS_nTO_SIZE equ 0001h
STATUS_nTO_LENGTH equ 0001h
STATUS_nTO_MASK equ 0010h
STATUS_CARRY_POSN equ 0000h
STATUS_CARRY_POSITION equ 0000h
STATUS_CARRY_SIZE equ 0001h
STATUS_CARRY_LENGTH equ 0001h
STATUS_CARRY_MASK equ 0001h
STATUS_ZERO_POSN equ 0002h
STATUS_ZERO_POSITION equ 0002h
STATUS_ZERO_SIZE equ 0001h
STATUS_ZERO_LENGTH equ 0001h
STATUS_ZERO_MASK equ 0004h



FSR0L equ 0004h

FSR0L_FSR0L_POSN equ 0000h
FSR0L_FSR0L_POSITION equ 0000h
FSR0L_FSR0L_SIZE equ 0008h
FSR0L_FSR0L_LENGTH equ 0008h
FSR0L_FSR0L_MASK equ 00FFh



FSR0H equ 0005h

FSR0H_FSR0H_POSN equ 0000h
FSR0H_FSR0H_POSITION equ 0000h
FSR0H_FSR0H_SIZE equ 0008h
FSR0H_FSR0H_LENGTH equ 0008h
FSR0H_FSR0H_MASK equ 00FFh



FSR1L equ 0006h

FSR1L_FSR1L_POSN equ 0000h
FSR1L_FSR1L_POSITION equ 0000h
FSR1L_FSR1L_SIZE equ 0008h
FSR1L_FSR1L_LENGTH equ 0008h
FSR1L_FSR1L_MASK equ 00FFh



FSR1H equ 0007h

FSR1H_FSR1H_POSN equ 0000h
FSR1H_FSR1H_POSITION equ 0000h
FSR1H_FSR1H_SIZE equ 0008h
FSR1H_FSR1H_LENGTH equ 0008h
FSR1H_FSR1H_MASK equ 00FFh



BSR equ 0008h

BSR_BSR_POSN equ 0000h
BSR_BSR_POSITION equ 0000h
BSR_BSR_SIZE equ 0005h
BSR_BSR_LENGTH equ 0005h
BSR_BSR_MASK equ 001Fh
BSR_BSR0_POSN equ 0000h
BSR_BSR0_POSITION equ 0000h
BSR_BSR0_SIZE equ 0001h
BSR_BSR0_LENGTH equ 0001h
BSR_BSR0_MASK equ 0001h
BSR_BSR1_POSN equ 0001h
BSR_BSR1_POSITION equ 0001h
BSR_BSR1_SIZE equ 0001h
BSR_BSR1_LENGTH equ 0001h
BSR_BSR1_MASK equ 0002h
BSR_BSR2_POSN equ 0002h
BSR_BSR2_POSITION equ 0002h
BSR_BSR2_SIZE equ 0001h
BSR_BSR2_LENGTH equ 0001h
BSR_BSR2_MASK equ 0004h
BSR_BSR3_POSN equ 0003h
BSR_BSR3_POSITION equ 0003h
BSR_BSR3_SIZE equ 0001h
BSR_BSR3_LENGTH equ 0001h
BSR_BSR3_MASK equ 0008h
BSR_BSR4_POSN equ 0004h
BSR_BSR4_POSITION equ 0004h
BSR_BSR4_SIZE equ 0001h
BSR_BSR4_LENGTH equ 0001h
BSR_BSR4_MASK equ 0010h



WREG equ 0009h

WREG_WREG0_POSN equ 0000h
WREG_WREG0_POSITION equ 0000h
WREG_WREG0_SIZE equ 0008h
WREG_WREG0_LENGTH equ 0008h
WREG_WREG0_MASK equ 00FFh



PCLATH equ 000Ah

PCLATH_PCLATH_POSN equ 0000h
PCLATH_PCLATH_POSITION equ 0000h
PCLATH_PCLATH_SIZE equ 0007h
PCLATH_PCLATH_LENGTH equ 0007h
PCLATH_PCLATH_MASK equ 007Fh



INTCON equ 000Bh

INTCON_IOCIF_POSN equ 0000h
INTCON_IOCIF_POSITION equ 0000h
INTCON_IOCIF_SIZE equ 0001h
INTCON_IOCIF_LENGTH equ 0001h
INTCON_IOCIF_MASK equ 0001h
INTCON_INTF_POSN equ 0001h
INTCON_INTF_POSITION equ 0001h
INTCON_INTF_SIZE equ 0001h
INTCON_INTF_LENGTH equ 0001h
INTCON_INTF_MASK equ 0002h
INTCON_TMR0IF_POSN equ 0002h
INTCON_TMR0IF_POSITION equ 0002h
INTCON_TMR0IF_SIZE equ 0001h
INTCON_TMR0IF_LENGTH equ 0001h
INTCON_TMR0IF_MASK equ 0004h
INTCON_IOCIE_POSN equ 0003h
INTCON_IOCIE_POSITION equ 0003h
INTCON_IOCIE_SIZE equ 0001h
INTCON_IOCIE_LENGTH equ 0001h
INTCON_IOCIE_MASK equ 0008h
INTCON_INTE_POSN equ 0004h
INTCON_INTE_POSITION equ 0004h
INTCON_INTE_SIZE equ 0001h
INTCON_INTE_LENGTH equ 0001h
INTCON_INTE_MASK equ 0010h
INTCON_TMR0IE_POSN equ 0005h
INTCON_TMR0IE_POSITION equ 0005h
INTCON_TMR0IE_SIZE equ 0001h
INTCON_TMR0IE_LENGTH equ 0001h
INTCON_TMR0IE_MASK equ 0020h
INTCON_PEIE_POSN equ 0006h
INTCON_PEIE_POSITION equ 0006h
INTCON_PEIE_SIZE equ 0001h
INTCON_PEIE_LENGTH equ 0001h
INTCON_PEIE_MASK equ 0040h
INTCON_GIE_POSN equ 0007h
INTCON_GIE_POSITION equ 0007h
INTCON_GIE_SIZE equ 0001h
INTCON_GIE_LENGTH equ 0001h
INTCON_GIE_MASK equ 0080h
INTCON_T0IF_POSN equ 0002h
INTCON_T0IF_POSITION equ 0002h
INTCON_T0IF_SIZE equ 0001h
INTCON_T0IF_LENGTH equ 0001h
INTCON_T0IF_MASK equ 0004h
INTCON_T0IE_POSN equ 0005h
INTCON_T0IE_POSITION equ 0005h
INTCON_T0IE_SIZE equ 0001h
INTCON_T0IE_LENGTH equ 0001h
INTCON_T0IE_MASK equ 0020h



PORTA equ 000Ch

PORTA_RA0_POSN equ 0000h
PORTA_RA0_POSITION equ 0000h
PORTA_RA0_SIZE equ 0001h
PORTA_RA0_LENGTH equ 0001h
PORTA_RA0_MASK equ 0001h
PORTA_RA1_POSN equ 0001h
PORTA_RA1_POSITION equ 0001h
PORTA_RA1_SIZE equ 0001h
PORTA_RA1_LENGTH equ 0001h
PORTA_RA1_MASK equ 0002h
PORTA_RA2_POSN equ 0002h
PORTA_RA2_POSITION equ 0002h
PORTA_RA2_SIZE equ 0001h
PORTA_RA2_LENGTH equ 0001h
PORTA_RA2_MASK equ 0004h
PORTA_RA3_POSN equ 0003h
PORTA_RA3_POSITION equ 0003h
PORTA_RA3_SIZE equ 0001h
PORTA_RA3_LENGTH equ 0001h
PORTA_RA3_MASK equ 0008h
PORTA_RA4_POSN equ 0004h
PORTA_RA4_POSITION equ 0004h
PORTA_RA4_SIZE equ 0001h
PORTA_RA4_LENGTH equ 0001h
PORTA_RA4_MASK equ 0010h
PORTA_RA5_POSN equ 0005h
PORTA_RA5_POSITION equ 0005h
PORTA_RA5_SIZE equ 0001h
PORTA_RA5_LENGTH equ 0001h
PORTA_RA5_MASK equ 0020h



PIR1 equ 0011h

PIR1_SSP1IF_POSN equ 0003h
PIR1_SSP1IF_POSITION equ 0003h
PIR1_SSP1IF_SIZE equ 0001h
PIR1_SSP1IF_LENGTH equ 0001h
PIR1_SSP1IF_MASK equ 0008h
PIR1_ADIF_POSN equ 0006h
PIR1_ADIF_POSITION equ 0006h
PIR1_ADIF_SIZE equ 0001h
PIR1_ADIF_LENGTH equ 0001h
PIR1_ADIF_MASK equ 0040h



PIR2 equ 0012h

PIR2_BCL1IF_POSN equ 0003h
PIR2_BCL1IF_POSITION equ 0003h
PIR2_BCL1IF_SIZE equ 0001h
PIR2_BCL1IF_LENGTH equ 0001h
PIR2_BCL1IF_MASK equ 0008h



TMR0 equ 0015h

TMR0_TMR0_POSN equ 0000h
TMR0_TMR0_POSITION equ 0000h
TMR0_TMR0_SIZE equ 0008h
TMR0_TMR0_LENGTH equ 0008h
TMR0_TMR0_MASK equ 00FFh



TRISA equ 008Ch

TRISA_TRISA0_POSN equ 0000h
TRISA_TRISA0_POSITION equ 0000h
TRISA_TRISA0_SIZE equ 0001h
TRISA_TRISA0_LENGTH equ 0001h
TRISA_TRISA0_MASK equ 0001h
TRISA_TRISA1_POSN equ 0001h
TRISA_TRISA1_POSITION equ 0001h
TRISA_TRISA1_SIZE equ 0001h
TRISA_TRISA1_LENGTH equ 0001h
TRISA_TRISA1_MASK equ 0002h
TRISA_TRISA2_POSN equ 0002h
TRISA_TRISA2_POSITION equ 0002h
TRISA_TRISA2_SIZE equ 0001h
TRISA_TRISA2_LENGTH equ 0001h
TRISA_TRISA2_MASK equ 0004h
TRISA_TRISA3_POSN equ 0003h
TRISA_TRISA3_POSITION equ 0003h
TRISA_TRISA3_SIZE equ 0001h
TRISA_TRISA3_LENGTH equ 0001h
TRISA_TRISA3_MASK equ 0008h
TRISA_TRISA4_POSN equ 0004h
TRISA_TRISA4_POSITION equ 0004h
TRISA_TRISA4_SIZE equ 0001h
TRISA_TRISA4_LENGTH equ 0001h
TRISA_TRISA4_MASK equ 0010h
TRISA_TRISA5_POSN equ 0005h
TRISA_TRISA5_POSITION equ 0005h
TRISA_TRISA5_SIZE equ 0001h
TRISA_TRISA5_LENGTH equ 0001h
TRISA_TRISA5_MASK equ 0020h



PIE1 equ 0091h

PIE1_SSP1IE_POSN equ 0003h
PIE1_SSP1IE_POSITION equ 0003h
PIE1_SSP1IE_SIZE equ 0001h
PIE1_SSP1IE_LENGTH equ 0001h
PIE1_SSP1IE_MASK equ 0008h
PIE1_ADIE_POSN equ 0006h
PIE1_ADIE_POSITION equ 0006h
PIE1_ADIE_SIZE equ 0001h
PIE1_ADIE_LENGTH equ 0001h
PIE1_ADIE_MASK equ 0040h



PIE2 equ 0092h

PIE2_BCL1IE_POSN equ 0003h
PIE2_BCL1IE_POSITION equ 0003h
PIE2_BCL1IE_SIZE equ 0001h
PIE2_BCL1IE_LENGTH equ 0001h
PIE2_BCL1IE_MASK equ 0008h



OPTION_REG equ 0095h

OPTION_REG_PS_POSN equ 0000h
OPTION_REG_PS_POSITION equ 0000h
OPTION_REG_PS_SIZE equ 0003h
OPTION_REG_PS_LENGTH equ 0003h
OPTION_REG_PS_MASK equ 0007h
OPTION_REG_PSA_POSN equ 0003h
OPTION_REG_PSA_POSITION equ 0003h
OPTION_REG_PSA_SIZE equ 0001h
OPTION_REG_PSA_LENGTH equ 0001h
OPTION_REG_PSA_MASK equ 0008h
OPTION_REG_TMR0SE_POSN equ 0004h
OPTION_REG_TMR0SE_POSITION equ 0004h
OPTION_REG_TMR0SE_SIZE equ 0001h
OPTION_REG_TMR0SE_LENGTH equ 0001h
OPTION_REG_TMR0SE_MASK equ 0010h
OPTION_REG_TMR0CS_POSN equ 0005h
OPTION_REG_TMR0CS_POSITION equ 0005h
OPTION_REG_TMR0CS_SIZE equ 0001h
OPTION_REG_TMR0CS_LENGTH equ 0001h
OPTION_REG_TMR0CS_MASK equ 0020h
OPTION_REG_INTEDG_POSN equ 0006h
OPTION_REG_INTEDG_POSITION equ 0006h
OPTION_REG_INTEDG_SIZE equ 0001h
OPTION_REG_INTEDG_LENGTH equ 0001h
OPTION_REG_INTEDG_MASK equ 0040h
OPTION_REG_nWPUEN_POSN equ 0007h
OPTION_REG_nWPUEN_POSITION equ 0007h
OPTION_REG_nWPUEN_SIZE equ 0001h
OPTION_REG_nWPUEN_LENGTH equ 0001h
OPTION_REG_nWPUEN_MASK equ 0080h
OPTION_REG_PS0_POSN equ 0000h
OPTION_REG_PS0_POSITION equ 0000h
OPTION_REG_PS0_SIZE equ 0001h
OPTION_REG_PS0_LENGTH equ 0001h
OPTION_REG_PS0_MASK equ 0001h
OPTION_REG_PS1_POSN equ 0001h
OPTION_REG_PS1_POSITION equ 0001h
OPTION_REG_PS1_SIZE equ 0001h
OPTION_REG_PS1_LENGTH equ 0001h
OPTION_REG_PS1_MASK equ 0002h
OPTION_REG_PS2_POSN equ 0002h
OPTION_REG_PS2_POSITION equ 0002h
OPTION_REG_PS2_SIZE equ 0001h
OPTION_REG_PS2_LENGTH equ 0001h
OPTION_REG_PS2_MASK equ 0004h
OPTION_REG_T0SE_POSN equ 0004h
OPTION_REG_T0SE_POSITION equ 0004h
OPTION_REG_T0SE_SIZE equ 0001h
OPTION_REG_T0SE_LENGTH equ 0001h
OPTION_REG_T0SE_MASK equ 0010h
OPTION_REG_T0CS_POSN equ 0005h
OPTION_REG_T0CS_POSITION equ 0005h
OPTION_REG_T0CS_SIZE equ 0001h
OPTION_REG_T0CS_LENGTH equ 0001h
OPTION_REG_T0CS_MASK equ 0020h



PCON equ 0096h

PCON_nBOR_POSN equ 0000h
PCON_nBOR_POSITION equ 0000h
PCON_nBOR_SIZE equ 0001h
PCON_nBOR_LENGTH equ 0001h
PCON_nBOR_MASK equ 0001h
PCON_nPOR_POSN equ 0001h
PCON_nPOR_POSITION equ 0001h
PCON_nPOR_SIZE equ 0001h
PCON_nPOR_LENGTH equ 0001h
PCON_nPOR_MASK equ 0002h
PCON_nRI_POSN equ 0002h
PCON_nRI_POSITION equ 0002h
PCON_nRI_SIZE equ 0001h
PCON_nRI_LENGTH equ 0001h
PCON_nRI_MASK equ 0004h
PCON_nRMCLR_POSN equ 0003h
PCON_nRMCLR_POSITION equ 0003h
PCON_nRMCLR_SIZE equ 0001h
PCON_nRMCLR_LENGTH equ 0001h
PCON_nRMCLR_MASK equ 0008h
PCON_nRWDT_POSN equ 0004h
PCON_nRWDT_POSITION equ 0004h
PCON_nRWDT_SIZE equ 0001h
PCON_nRWDT_LENGTH equ 0001h
PCON_nRWDT_MASK equ 0010h
PCON_STKUNF_POSN equ 0006h
PCON_STKUNF_POSITION equ 0006h
PCON_STKUNF_SIZE equ 0001h
PCON_STKUNF_LENGTH equ 0001h
PCON_STKUNF_MASK equ 0040h
PCON_STKOVF_POSN equ 0007h
PCON_STKOVF_POSITION equ 0007h
PCON_STKOVF_SIZE equ 0001h
PCON_STKOVF_LENGTH equ 0001h
PCON_STKOVF_MASK equ 0080h



WDTCON equ 0097h

WDTCON_SWDTEN_POSN equ 0000h
WDTCON_SWDTEN_POSITION equ 0000h
WDTCON_SWDTEN_SIZE equ 0001h
WDTCON_SWDTEN_LENGTH equ 0001h
WDTCON_SWDTEN_MASK equ 0001h
WDTCON_WDTPS_POSN equ 0001h
WDTCON_WDTPS_POSITION equ 0001h
WDTCON_WDTPS_SIZE equ 0005h
WDTCON_WDTPS_LENGTH equ 0005h
WDTCON_WDTPS_MASK equ 003Eh
WDTCON_WDTPS0_POSN equ 0001h
WDTCON_WDTPS0_POSITION equ 0001h
WDTCON_WDTPS0_SIZE equ 0001h
WDTCON_WDTPS0_LENGTH equ 0001h
WDTCON_WDTPS0_MASK equ 0002h
WDTCON_WDTPS1_POSN equ 0002h
WDTCON_WDTPS1_POSITION equ 0002h
WDTCON_WDTPS1_SIZE equ 0001h
WDTCON_WDTPS1_LENGTH equ 0001h
WDTCON_WDTPS1_MASK equ 0004h
WDTCON_WDTPS2_POSN equ 0003h
WDTCON_WDTPS2_POSITION equ 0003h
WDTCON_WDTPS2_SIZE equ 0001h
WDTCON_WDTPS2_LENGTH equ 0001h
WDTCON_WDTPS2_MASK equ 0008h
WDTCON_WDTPS3_POSN equ 0004h
WDTCON_WDTPS3_POSITION equ 0004h
WDTCON_WDTPS3_SIZE equ 0001h
WDTCON_WDTPS3_LENGTH equ 0001h
WDTCON_WDTPS3_MASK equ 0010h
WDTCON_WDTPS4_POSN equ 0005h
WDTCON_WDTPS4_POSITION equ 0005h
WDTCON_WDTPS4_SIZE equ 0001h
WDTCON_WDTPS4_LENGTH equ 0001h
WDTCON_WDTPS4_MASK equ 0020h



OSCCON equ 0099h

OSCCON_SCS_POSN equ 0000h
OSCCON_SCS_POSITION equ 0000h
OSCCON_SCS_SIZE equ 0002h
OSCCON_SCS_LENGTH equ 0002h
OSCCON_SCS_MASK equ 0003h
OSCCON_IRCF_POSN equ 0003h
OSCCON_IRCF_POSITION equ 0003h
OSCCON_IRCF_SIZE equ 0004h
OSCCON_IRCF_LENGTH equ 0004h
OSCCON_IRCF_MASK equ 0078h
OSCCON_SPLLEN_POSN equ 0007h
OSCCON_SPLLEN_POSITION equ 0007h
OSCCON_SPLLEN_SIZE equ 0001h
OSCCON_SPLLEN_LENGTH equ 0001h
OSCCON_SPLLEN_MASK equ 0080h
OSCCON_SCS0_POSN equ 0000h
OSCCON_SCS0_POSITION equ 0000h
OSCCON_SCS0_SIZE equ 0001h
OSCCON_SCS0_LENGTH equ 0001h
OSCCON_SCS0_MASK equ 0001h
OSCCON_SCS1_POSN equ 0001h
OSCCON_SCS1_POSITION equ 0001h
OSCCON_SCS1_SIZE equ 0001h
OSCCON_SCS1_LENGTH equ 0001h
OSCCON_SCS1_MASK equ 0002h
OSCCON_IRCF0_POSN equ 0003h
OSCCON_IRCF0_POSITION equ 0003h
OSCCON_IRCF0_SIZE equ 0001h
OSCCON_IRCF0_LENGTH equ 0001h
OSCCON_IRCF0_MASK equ 0008h
OSCCON_IRCF1_POSN equ 0004h
OSCCON_IRCF1_POSITION equ 0004h
OSCCON_IRCF1_SIZE equ 0001h
OSCCON_IRCF1_LENGTH equ 0001h
OSCCON_IRCF1_MASK equ 0010h
OSCCON_IRCF2_POSN equ 0005h
OSCCON_IRCF2_POSITION equ 0005h
OSCCON_IRCF2_SIZE equ 0001h
OSCCON_IRCF2_LENGTH equ 0001h
OSCCON_IRCF2_MASK equ 0020h
OSCCON_IRCF3_POSN equ 0006h
OSCCON_IRCF3_POSITION equ 0006h
OSCCON_IRCF3_SIZE equ 0001h
OSCCON_IRCF3_LENGTH equ 0001h
OSCCON_IRCF3_MASK equ 0040h



OSCSTAT equ 009Ah

OSCSTAT_HFIOFS_POSN equ 0000h
OSCSTAT_HFIOFS_POSITION equ 0000h
OSCSTAT_HFIOFS_SIZE equ 0001h
OSCSTAT_HFIOFS_LENGTH equ 0001h
OSCSTAT_HFIOFS_MASK equ 0001h
OSCSTAT_LFIOFR_POSN equ 0001h
OSCSTAT_LFIOFR_POSITION equ 0001h
OSCSTAT_LFIOFR_SIZE equ 0001h
OSCSTAT_LFIOFR_LENGTH equ 0001h
OSCSTAT_LFIOFR_MASK equ 0002h
OSCSTAT_HFIOFR_POSN equ 0004h
OSCSTAT_HFIOFR_POSITION equ 0004h
OSCSTAT_HFIOFR_SIZE equ 0001h
OSCSTAT_HFIOFR_LENGTH equ 0001h
OSCSTAT_HFIOFR_MASK equ 0010h
OSCSTAT_OSTS_POSN equ 0005h
OSCSTAT_OSTS_POSITION equ 0005h
OSCSTAT_OSTS_SIZE equ 0001h
OSCSTAT_OSTS_LENGTH equ 0001h
OSCSTAT_OSTS_MASK equ 0020h
OSCSTAT_PLLR_POSN equ 0006h
OSCSTAT_PLLR_POSITION equ 0006h
OSCSTAT_PLLR_SIZE equ 0001h
OSCSTAT_PLLR_LENGTH equ 0001h
OSCSTAT_PLLR_MASK equ 0040h



ADRESL equ 009Bh

ADRESL_ADRESL_POSN equ 0000h
ADRESL_ADRESL_POSITION equ 0000h
ADRESL_ADRESL_SIZE equ 0008h
ADRESL_ADRESL_LENGTH equ 0008h
ADRESL_ADRESL_MASK equ 00FFh



ADRESH equ 009Ch

ADRESH_ADRESH_POSN equ 0000h
ADRESH_ADRESH_POSITION equ 0000h
ADRESH_ADRESH_SIZE equ 0008h
ADRESH_ADRESH_LENGTH equ 0008h
ADRESH_ADRESH_MASK equ 00FFh



ADCON0 equ 009Dh

ADCON0_ADON_POSN equ 0000h
ADCON0_ADON_POSITION equ 0000h
ADCON0_ADON_SIZE equ 0001h
ADCON0_ADON_LENGTH equ 0001h
ADCON0_ADON_MASK equ 0001h
ADCON0_GO_nDONE_POSN equ 0001h
ADCON0_GO_nDONE_POSITION equ 0001h
ADCON0_GO_nDONE_SIZE equ 0001h
ADCON0_GO_nDONE_LENGTH equ 0001h
ADCON0_GO_nDONE_MASK equ 0002h
ADCON0_CHS_POSN equ 0002h
ADCON0_CHS_POSITION equ 0002h
ADCON0_CHS_SIZE equ 0005h
ADCON0_CHS_LENGTH equ 0005h
ADCON0_CHS_MASK equ 007Ch
ADCON0_ADGO_POSN equ 0001h
ADCON0_ADGO_POSITION equ 0001h
ADCON0_ADGO_SIZE equ 0001h
ADCON0_ADGO_LENGTH equ 0001h
ADCON0_ADGO_MASK equ 0002h
ADCON0_CHS0_POSN equ 0002h
ADCON0_CHS0_POSITION equ 0002h
ADCON0_CHS0_SIZE equ 0001h
ADCON0_CHS0_LENGTH equ 0001h
ADCON0_CHS0_MASK equ 0004h
ADCON0_CHS1_POSN equ 0003h
ADCON0_CHS1_POSITION equ 0003h
ADCON0_CHS1_SIZE equ 0001h
ADCON0_CHS1_LENGTH equ 0001h
ADCON0_CHS1_MASK equ 0008h
ADCON0_CHS2_POSN equ 0004h
ADCON0_CHS2_POSITION equ 0004h
ADCON0_CHS2_SIZE equ 0001h
ADCON0_CHS2_LENGTH equ 0001h
ADCON0_CHS2_MASK equ 0010h
ADCON0_CHS3_POSN equ 0005h
ADCON0_CHS3_POSITION equ 0005h
ADCON0_CHS3_SIZE equ 0001h
ADCON0_CHS3_LENGTH equ 0001h
ADCON0_CHS3_MASK equ 0020h
ADCON0_CHS4_POSN equ 0006h
ADCON0_CHS4_POSITION equ 0006h
ADCON0_CHS4_SIZE equ 0001h
ADCON0_CHS4_LENGTH equ 0001h
ADCON0_CHS4_MASK equ 0040h
ADCON0_GO_POSN equ 0001h
ADCON0_GO_POSITION equ 0001h
ADCON0_GO_SIZE equ 0001h
ADCON0_GO_LENGTH equ 0001h
ADCON0_GO_MASK equ 0002h



ADCON1 equ 009Eh

ADCON1_ADPREF_POSN equ 0000h
ADCON1_ADPREF_POSITION equ 0000h
ADCON1_ADPREF_SIZE equ 0002h
ADCON1_ADPREF_LENGTH equ 0002h
ADCON1_ADPREF_MASK equ 0003h
ADCON1_ADCS_POSN equ 0004h
ADCON1_ADCS_POSITION equ 0004h
ADCON1_ADCS_SIZE equ 0003h
ADCON1_ADCS_LENGTH equ 0003h
ADCON1_ADCS_MASK equ 0070h
ADCON1_ADFM_POSN equ 0007h
ADCON1_ADFM_POSITION equ 0007h
ADCON1_ADFM_SIZE equ 0001h
ADCON1_ADFM_LENGTH equ 0001h
ADCON1_ADFM_MASK equ 0080h
ADCON1_ADPREF0_POSN equ 0000h
ADCON1_ADPREF0_POSITION equ 0000h
ADCON1_ADPREF0_SIZE equ 0001h
ADCON1_ADPREF0_LENGTH equ 0001h
ADCON1_ADPREF0_MASK equ 0001h
ADCON1_ADPREF1_POSN equ 0001h
ADCON1_ADPREF1_POSITION equ 0001h
ADCON1_ADPREF1_SIZE equ 0001h
ADCON1_ADPREF1_LENGTH equ 0001h
ADCON1_ADPREF1_MASK equ 0002h
ADCON1_ADCS0_POSN equ 0004h
ADCON1_ADCS0_POSITION equ 0004h
ADCON1_ADCS0_SIZE equ 0001h
ADCON1_ADCS0_LENGTH equ 0001h
ADCON1_ADCS0_MASK equ 0010h
ADCON1_ADCS1_POSN equ 0005h
ADCON1_ADCS1_POSITION equ 0005h
ADCON1_ADCS1_SIZE equ 0001h
ADCON1_ADCS1_LENGTH equ 0001h
ADCON1_ADCS1_MASK equ 0020h
ADCON1_ADCS2_POSN equ 0006h
ADCON1_ADCS2_POSITION equ 0006h
ADCON1_ADCS2_SIZE equ 0001h
ADCON1_ADCS2_LENGTH equ 0001h
ADCON1_ADCS2_MASK equ 0040h



ADCON2 equ 009Fh

ADCON2_TRIGSEL0_POSN equ 0004h
ADCON2_TRIGSEL0_POSITION equ 0004h
ADCON2_TRIGSEL0_SIZE equ 0001h
ADCON2_TRIGSEL0_LENGTH equ 0001h
ADCON2_TRIGSEL0_MASK equ 0010h
ADCON2_TRIGSEL1_POSN equ 0005h
ADCON2_TRIGSEL1_POSITION equ 0005h
ADCON2_TRIGSEL1_SIZE equ 0001h
ADCON2_TRIGSEL1_LENGTH equ 0001h
ADCON2_TRIGSEL1_MASK equ 0020h
ADCON2_TRIGSEL2_POSN equ 0006h
ADCON2_TRIGSEL2_POSITION equ 0006h
ADCON2_TRIGSEL2_SIZE equ 0001h
ADCON2_TRIGSEL2_LENGTH equ 0001h
ADCON2_TRIGSEL2_MASK equ 0040h
ADCON2_TRIGSEL_POSN equ 0004h
ADCON2_TRIGSEL_POSITION equ 0004h
ADCON2_TRIGSEL_SIZE equ 0003h
ADCON2_TRIGSEL_LENGTH equ 0003h
ADCON2_TRIGSEL_MASK equ 0070h



LATA equ 010Ch

LATA_LATA0_POSN equ 0000h
LATA_LATA0_POSITION equ 0000h
LATA_LATA0_SIZE equ 0001h
LATA_LATA0_LENGTH equ 0001h
LATA_LATA0_MASK equ 0001h
LATA_LATA1_POSN equ 0001h
LATA_LATA1_POSITION equ 0001h
LATA_LATA1_SIZE equ 0001h
LATA_LATA1_LENGTH equ 0001h
LATA_LATA1_MASK equ 0002h
LATA_LATA2_POSN equ 0002h
LATA_LATA2_POSITION equ 0002h
LATA_LATA2_SIZE equ 0001h
LATA_LATA2_LENGTH equ 0001h
LATA_LATA2_MASK equ 0004h
LATA_LATA4_POSN equ 0004h
LATA_LATA4_POSITION equ 0004h
LATA_LATA4_SIZE equ 0001h
LATA_LATA4_LENGTH equ 0001h
LATA_LATA4_MASK equ 0010h
LATA_LATA5_POSN equ 0005h
LATA_LATA5_POSITION equ 0005h
LATA_LATA5_SIZE equ 0001h
LATA_LATA5_LENGTH equ 0001h
LATA_LATA5_MASK equ 0020h



BORCON equ 0116h

BORCON_BORRDY_POSN equ 0000h
BORCON_BORRDY_POSITION equ 0000h
BORCON_BORRDY_SIZE equ 0001h
BORCON_BORRDY_LENGTH equ 0001h
BORCON_BORRDY_MASK equ 0001h
BORCON_BORFS_POSN equ 0006h
BORCON_BORFS_POSITION equ 0006h
BORCON_BORFS_SIZE equ 0001h
BORCON_BORFS_LENGTH equ 0001h
BORCON_BORFS_MASK equ 0040h
BORCON_SBOREN_POSN equ 0007h
BORCON_SBOREN_POSITION equ 0007h
BORCON_SBOREN_SIZE equ 0001h
BORCON_SBOREN_LENGTH equ 0001h
BORCON_SBOREN_MASK equ 0080h



FVRCON equ 0117h

FVRCON_ADFVR0_POSN equ 0000h
FVRCON_ADFVR0_POSITION equ 0000h
FVRCON_ADFVR0_SIZE equ 0001h
FVRCON_ADFVR0_LENGTH equ 0001h
FVRCON_ADFVR0_MASK equ 0001h
FVRCON_ADFVR1_POSN equ 0001h
FVRCON_ADFVR1_POSITION equ 0001h
FVRCON_ADFVR1_SIZE equ 0001h
FVRCON_ADFVR1_LENGTH equ 0001h
FVRCON_ADFVR1_MASK equ 0002h
FVRCON_TSRNG_POSN equ 0004h
FVRCON_TSRNG_POSITION equ 0004h
FVRCON_TSRNG_SIZE equ 0001h
FVRCON_TSRNG_LENGTH equ 0001h
FVRCON_TSRNG_MASK equ 0010h
FVRCON_TSEN_POSN equ 0005h
FVRCON_TSEN_POSITION equ 0005h
FVRCON_TSEN_SIZE equ 0001h
FVRCON_TSEN_LENGTH equ 0001h
FVRCON_TSEN_MASK equ 0020h
FVRCON_FVRRDY_POSN equ 0006h
FVRCON_FVRRDY_POSITION equ 0006h
FVRCON_FVRRDY_SIZE equ 0001h
FVRCON_FVRRDY_LENGTH equ 0001h
FVRCON_FVRRDY_MASK equ 0040h
FVRCON_FVREN_POSN equ 0007h
FVRCON_FVREN_POSITION equ 0007h
FVRCON_FVREN_SIZE equ 0001h
FVRCON_FVREN_LENGTH equ 0001h
FVRCON_FVREN_MASK equ 0080h
FVRCON_ADFVR_POSN equ 0000h
FVRCON_ADFVR_POSITION equ 0000h
FVRCON_ADFVR_SIZE equ 0002h
FVRCON_ADFVR_LENGTH equ 0002h
FVRCON_ADFVR_MASK equ 0003h



APFCON equ 011Dh

APFCON_SDSEL_POSN equ 0004h
APFCON_SDSEL_POSITION equ 0004h
APFCON_SDSEL_SIZE equ 0001h
APFCON_SDSEL_LENGTH equ 0001h
APFCON_SDSEL_MASK equ 0010h
APFCON_SSSEL_POSN equ 0005h
APFCON_SSSEL_POSITION equ 0005h
APFCON_SSSEL_SIZE equ 0001h
APFCON_SSSEL_LENGTH equ 0001h
APFCON_SSSEL_MASK equ 0020h
APFCON_SDOSEL_POSN equ 0006h
APFCON_SDOSEL_POSITION equ 0006h
APFCON_SDOSEL_SIZE equ 0001h
APFCON_SDOSEL_LENGTH equ 0001h
APFCON_SDOSEL_MASK equ 0040h
APFCON_SS1SEL_POSN equ 0005h
APFCON_SS1SEL_POSITION equ 0005h
APFCON_SS1SEL_SIZE equ 0001h
APFCON_SS1SEL_LENGTH equ 0001h
APFCON_SS1SEL_MASK equ 0020h
APFCON_SDO1SEL_POSN equ 0006h
APFCON_SDO1SEL_POSITION equ 0006h
APFCON_SDO1SEL_SIZE equ 0001h
APFCON_SDO1SEL_LENGTH equ 0001h
APFCON_SDO1SEL_MASK equ 0040h



ANSELA equ 018Ch

ANSELA_ANSA0_POSN equ 0000h
ANSELA_ANSA0_POSITION equ 0000h
ANSELA_ANSA0_SIZE equ 0001h
ANSELA_ANSA0_LENGTH equ 0001h
ANSELA_ANSA0_MASK equ 0001h
ANSELA_ANSA1_POSN equ 0001h
ANSELA_ANSA1_POSITION equ 0001h
ANSELA_ANSA1_SIZE equ 0001h
ANSELA_ANSA1_LENGTH equ 0001h
ANSELA_ANSA1_MASK equ 0002h
ANSELA_ANSA2_POSN equ 0002h
ANSELA_ANSA2_POSITION equ 0002h
ANSELA_ANSA2_SIZE equ 0001h
ANSELA_ANSA2_LENGTH equ 0001h
ANSELA_ANSA2_MASK equ 0004h
ANSELA_ANSA4_POSN equ 0004h
ANSELA_ANSA4_POSITION equ 0004h
ANSELA_ANSA4_SIZE equ 0001h
ANSELA_ANSA4_LENGTH equ 0001h
ANSELA_ANSA4_MASK equ 0010h
ANSELA_ANSA5_POSN equ 0005h
ANSELA_ANSA5_POSITION equ 0005h
ANSELA_ANSA5_SIZE equ 0001h
ANSELA_ANSA5_LENGTH equ 0001h
ANSELA_ANSA5_MASK equ 0020h
ANSELA_ANSELA_POSN equ 0000h
ANSELA_ANSELA_POSITION equ 0000h
ANSELA_ANSELA_SIZE equ 0005h
ANSELA_ANSELA_LENGTH equ 0005h
ANSELA_ANSELA_MASK equ 001Fh



PMADRL equ 0191h

PMADRL_PMADRL_POSN equ 0000h
PMADRL_PMADRL_POSITION equ 0000h
PMADRL_PMADRL_SIZE equ 0008h
PMADRL_PMADRL_LENGTH equ 0008h
PMADRL_PMADRL_MASK equ 00FFh



PMADRH equ 0192h

PMADRH_PMADRH_POSN equ 0000h
PMADRH_PMADRH_POSITION equ 0000h
PMADRH_PMADRH_SIZE equ 0007h
PMADRH_PMADRH_LENGTH equ 0007h
PMADRH_PMADRH_MASK equ 007Fh



PMDATL equ 0193h

PMDATL_PMDATL_POSN equ 0000h
PMDATL_PMDATL_POSITION equ 0000h
PMDATL_PMDATL_SIZE equ 0008h
PMDATL_PMDATL_LENGTH equ 0008h
PMDATL_PMDATL_MASK equ 00FFh



PMDATH equ 0194h

PMDATH_PMDATH_POSN equ 0000h
PMDATH_PMDATH_POSITION equ 0000h
PMDATH_PMDATH_SIZE equ 0006h
PMDATH_PMDATH_LENGTH equ 0006h
PMDATH_PMDATH_MASK equ 003Fh



PMCON1 equ 0195h

PMCON1_RD_POSN equ 0000h
PMCON1_RD_POSITION equ 0000h
PMCON1_RD_SIZE equ 0001h
PMCON1_RD_LENGTH equ 0001h
PMCON1_RD_MASK equ 0001h
PMCON1_WR_POSN equ 0001h
PMCON1_WR_POSITION equ 0001h
PMCON1_WR_SIZE equ 0001h
PMCON1_WR_LENGTH equ 0001h
PMCON1_WR_MASK equ 0002h
PMCON1_WREN_POSN equ 0002h
PMCON1_WREN_POSITION equ 0002h
PMCON1_WREN_SIZE equ 0001h
PMCON1_WREN_LENGTH equ 0001h
PMCON1_WREN_MASK equ 0004h
PMCON1_WRERR_POSN equ 0003h
PMCON1_WRERR_POSITION equ 0003h
PMCON1_WRERR_SIZE equ 0001h
PMCON1_WRERR_LENGTH equ 0001h
PMCON1_WRERR_MASK equ 0008h
PMCON1_FREE_POSN equ 0004h
PMCON1_FREE_POSITION equ 0004h
PMCON1_FREE_SIZE equ 0001h
PMCON1_FREE_LENGTH equ 0001h
PMCON1_FREE_MASK equ 0010h
PMCON1_LWLO_POSN equ 0005h
PMCON1_LWLO_POSITION equ 0005h
PMCON1_LWLO_SIZE equ 0001h
PMCON1_LWLO_LENGTH equ 0001h
PMCON1_LWLO_MASK equ 0020h
PMCON1_CFGS_POSN equ 0006h
PMCON1_CFGS_POSITION equ 0006h
PMCON1_CFGS_SIZE equ 0001h
PMCON1_CFGS_LENGTH equ 0001h
PMCON1_CFGS_MASK equ 0040h



PMCON2 equ 0196h

PMCON2_PMCON2_POSN equ 0000h
PMCON2_PMCON2_POSITION equ 0000h
PMCON2_PMCON2_SIZE equ 0008h
PMCON2_PMCON2_LENGTH equ 0008h
PMCON2_PMCON2_MASK equ 00FFh



WPUA equ 020Ch

WPUA_WPUA0_POSN equ 0000h
WPUA_WPUA0_POSITION equ 0000h
WPUA_WPUA0_SIZE equ 0001h
WPUA_WPUA0_LENGTH equ 0001h
WPUA_WPUA0_MASK equ 0001h
WPUA_WPUA1_POSN equ 0001h
WPUA_WPUA1_POSITION equ 0001h
WPUA_WPUA1_SIZE equ 0001h
WPUA_WPUA1_LENGTH equ 0001h
WPUA_WPUA1_MASK equ 0002h
WPUA_WPUA2_POSN equ 0002h
WPUA_WPUA2_POSITION equ 0002h
WPUA_WPUA2_SIZE equ 0001h
WPUA_WPUA2_LENGTH equ 0001h
WPUA_WPUA2_MASK equ 0004h
WPUA_WPUA3_POSN equ 0003h
WPUA_WPUA3_POSITION equ 0003h
WPUA_WPUA3_SIZE equ 0001h
WPUA_WPUA3_LENGTH equ 0001h
WPUA_WPUA3_MASK equ 0008h
WPUA_WPUA4_POSN equ 0004h
WPUA_WPUA4_POSITION equ 0004h
WPUA_WPUA4_SIZE equ 0001h
WPUA_WPUA4_LENGTH equ 0001h
WPUA_WPUA4_MASK equ 0010h
WPUA_WPUA5_POSN equ 0005h
WPUA_WPUA5_POSITION equ 0005h
WPUA_WPUA5_SIZE equ 0001h
WPUA_WPUA5_LENGTH equ 0001h
WPUA_WPUA5_MASK equ 0020h
WPUA_WPUA_POSN equ 0000h
WPUA_WPUA_POSITION equ 0000h
WPUA_WPUA_SIZE equ 0006h
WPUA_WPUA_LENGTH equ 0006h
WPUA_WPUA_MASK equ 003Fh



SSP1BUF equ 0211h

SSP1BUF_SSPBUF_POSN equ 0000h
SSP1BUF_SSPBUF_POSITION equ 0000h
SSP1BUF_SSPBUF_SIZE equ 0008h
SSP1BUF_SSPBUF_LENGTH equ 0008h
SSP1BUF_SSPBUF_MASK equ 00FFh



SSP1ADD equ 0212h

SSP1ADD_SSPADD_POSN equ 0000h
SSP1ADD_SSPADD_POSITION equ 0000h
SSP1ADD_SSPADD_SIZE equ 0008h
SSP1ADD_SSPADD_LENGTH equ 0008h
SSP1ADD_SSPADD_MASK equ 00FFh



SSP1MSK equ 0213h

SSP1MSK_SSPMSK_POSN equ 0000h
SSP1MSK_SSPMSK_POSITION equ 0000h
SSP1MSK_SSPMSK_SIZE equ 0008h
SSP1MSK_SSPMSK_LENGTH equ 0008h
SSP1MSK_SSPMSK_MASK equ 00FFh



SSP1STAT equ 0214h

SSP1STAT_BF_POSN equ 0000h
SSP1STAT_BF_POSITION equ 0000h
SSP1STAT_BF_SIZE equ 0001h
SSP1STAT_BF_LENGTH equ 0001h
SSP1STAT_BF_MASK equ 0001h
SSP1STAT_UA_POSN equ 0001h
SSP1STAT_UA_POSITION equ 0001h
SSP1STAT_UA_SIZE equ 0001h
SSP1STAT_UA_LENGTH equ 0001h
SSP1STAT_UA_MASK equ 0002h
SSP1STAT_R_nW_POSN equ 0002h
SSP1STAT_R_nW_POSITION equ 0002h
SSP1STAT_R_nW_SIZE equ 0001h
SSP1STAT_R_nW_LENGTH equ 0001h
SSP1STAT_R_nW_MASK equ 0004h
SSP1STAT_S_POSN equ 0003h
SSP1STAT_S_POSITION equ 0003h
SSP1STAT_S_SIZE equ 0001h
SSP1STAT_S_LENGTH equ 0001h
SSP1STAT_S_MASK equ 0008h
SSP1STAT_P_POSN equ 0004h
SSP1STAT_P_POSITION equ 0004h
SSP1STAT_P_SIZE equ 0001h
SSP1STAT_P_LENGTH equ 0001h
SSP1STAT_P_MASK equ 0010h
SSP1STAT_D_nA_POSN equ 0005h
SSP1STAT_D_nA_POSITION equ 0005h
SSP1STAT_D_nA_SIZE equ 0001h
SSP1STAT_D_nA_LENGTH equ 0001h
SSP1STAT_D_nA_MASK equ 0020h
SSP1STAT_CKE_POSN equ 0006h
SSP1STAT_CKE_POSITION equ 0006h
SSP1STAT_CKE_SIZE equ 0001h
SSP1STAT_CKE_LENGTH equ 0001h
SSP1STAT_CKE_MASK equ 0040h
SSP1STAT_SMP_POSN equ 0007h
SSP1STAT_SMP_POSITION equ 0007h
SSP1STAT_SMP_SIZE equ 0001h
SSP1STAT_SMP_LENGTH equ 0001h
SSP1STAT_SMP_MASK equ 0080h



SSP1CON1 equ 0215h

SSP1CON1_SSPM_POSN equ 0000h
SSP1CON1_SSPM_POSITION equ 0000h
SSP1CON1_SSPM_SIZE equ 0004h
SSP1CON1_SSPM_LENGTH equ 0004h
SSP1CON1_SSPM_MASK equ 000Fh
SSP1CON1_CKP_POSN equ 0004h
SSP1CON1_CKP_POSITION equ 0004h
SSP1CON1_CKP_SIZE equ 0001h
SSP1CON1_CKP_LENGTH equ 0001h
SSP1CON1_CKP_MASK equ 0010h
SSP1CON1_SSPEN_POSN equ 0005h
SSP1CON1_SSPEN_POSITION equ 0005h
SSP1CON1_SSPEN_SIZE equ 0001h
SSP1CON1_SSPEN_LENGTH equ 0001h
SSP1CON1_SSPEN_MASK equ 0020h
SSP1CON1_SSPOV_POSN equ 0006h
SSP1CON1_SSPOV_POSITION equ 0006h
SSP1CON1_SSPOV_SIZE equ 0001h
SSP1CON1_SSPOV_LENGTH equ 0001h
SSP1CON1_SSPOV_MASK equ 0040h
SSP1CON1_WCOL_POSN equ 0007h
SSP1CON1_WCOL_POSITION equ 0007h
SSP1CON1_WCOL_SIZE equ 0001h
SSP1CON1_WCOL_LENGTH equ 0001h
SSP1CON1_WCOL_MASK equ 0080h
SSP1CON1_SSPM0_POSN equ 0000h
SSP1CON1_SSPM0_POSITION equ 0000h
SSP1CON1_SSPM0_SIZE equ 0001h
SSP1CON1_SSPM0_LENGTH equ 0001h
SSP1CON1_SSPM0_MASK equ 0001h
SSP1CON1_SSPM1_POSN equ 0001h
SSP1CON1_SSPM1_POSITION equ 0001h
SSP1CON1_SSPM1_SIZE equ 0001h
SSP1CON1_SSPM1_LENGTH equ 0001h
SSP1CON1_SSPM1_MASK equ 0002h
SSP1CON1_SSPM2_POSN equ 0002h
SSP1CON1_SSPM2_POSITION equ 0002h
SSP1CON1_SSPM2_SIZE equ 0001h
SSP1CON1_SSPM2_LENGTH equ 0001h
SSP1CON1_SSPM2_MASK equ 0004h
SSP1CON1_SSPM3_POSN equ 0003h
SSP1CON1_SSPM3_POSITION equ 0003h
SSP1CON1_SSPM3_SIZE equ 0001h
SSP1CON1_SSPM3_LENGTH equ 0001h
SSP1CON1_SSPM3_MASK equ 0008h



SSP1CON2 equ 0216h

SSP1CON2_SEN_POSN equ 0000h
SSP1CON2_SEN_POSITION equ 0000h
SSP1CON2_SEN_SIZE equ 0001h
SSP1CON2_SEN_LENGTH equ 0001h
SSP1CON2_SEN_MASK equ 0001h
SSP1CON2_RSEN_POSN equ 0001h
SSP1CON2_RSEN_POSITION equ 0001h
SSP1CON2_RSEN_SIZE equ 0001h
SSP1CON2_RSEN_LENGTH equ 0001h
SSP1CON2_RSEN_MASK equ 0002h
SSP1CON2_PEN_POSN equ 0002h
SSP1CON2_PEN_POSITION equ 0002h
SSP1CON2_PEN_SIZE equ 0001h
SSP1CON2_PEN_LENGTH equ 0001h
SSP1CON2_PEN_MASK equ 0004h
SSP1CON2_RCEN_POSN equ 0003h
SSP1CON2_RCEN_POSITION equ 0003h
SSP1CON2_RCEN_SIZE equ 0001h
SSP1CON2_RCEN_LENGTH equ 0001h
SSP1CON2_RCEN_MASK equ 0008h
SSP1CON2_ACKEN_POSN equ 0004h
SSP1CON2_ACKEN_POSITION equ 0004h
SSP1CON2_ACKEN_SIZE equ 0001h
SSP1CON2_ACKEN_LENGTH equ 0001h
SSP1CON2_ACKEN_MASK equ 0010h
SSP1CON2_ACKDT_POSN equ 0005h
SSP1CON2_ACKDT_POSITION equ 0005h
SSP1CON2_ACKDT_SIZE equ 0001h
SSP1CON2_ACKDT_LENGTH equ 0001h
SSP1CON2_ACKDT_MASK equ 0020h
SSP1CON2_ACKSTAT_POSN equ 0006h
SSP1CON2_ACKSTAT_POSITION equ 0006h
SSP1CON2_ACKSTAT_SIZE equ 0001h
SSP1CON2_ACKSTAT_LENGTH equ 0001h
SSP1CON2_ACKSTAT_MASK equ 0040h
SSP1CON2_GCEN_POSN equ 0007h
SSP1CON2_GCEN_POSITION equ 0007h
SSP1CON2_GCEN_SIZE equ 0001h
SSP1CON2_GCEN_LENGTH equ 0001h
SSP1CON2_GCEN_MASK equ 0080h



SSP1CON3 equ 0217h

SSP1CON3_DHEN_POSN equ 0000h
SSP1CON3_DHEN_POSITION equ 0000h
SSP1CON3_DHEN_SIZE equ 0001h
SSP1CON3_DHEN_LENGTH equ 0001h
SSP1CON3_DHEN_MASK equ 0001h
SSP1CON3_AHEN_POSN equ 0001h
SSP1CON3_AHEN_POSITION equ 0001h
SSP1CON3_AHEN_SIZE equ 0001h
SSP1CON3_AHEN_LENGTH equ 0001h
SSP1CON3_AHEN_MASK equ 0002h
SSP1CON3_SBCDE_POSN equ 0002h
SSP1CON3_SBCDE_POSITION equ 0002h
SSP1CON3_SBCDE_SIZE equ 0001h
SSP1CON3_SBCDE_LENGTH equ 0001h
SSP1CON3_SBCDE_MASK equ 0004h
SSP1CON3_SDAHT_POSN equ 0003h
SSP1CON3_SDAHT_POSITION equ 0003h
SSP1CON3_SDAHT_SIZE equ 0001h
SSP1CON3_SDAHT_LENGTH equ 0001h
SSP1CON3_SDAHT_MASK equ 0008h
SSP1CON3_BOEN_POSN equ 0004h
SSP1CON3_BOEN_POSITION equ 0004h
SSP1CON3_BOEN_SIZE equ 0001h
SSP1CON3_BOEN_LENGTH equ 0001h
SSP1CON3_BOEN_MASK equ 0010h
SSP1CON3_SCIE_POSN equ 0005h
SSP1CON3_SCIE_POSITION equ 0005h
SSP1CON3_SCIE_SIZE equ 0001h
SSP1CON3_SCIE_LENGTH equ 0001h
SSP1CON3_SCIE_MASK equ 0020h
SSP1CON3_PCIE_POSN equ 0006h
SSP1CON3_PCIE_POSITION equ 0006h
SSP1CON3_PCIE_SIZE equ 0001h
SSP1CON3_PCIE_LENGTH equ 0001h
SSP1CON3_PCIE_MASK equ 0040h
SSP1CON3_ACKTIM_POSN equ 0007h
SSP1CON3_ACKTIM_POSITION equ 0007h
SSP1CON3_ACKTIM_SIZE equ 0001h
SSP1CON3_ACKTIM_LENGTH equ 0001h
SSP1CON3_ACKTIM_MASK equ 0080h



IOCAP equ 0391h

IOCAP_IOCAP0_POSN equ 0000h
IOCAP_IOCAP0_POSITION equ 0000h
IOCAP_IOCAP0_SIZE equ 0001h
IOCAP_IOCAP0_LENGTH equ 0001h
IOCAP_IOCAP0_MASK equ 0001h
IOCAP_IOCAP1_POSN equ 0001h
IOCAP_IOCAP1_POSITION equ 0001h
IOCAP_IOCAP1_SIZE equ 0001h
IOCAP_IOCAP1_LENGTH equ 0001h
IOCAP_IOCAP1_MASK equ 0002h
IOCAP_IOCAP2_POSN equ 0002h
IOCAP_IOCAP2_POSITION equ 0002h
IOCAP_IOCAP2_SIZE equ 0001h
IOCAP_IOCAP2_LENGTH equ 0001h
IOCAP_IOCAP2_MASK equ 0004h
IOCAP_IOCAP3_POSN equ 0003h
IOCAP_IOCAP3_POSITION equ 0003h
IOCAP_IOCAP3_SIZE equ 0001h
IOCAP_IOCAP3_LENGTH equ 0001h
IOCAP_IOCAP3_MASK equ 0008h
IOCAP_IOCAP4_POSN equ 0004h
IOCAP_IOCAP4_POSITION equ 0004h
IOCAP_IOCAP4_SIZE equ 0001h
IOCAP_IOCAP4_LENGTH equ 0001h
IOCAP_IOCAP4_MASK equ 0010h
IOCAP_IOCAP5_POSN equ 0005h
IOCAP_IOCAP5_POSITION equ 0005h
IOCAP_IOCAP5_SIZE equ 0001h
IOCAP_IOCAP5_LENGTH equ 0001h
IOCAP_IOCAP5_MASK equ 0020h
IOCAP_IOCAP_POSN equ 0000h
IOCAP_IOCAP_POSITION equ 0000h
IOCAP_IOCAP_SIZE equ 0006h
IOCAP_IOCAP_LENGTH equ 0006h
IOCAP_IOCAP_MASK equ 003Fh



IOCAN equ 0392h

IOCAN_IOCAN0_POSN equ 0000h
IOCAN_IOCAN0_POSITION equ 0000h
IOCAN_IOCAN0_SIZE equ 0001h
IOCAN_IOCAN0_LENGTH equ 0001h
IOCAN_IOCAN0_MASK equ 0001h
IOCAN_IOCAN1_POSN equ 0001h
IOCAN_IOCAN1_POSITION equ 0001h
IOCAN_IOCAN1_SIZE equ 0001h
IOCAN_IOCAN1_LENGTH equ 0001h
IOCAN_IOCAN1_MASK equ 0002h
IOCAN_IOCAN2_POSN equ 0002h
IOCAN_IOCAN2_POSITION equ 0002h
IOCAN_IOCAN2_SIZE equ 0001h
IOCAN_IOCAN2_LENGTH equ 0001h
IOCAN_IOCAN2_MASK equ 0004h
IOCAN_IOCAN3_POSN equ 0003h
IOCAN_IOCAN3_POSITION equ 0003h
IOCAN_IOCAN3_SIZE equ 0001h
IOCAN_IOCAN3_LENGTH equ 0001h
IOCAN_IOCAN3_MASK equ 0008h
IOCAN_IOCAN4_POSN equ 0004h
IOCAN_IOCAN4_POSITION equ 0004h
IOCAN_IOCAN4_SIZE equ 0001h
IOCAN_IOCAN4_LENGTH equ 0001h
IOCAN_IOCAN4_MASK equ 0010h
IOCAN_IOCAN5_POSN equ 0005h
IOCAN_IOCAN5_POSITION equ 0005h
IOCAN_IOCAN5_SIZE equ 0001h
IOCAN_IOCAN5_LENGTH equ 0001h
IOCAN_IOCAN5_MASK equ 0020h
IOCAN_IOCAN_POSN equ 0000h
IOCAN_IOCAN_POSITION equ 0000h
IOCAN_IOCAN_SIZE equ 0006h
IOCAN_IOCAN_LENGTH equ 0006h
IOCAN_IOCAN_MASK equ 003Fh



IOCAF equ 0393h

IOCAF_IOCAF0_POSN equ 0000h
IOCAF_IOCAF0_POSITION equ 0000h
IOCAF_IOCAF0_SIZE equ 0001h
IOCAF_IOCAF0_LENGTH equ 0001h
IOCAF_IOCAF0_MASK equ 0001h
IOCAF_IOCAF1_POSN equ 0001h
IOCAF_IOCAF1_POSITION equ 0001h
IOCAF_IOCAF1_SIZE equ 0001h
IOCAF_IOCAF1_LENGTH equ 0001h
IOCAF_IOCAF1_MASK equ 0002h
IOCAF_IOCAF2_POSN equ 0002h
IOCAF_IOCAF2_POSITION equ 0002h
IOCAF_IOCAF2_SIZE equ 0001h
IOCAF_IOCAF2_LENGTH equ 0001h
IOCAF_IOCAF2_MASK equ 0004h
IOCAF_IOCAF3_POSN equ 0003h
IOCAF_IOCAF3_POSITION equ 0003h
IOCAF_IOCAF3_SIZE equ 0001h
IOCAF_IOCAF3_LENGTH equ 0001h
IOCAF_IOCAF3_MASK equ 0008h
IOCAF_IOCAF4_POSN equ 0004h
IOCAF_IOCAF4_POSITION equ 0004h
IOCAF_IOCAF4_SIZE equ 0001h
IOCAF_IOCAF4_LENGTH equ 0001h
IOCAF_IOCAF4_MASK equ 0010h
IOCAF_IOCAF5_POSN equ 0005h
IOCAF_IOCAF5_POSITION equ 0005h
IOCAF_IOCAF5_SIZE equ 0001h
IOCAF_IOCAF5_LENGTH equ 0001h
IOCAF_IOCAF5_MASK equ 0020h
IOCAF_IOCAF_POSN equ 0000h
IOCAF_IOCAF_POSITION equ 0000h
IOCAF_IOCAF_SIZE equ 0006h
IOCAF_IOCAF_LENGTH equ 0006h
IOCAF_IOCAF_MASK equ 003Fh



STATUS_SHAD equ 0FE4h

STATUS_SHAD_C_SHAD_POSN equ 0000h
STATUS_SHAD_C_SHAD_POSITION equ 0000h
STATUS_SHAD_C_SHAD_SIZE equ 0001h
STATUS_SHAD_C_SHAD_LENGTH equ 0001h
STATUS_SHAD_C_SHAD_MASK equ 0001h
STATUS_SHAD_DC_SHAD_POSN equ 0001h
STATUS_SHAD_DC_SHAD_POSITION equ 0001h
STATUS_SHAD_DC_SHAD_SIZE equ 0001h
STATUS_SHAD_DC_SHAD_LENGTH equ 0001h
STATUS_SHAD_DC_SHAD_MASK equ 0002h
STATUS_SHAD_Z_SHAD_POSN equ 0002h
STATUS_SHAD_Z_SHAD_POSITION equ 0002h
STATUS_SHAD_Z_SHAD_SIZE equ 0001h
STATUS_SHAD_Z_SHAD_LENGTH equ 0001h
STATUS_SHAD_Z_SHAD_MASK equ 0004h



WREG_SHAD equ 0FE5h

WREG_SHAD_WREG_SHAD_POSN equ 0000h
WREG_SHAD_WREG_SHAD_POSITION equ 0000h
WREG_SHAD_WREG_SHAD_SIZE equ 0008h
WREG_SHAD_WREG_SHAD_LENGTH equ 0008h
WREG_SHAD_WREG_SHAD_MASK equ 00FFh



BSR_SHAD equ 0FE6h

BSR_SHAD_BSR_SHAD_POSN equ 0000h
BSR_SHAD_BSR_SHAD_POSITION equ 0000h
BSR_SHAD_BSR_SHAD_SIZE equ 0005h
BSR_SHAD_BSR_SHAD_LENGTH equ 0005h
BSR_SHAD_BSR_SHAD_MASK equ 001Fh



PCLATH_SHAD equ 0FE7h

PCLATH_SHAD_PCLATH_SHAD_POSN equ 0000h
PCLATH_SHAD_PCLATH_SHAD_POSITION equ 0000h
PCLATH_SHAD_PCLATH_SHAD_SIZE equ 0007h
PCLATH_SHAD_PCLATH_SHAD_LENGTH equ 0007h
PCLATH_SHAD_PCLATH_SHAD_MASK equ 007Fh



FSR0L_SHAD equ 0FE8h

FSR0L_SHAD_FSR0L_SHAD_POSN equ 0000h
FSR0L_SHAD_FSR0L_SHAD_POSITION equ 0000h
FSR0L_SHAD_FSR0L_SHAD_SIZE equ 0008h
FSR0L_SHAD_FSR0L_SHAD_LENGTH equ 0008h
FSR0L_SHAD_FSR0L_SHAD_MASK equ 00FFh



FSR0H_SHAD equ 0FE9h

FSR0H_SHAD_FSR0H_SHAD_POSN equ 0000h
FSR0H_SHAD_FSR0H_SHAD_POSITION equ 0000h
FSR0H_SHAD_FSR0H_SHAD_SIZE equ 0008h
FSR0H_SHAD_FSR0H_SHAD_LENGTH equ 0008h
FSR0H_SHAD_FSR0H_SHAD_MASK equ 00FFh



FSR1L_SHAD equ 0FEAh

FSR1L_SHAD_FSR1L_SHAD_POSN equ 0000h
FSR1L_SHAD_FSR1L_SHAD_POSITION equ 0000h
FSR1L_SHAD_FSR1L_SHAD_SIZE equ 0008h
FSR1L_SHAD_FSR1L_SHAD_LENGTH equ 0008h
FSR1L_SHAD_FSR1L_SHAD_MASK equ 00FFh



FSR1H_SHAD equ 0FEBh

FSR1H_SHAD_FSR1H_SHAD_POSN equ 0000h
FSR1H_SHAD_FSR1H_SHAD_POSITION equ 0000h
FSR1H_SHAD_FSR1H_SHAD_SIZE equ 0008h
FSR1H_SHAD_FSR1H_SHAD_LENGTH equ 0008h
FSR1H_SHAD_FSR1H_SHAD_MASK equ 00FFh



STKPTR equ 0FEDh

STKPTR_STKPTR_POSN equ 0000h
STKPTR_STKPTR_POSITION equ 0000h
STKPTR_STKPTR_SIZE equ 0005h
STKPTR_STKPTR_LENGTH equ 0005h
STKPTR_STKPTR_MASK equ 001Fh



TOSL equ 0FEEh

TOSL_TOSL_POSN equ 0000h
TOSL_TOSL_POSITION equ 0000h
TOSL_TOSL_SIZE equ 0008h
TOSL_TOSL_LENGTH equ 0008h
TOSL_TOSL_MASK equ 00FFh



TOSH equ 0FEFh

TOSH_TOSH_POSN equ 0000h
TOSH_TOSH_POSITION equ 0000h
TOSH_TOSH_SIZE equ 0007h
TOSH_TOSH_LENGTH equ 0007h
TOSH_TOSH_MASK equ 007Fh



AADCON0 equ 0711h

AADCON0_ADON_POSN equ 0000h
AADCON0_ADON_POSITION equ 0000h
AADCON0_ADON_SIZE equ 0001h
AADCON0_ADON_LENGTH equ 0001h
AADCON0_ADON_MASK equ 0001h
AADCON0_GO_nDONE_POSN equ 0001h
AADCON0_GO_nDONE_POSITION equ 0001h
AADCON0_GO_nDONE_SIZE equ 0001h
AADCON0_GO_nDONE_LENGTH equ 0001h
AADCON0_GO_nDONE_MASK equ 0002h
AADCON0_CHS_POSN equ 0002h
AADCON0_CHS_POSITION equ 0002h
AADCON0_CHS_SIZE equ 0005h
AADCON0_CHS_LENGTH equ 0005h
AADCON0_CHS_MASK equ 007Ch
AADCON0_CHS0_POSN equ 0002h
AADCON0_CHS0_POSITION equ 0002h
AADCON0_CHS0_SIZE equ 0001h
AADCON0_CHS0_LENGTH equ 0001h
AADCON0_CHS0_MASK equ 0004h
AADCON0_CHS1_POSN equ 0003h
AADCON0_CHS1_POSITION equ 0003h
AADCON0_CHS1_SIZE equ 0001h
AADCON0_CHS1_LENGTH equ 0001h
AADCON0_CHS1_MASK equ 0008h
AADCON0_CHS2_POSN equ 0004h
AADCON0_CHS2_POSITION equ 0004h
AADCON0_CHS2_SIZE equ 0001h
AADCON0_CHS2_LENGTH equ 0001h
AADCON0_CHS2_MASK equ 0010h
AADCON0_CHS3_POSN equ 0005h
AADCON0_CHS3_POSITION equ 0005h
AADCON0_CHS3_SIZE equ 0001h
AADCON0_CHS3_LENGTH equ 0001h
AADCON0_CHS3_MASK equ 0020h
AADCON0_CHS4_POSN equ 0006h
AADCON0_CHS4_POSITION equ 0006h
AADCON0_CHS4_SIZE equ 0001h
AADCON0_CHS4_LENGTH equ 0001h
AADCON0_CHS4_MASK equ 0040h



AADCON1 equ 0712h

AADCON1_ADPREF_POSN equ 0000h
AADCON1_ADPREF_POSITION equ 0000h
AADCON1_ADPREF_SIZE equ 0002h
AADCON1_ADPREF_LENGTH equ 0002h
AADCON1_ADPREF_MASK equ 0003h
AADCON1_ADCS_POSN equ 0004h
AADCON1_ADCS_POSITION equ 0004h
AADCON1_ADCS_SIZE equ 0003h
AADCON1_ADCS_LENGTH equ 0003h
AADCON1_ADCS_MASK equ 0070h
AADCON1_ADFM_POSN equ 0007h
AADCON1_ADFM_POSITION equ 0007h
AADCON1_ADFM_SIZE equ 0001h
AADCON1_ADFM_LENGTH equ 0001h
AADCON1_ADFM_MASK equ 0080h
AADCON1_ADPREF0_POSN equ 0000h
AADCON1_ADPREF0_POSITION equ 0000h
AADCON1_ADPREF0_SIZE equ 0001h
AADCON1_ADPREF0_LENGTH equ 0001h
AADCON1_ADPREF0_MASK equ 0001h
AADCON1_ADPREF1_POSN equ 0001h
AADCON1_ADPREF1_POSITION equ 0001h
AADCON1_ADPREF1_SIZE equ 0001h
AADCON1_ADPREF1_LENGTH equ 0001h
AADCON1_ADPREF1_MASK equ 0002h
AADCON1_ADCS0_POSN equ 0004h
AADCON1_ADCS0_POSITION equ 0004h
AADCON1_ADCS0_SIZE equ 0001h
AADCON1_ADCS0_LENGTH equ 0001h
AADCON1_ADCS0_MASK equ 0010h
AADCON1_ADCS1_POSN equ 0005h
AADCON1_ADCS1_POSITION equ 0005h
AADCON1_ADCS1_SIZE equ 0001h
AADCON1_ADCS1_LENGTH equ 0001h
AADCON1_ADCS1_MASK equ 0020h
AADCON1_ADCS2_POSN equ 0006h
AADCON1_ADCS2_POSITION equ 0006h
AADCON1_ADCS2_SIZE equ 0001h
AADCON1_ADCS2_LENGTH equ 0001h
AADCON1_ADCS2_MASK equ 0040h



AADCON2 equ 0713h

AADCON2_TRIGSEL_POSN equ 0004h
AADCON2_TRIGSEL_POSITION equ 0004h
AADCON2_TRIGSEL_SIZE equ 0003h
AADCON2_TRIGSEL_LENGTH equ 0003h
AADCON2_TRIGSEL_MASK equ 0070h
AADCON2_TRIGSEL0_POSN equ 0004h
AADCON2_TRIGSEL0_POSITION equ 0004h
AADCON2_TRIGSEL0_SIZE equ 0001h
AADCON2_TRIGSEL0_LENGTH equ 0001h
AADCON2_TRIGSEL0_MASK equ 0010h
AADCON2_TRIGSEL1_POSN equ 0005h
AADCON2_TRIGSEL1_POSITION equ 0005h
AADCON2_TRIGSEL1_SIZE equ 0001h
AADCON2_TRIGSEL1_LENGTH equ 0001h
AADCON2_TRIGSEL1_MASK equ 0020h
AADCON2_TRIGSEL2_POSN equ 0006h
AADCON2_TRIGSEL2_POSITION equ 0006h
AADCON2_TRIGSEL2_SIZE equ 0001h
AADCON2_TRIGSEL2_LENGTH equ 0001h
AADCON2_TRIGSEL2_MASK equ 0040h



AADCON3 equ 0714h

AADCON3_ADDSEN_POSN equ 0000h
AADCON3_ADDSEN_POSITION equ 0000h
AADCON3_ADDSEN_SIZE equ 0001h
AADCON3_ADDSEN_LENGTH equ 0001h
AADCON3_ADDSEN_MASK equ 0001h
AADCON3_ADIPEN_POSN equ 0001h
AADCON3_ADIPEN_POSITION equ 0001h
AADCON3_ADIPEN_SIZE equ 0001h
AADCON3_ADIPEN_LENGTH equ 0001h
AADCON3_ADIPEN_MASK equ 0002h
AADCON3_ADOOEN_POSN equ 0003h
AADCON3_ADOOEN_POSITION equ 0003h
AADCON3_ADOOEN_SIZE equ 0001h
AADCON3_ADOOEN_LENGTH equ 0001h
AADCON3_ADOOEN_MASK equ 0008h
AADCON3_ADOEN_POSN equ 0004h
AADCON3_ADOEN_POSITION equ 0004h
AADCON3_ADOEN_SIZE equ 0001h
AADCON3_ADOEN_LENGTH equ 0001h
AADCON3_ADOEN_MASK equ 0010h
AADCON3_ADIPPOL_POSN equ 0006h
AADCON3_ADIPPOL_POSITION equ 0006h
AADCON3_ADIPPOL_SIZE equ 0001h
AADCON3_ADIPPOL_LENGTH equ 0001h
AADCON3_ADIPPOL_MASK equ 0040h
AADCON3_ADEPPOL_POSN equ 0007h
AADCON3_ADEPPOL_POSITION equ 0007h
AADCON3_ADEPPOL_SIZE equ 0001h
AADCON3_ADEPPOL_LENGTH equ 0001h
AADCON3_ADEPPOL_MASK equ 0080h



AADSTAT equ 0715h

AADSTAT_ADSTG_POSN equ 0000h
AADSTAT_ADSTG_POSITION equ 0000h
AADSTAT_ADSTG_SIZE equ 0002h
AADSTAT_ADSTG_LENGTH equ 0002h
AADSTAT_ADSTG_MASK equ 0003h
AADSTAT_ADCONV_POSN equ 0002h
AADSTAT_ADCONV_POSITION equ 0002h
AADSTAT_ADCONV_SIZE equ 0001h
AADSTAT_ADCONV_LENGTH equ 0001h
AADSTAT_ADCONV_MASK equ 0004h
AADSTAT_ADSTG0_POSN equ 0000h
AADSTAT_ADSTG0_POSITION equ 0000h
AADSTAT_ADSTG0_SIZE equ 0001h
AADSTAT_ADSTG0_LENGTH equ 0001h
AADSTAT_ADSTG0_MASK equ 0001h
AADSTAT_ADSTG1_POSN equ 0001h
AADSTAT_ADSTG1_POSITION equ 0001h
AADSTAT_ADSTG1_SIZE equ 0001h
AADSTAT_ADSTG1_LENGTH equ 0001h
AADSTAT_ADSTG1_MASK equ 0002h



AADPRE equ 0716h

AADPRE_ADPRE_POSN equ 0000h
AADPRE_ADPRE_POSITION equ 0000h
AADPRE_ADPRE_SIZE equ 0007h
AADPRE_ADPRE_LENGTH equ 0007h
AADPRE_ADPRE_MASK equ 007Fh
AADPRE_ADPRE0_POSN equ 0000h
AADPRE_ADPRE0_POSITION equ 0000h
AADPRE_ADPRE0_SIZE equ 0001h
AADPRE_ADPRE0_LENGTH equ 0001h
AADPRE_ADPRE0_MASK equ 0001h
AADPRE_ADPRE1_POSN equ 0001h
AADPRE_ADPRE1_POSITION equ 0001h
AADPRE_ADPRE1_SIZE equ 0001h
AADPRE_ADPRE1_LENGTH equ 0001h
AADPRE_ADPRE1_MASK equ 0002h
AADPRE_ADPRE2_POSN equ 0002h
AADPRE_ADPRE2_POSITION equ 0002h
AADPRE_ADPRE2_SIZE equ 0001h
AADPRE_ADPRE2_LENGTH equ 0001h
AADPRE_ADPRE2_MASK equ 0004h
AADPRE_ADPRE3_POSN equ 0003h
AADPRE_ADPRE3_POSITION equ 0003h
AADPRE_ADPRE3_SIZE equ 0001h
AADPRE_ADPRE3_LENGTH equ 0001h
AADPRE_ADPRE3_MASK equ 0008h
AADPRE_ADPRE4_POSN equ 0004h
AADPRE_ADPRE4_POSITION equ 0004h
AADPRE_ADPRE4_SIZE equ 0001h
AADPRE_ADPRE4_LENGTH equ 0001h
AADPRE_ADPRE4_MASK equ 0010h
AADPRE_ADPRE5_POSN equ 0005h
AADPRE_ADPRE5_POSITION equ 0005h
AADPRE_ADPRE5_SIZE equ 0001h
AADPRE_ADPRE5_LENGTH equ 0001h
AADPRE_ADPRE5_MASK equ 0020h
AADPRE_ADPRE6_POSN equ 0006h
AADPRE_ADPRE6_POSITION equ 0006h
AADPRE_ADPRE6_SIZE equ 0001h
AADPRE_ADPRE6_LENGTH equ 0001h
AADPRE_ADPRE6_MASK equ 0040h



AADACQ equ 0717h

AADACQ_ADACQ_POSN equ 0000h
AADACQ_ADACQ_POSITION equ 0000h
AADACQ_ADACQ_SIZE equ 0007h
AADACQ_ADACQ_LENGTH equ 0007h
AADACQ_ADACQ_MASK equ 007Fh
AADACQ_ADACQ0_POSN equ 0000h
AADACQ_ADACQ0_POSITION equ 0000h
AADACQ_ADACQ0_SIZE equ 0001h
AADACQ_ADACQ0_LENGTH equ 0001h
AADACQ_ADACQ0_MASK equ 0001h
AADACQ_ADACQ1_POSN equ 0001h
AADACQ_ADACQ1_POSITION equ 0001h
AADACQ_ADACQ1_SIZE equ 0001h
AADACQ_ADACQ1_LENGTH equ 0001h
AADACQ_ADACQ1_MASK equ 0002h
AADACQ_ADACQ2_POSN equ 0002h
AADACQ_ADACQ2_POSITION equ 0002h
AADACQ_ADACQ2_SIZE equ 0001h
AADACQ_ADACQ2_LENGTH equ 0001h
AADACQ_ADACQ2_MASK equ 0004h
AADACQ_ADACQ3_POSN equ 0003h
AADACQ_ADACQ3_POSITION equ 0003h
AADACQ_ADACQ3_SIZE equ 0001h
AADACQ_ADACQ3_LENGTH equ 0001h
AADACQ_ADACQ3_MASK equ 0008h
AADACQ_ADACQ4_POSN equ 0004h
AADACQ_ADACQ4_POSITION equ 0004h
AADACQ_ADACQ4_SIZE equ 0001h
AADACQ_ADACQ4_LENGTH equ 0001h
AADACQ_ADACQ4_MASK equ 0010h
AADACQ_ADACQ5_POSN equ 0005h
AADACQ_ADACQ5_POSITION equ 0005h
AADACQ_ADACQ5_SIZE equ 0001h
AADACQ_ADACQ5_LENGTH equ 0001h
AADACQ_ADACQ5_MASK equ 0020h
AADACQ_ADACQ6_POSN equ 0006h
AADACQ_ADACQ6_POSITION equ 0006h
AADACQ_ADACQ6_SIZE equ 0001h
AADACQ_ADACQ6_LENGTH equ 0001h
AADACQ_ADACQ6_MASK equ 0040h



AADGRD equ 0718h

AADGRD_GRDPOL_POSN equ 0005h
AADGRD_GRDPOL_POSITION equ 0005h
AADGRD_GRDPOL_SIZE equ 0001h
AADGRD_GRDPOL_LENGTH equ 0001h
AADGRD_GRDPOL_MASK equ 0020h
AADGRD_GRDAOE_POSN equ 0006h
AADGRD_GRDAOE_POSITION equ 0006h
AADGRD_GRDAOE_SIZE equ 0001h
AADGRD_GRDAOE_LENGTH equ 0001h
AADGRD_GRDAOE_MASK equ 0040h
AADGRD_GRDBOE_POSN equ 0007h
AADGRD_GRDBOE_POSITION equ 0007h
AADGRD_GRDBOE_SIZE equ 0001h
AADGRD_GRDBOE_LENGTH equ 0001h
AADGRD_GRDBOE_MASK equ 0080h



AADCAP equ 0719h

AADCAP_ADDCAP_POSN equ 0000h
AADCAP_ADDCAP_POSITION equ 0000h
AADCAP_ADDCAP_SIZE equ 0003h
AADCAP_ADDCAP_LENGTH equ 0003h
AADCAP_ADDCAP_MASK equ 0007h
AADCAP_ADDCAP0_POSN equ 0000h
AADCAP_ADDCAP0_POSITION equ 0000h
AADCAP_ADDCAP0_SIZE equ 0001h
AADCAP_ADDCAP0_LENGTH equ 0001h
AADCAP_ADDCAP0_MASK equ 0001h
AADCAP_ADDCAP1_POSN equ 0001h
AADCAP_ADDCAP1_POSITION equ 0001h
AADCAP_ADDCAP1_SIZE equ 0001h
AADCAP_ADDCAP1_LENGTH equ 0001h
AADCAP_ADDCAP1_MASK equ 0002h
AADCAP_ADDCAP2_POSN equ 0002h
AADCAP_ADDCAP2_POSITION equ 0002h
AADCAP_ADDCAP2_SIZE equ 0001h
AADCAP_ADDCAP2_LENGTH equ 0001h
AADCAP_ADDCAP2_MASK equ 0004h



AADRES0L equ 071Ah

AADRES0L_ADRES0L_POSN equ 0000h
AADRES0L_ADRES0L_POSITION equ 0000h
AADRES0L_ADRES0L_SIZE equ 0008h
AADRES0L_ADRES0L_LENGTH equ 0008h
AADRES0L_ADRES0L_MASK equ 00FFh



AADRES0H equ 071Bh

AADRES0H_ADRES0H_POSN equ 0000h
AADRES0H_ADRES0H_POSITION equ 0000h
AADRES0H_ADRES0H_SIZE equ 0008h
AADRES0H_ADRES0H_LENGTH equ 0008h
AADRES0H_ADRES0H_MASK equ 00FFh



AADRES1L equ 071Ch

AADRES1L_ADRES1L_POSN equ 0000h
AADRES1L_ADRES1L_POSITION equ 0000h
AADRES1L_ADRES1L_SIZE equ 0008h
AADRES1L_ADRES1L_LENGTH equ 0008h
AADRES1L_ADRES1L_MASK equ 00FFh



AADRES1H equ 071Dh

AADRES1H_ADRES1H_POSN equ 0000h
AADRES1H_ADRES1H_POSITION equ 0000h
AADRES1H_ADRES1H_SIZE equ 0008h
AADRES1H_ADRES1H_LENGTH equ 0008h
AADRES1H_ADRES1H_MASK equ 00FFh
# 2065 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\proc\\pic12lf1552.inc" 3
psect udata_shr,class=COMMON,space=1,noexec
psect udata,class=RAM,space=1,noexec
psect udata_bank0,class=BANK0,space=1,noexec
psect udata_bank1,class=BANK1,space=1,noexec
psect udata_bank2,class=BANK2,space=1,noexec
psect code,class=CODE,space=0,delta=2
psect data,class=STRCODE,space=0,delta=2,noexec
# 565 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\pic_as_chip_select.inc" 2 3
# 4 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\pic.inc" 2 3




stk_offset SET 0
auto_size SET 0


; stack_auto defines a symbol /name/_offset which equates to the
; stack offset of the auto object in question

stack_auto MACRO name, size
name&_offset EQU stk_offset-size
stk_offset SET name&_offset
auto_size SET -stk_offset
ENDM


; stack_param defines a symbol /name/_offset which equates to the
; stack offset of the parameter object in question

stack_param MACRO name, size
name&_offset EQU stk_offset-size
stk_offset SET name&_offset
ENDM


; alloc_stack adjusts the SP to allocate space for auto objects
; it also links in to the btemp symbol so that can be used

alloc_stack MACRO
GLOBAL btemp
addfsr FSR1,auto_size
ENDM


; restore_stack adjusts the SP to remove all auto and parameter
; objects from the stack prior to returning from a function

restore_stack MACRO
addfsr FSR1,stk_offset
stk_offset SET 0
auto_size SET 0
ENDM
# 7 "C:\\Program Files\\Microchip\\xc8\\v2.40\\pic\\include\\xc.inc" 2 3
# 40 "d:\\GreatCowBASICGits\\Demonstration_Sources.git\\trunk\\Radio_Solutions\\DCF77\\DCFprototype.S" 2


;********************************************************************************

;Set aside RAM memory locations for variables. All variables are global.
GLOBAL CHHT
 CHHT EQU 32 ; 0X20
GLOBAL COMSEND
 COMSEND EQU 33 ; 0X21
GLOBAL DELAYTEMP
 DELAYTEMP EQU 112 ; 0X70
GLOBAL DELAYTEMP2
 DELAYTEMP2 EQU 113 ; 0X71
GLOBAL DS
 DS EQU 34 ; 0X22
GLOBAL HI2CACKPOLLSTATE
 HI2CACKPOLLSTATE EQU 35 ; 0X23
GLOBAL HI2CCURRENTMODE
 HI2CCURRENTMODE EQU 36 ; 0X24
GLOBAL HI2CWAITMSSPTIMEOUT
 HI2CWAITMSSPTIMEOUT EQU 37 ; 0X25
GLOBAL I2CBYTE
 I2CBYTE EQU 38 ; 0X26
GLOBAL ID7
 ID7 EQU 39 ; 0X27
GLOBAL J1
 J1 EQU 40 ; 0X28
GLOBAL J2
 J2 EQU 41 ; 0X29
GLOBAL JJ
 JJ EQU 42 ; 0X2A
GLOBAL KDAY
 KDAY EQU 43 ; 0X2B
GLOBAL KDAY1
 KDAY1 EQU 44 ; 0X2C
GLOBAL KHOUR
 KHOUR EQU 45 ; 0X2D
GLOBAL KHOUR1
 KHOUR1 EQU 46 ; 0X2E
GLOBAL KMIN
 KMIN EQU 47 ; 0X2F
GLOBAL KMIN1
 KMIN1 EQU 48 ; 0X30
GLOBAL KMONTH
 KMONTH EQU 49 ; 0X31
GLOBAL KMONTH1
 KMONTH1 EQU 50 ; 0X32
GLOBAL KYEAR
 KYEAR EQU 51 ; 0X33
GLOBAL KYEAR1
 KYEAR1 EQU 52 ; 0X34
GLOBAL SL
 SL EQU 53 ; 0X35
GLOBAL SYSBYTETEMPA
 SYSBYTETEMPA EQU 117 ; 0X75
GLOBAL SYSBYTETEMPB
 SYSBYTETEMPB EQU 121 ; 0X79
GLOBAL SYSBYTETEMPX
 SYSBYTETEMPX EQU 112 ; 0X70
GLOBAL SYSDIVLOOP
 SYSDIVLOOP EQU 116 ; 0X74
GLOBAL SYSTEMP1
 SYSTEMP1 EQU 54 ; 0X36
GLOBAL SYSTEMP2
 SYSTEMP2 EQU 55 ; 0X37
GLOBAL SYSWAITTEMPMS
 SYSWAITTEMPMS EQU 114 ; 0X72
GLOBAL SYSWAITTEMPMS_H
 SYSWAITTEMPMS_H EQU 115 ; 0X73

;********************************************************************************

 PSECT PROGMEM0,delta=2, abs
 RESETVEC:
;VECTORS
 ORG 0
 PAGESEL BASPROGRAMSTART
 GOTO BASPROGRAMSTART
 ORG 4
 RETFIE

;********************************************************************************

;START OF PROGRAM MEMORY PAGE 0
 ORG 5
GLOBAL BASPROGRAMSTART
BASPROGRAMSTART:
;CALL INITIALISATION ROUTINES
 CALL INITSYS
 CALL HI2CINIT

;START OF THE MAIN PROGRAM
;
;So what about the UK time signals (MSF on 60 kHz)?
;Aliexpress offer a dual frequency (40 and 60 kHz) VLF receiver (the 40 kHz is for the Japanese VLF transmissions).
;The problem (as ever) is there is little to no information supplied.
;I tried all possible combinations of pins high and low and could not get it to work.
;So the solution was to remove the 60kHz crystal and put it onto a DCF77 board (I also swapped the ferrite inductors, but this made little difference).
;UK VLF time signals used to be broadcast from Rugby - a nice central location.
;Now they are broadcast from Anthorn in Cumbria (almost in Scotland) .
;This is a long way from me in fact the German one is probably nearer (and is definitely more powerful 50kW versus 17kW).
;
;As is to be expected the coding is different. Rather than a missing pulse on the minute MSF60 has an extra long pulse (500ms) on the minute. Other than that it is a mixture of long (200ms) and short pulses (100ms) to give the BCD time (except near the minute there can be 300ms pulses "as a parity check"). The code is below. I used a 12LF1552 (as I have no 12F1840's left). It only has a 8-bit counter (timer0), but with the prescaler (256:1) it is essentially 16-bit (with only the high byte accessible).
;
;
;#option explicit
;
;------------PORTA---------------
;Bit#: -7---6---5---4---3---2---1---0---
;IO: ---------------------------------
;IO: ---------------------------------
;
;
;
;Define HI2C settings
;Dir HI2C_DATA in
 BANKSEL TRISA
 BSF TRISA,2
;Dir HI2C_CLOCK in
 BSF TRISA,1
;HI2CMode Master
 MOVLW 12
 BANKSEL HI2CCURRENTMODE
 MOVWF HI2CCURRENTMODE
 CALL HI2CMODE
;wait 20 ms
 MOVLW 20
 MOVWF SYSWAITTEMPMS
 CLRF SYSWAITTEMPMS_H
 CALL DELAY_MS
;dir porta.3 in 'mclr pin
 BANKSEL TRISA
 BSF TRISA,3
;dir porta.0 out 'pon=power on
 BCF TRISA,0
;dir porta.4 in 'time pulses
 BSF TRISA,4
;dir porta.5 out 'out n/c
 BCF TRISA,5
;set porta.0 off 'pon off=on
 BANKSEL LATA
 BCF LATA,0
;set porta.5 off
 BCF LATA,5
;option_reg=b'00000111'
 MOVLW 7
 BANKSEL OPTION_REG
 MOVWF OPTION_REG
;wpua=b'00000110' 'HI2C pins
 MOVLW 6
 BANKSEL WPUA
 MOVWF WPUA
;wait 20 ms
 MOVLW 20
 MOVWF SYSWAITTEMPMS
 CLRF SYSWAITTEMPMS_H
 BANKSEL STATUS
 CALL DELAY_MS
;onetwoline 'initialize LCD
 CALL ONETWOLINE
;wait 20 ms
 MOVLW 20
 MOVWF SYSWAITTEMPMS
 CLRF SYSWAITTEMPMS_H
 CALL DELAY_MS
;jj=0
 CLRF JJ
;kmin1=0:kmin=0
 CLRF KMIN1
;kmin1=0:kmin=0
 CLRF KMIN
;khour1=0:khour=0
 CLRF KHOUR1
;khour1=0:khour=0
 CLRF KHOUR
;kday1=0:kday=0
 CLRF KDAY1
;kday1=0:kday=0
 CLRF KDAY
;kmonth1=0:kmonth=0
 CLRF KMONTH1
;kmonth1=0:kmonth=0
 CLRF KMONTH
;kyear1=0:kyear=0 'initialize constants
 CLRF KYEAR1
;kyear1=0:kyear=0 'initialize constants
 CLRF KYEAR
;tmr0=0
 CLRF TMR0
;start of main loop...
;do
GLOBAL SYSDOLOOP_S1
SYSDOLOOP_S1:
;do
GLOBAL SYSDOLOOP_S2
SYSDOLOOP_S2:
;if porta.4=1 then exit do 'start of pulse
 BTFSC PORTA,4
;if porta.4=1 then exit do 'start of pulse
 GOTO SYSDOLOOP_E2
;if porta.4=1 then exit do 'start of pulse
;loop
 GOTO SYSDOLOOP_S2
GLOBAL SYSDOLOOP_E2
SYSDOLOOP_E2:
;tmr0=0
 CLRF TMR0
;do
GLOBAL SYSDOLOOP_S3
SYSDOLOOP_S3:
;if porta.4=0 then exit do 'end of pulse
 BTFSS PORTA,4
;if porta.4=0 then exit do 'end of pulse
 GOTO SYSDOLOOP_E3
;if porta.4=0 then exit do 'end of pulse
;loop
 GOTO SYSDOLOOP_S3
GLOBAL SYSDOLOOP_E3
SYSDOLOOP_E3:
;jj=jj+1
 INCF JJ,F
;id7=tmr0 'id7=37 is about 150 ms
 MOVF TMR0,W
 MOVWF ID7
;if id7<110 then screen3
 MOVLW 110
 SUBWF ID7,W
 BTFSS STATUS,0
;if id7<110 then screen3
 CALL SCREEN3
;if id7<110 then screen3
;tmr0=0
 CLRF TMR0
;if id7>110 then 'found minute marker
 MOVF ID7,W
 SUBLW 110
 BTFSC STATUS,0
 GOTO ENDIF4
;jj=0
 CLRF JJ
;khour1=khour 'update on minute roll-over
 MOVF KHOUR,W
 MOVWF KHOUR1
;kmin1=kmin
 MOVF KMIN,W
 MOVWF KMIN1
;kday1=kday
 MOVF KDAY,W
 MOVWF KDAY1
;kmonth1=kmonth
 MOVF KMONTH,W
 MOVWF KMONTH1
;kyear1=kyear
 MOVF KYEAR,W
 MOVWF KYEAR1
;khour=0
 CLRF KHOUR
;kmin=0
 CLRF KMIN
;kday=0
 CLRF KDAY
;kmonth=0
 CLRF KMONTH
;kyear=0
 CLRF KYEAR
;screen3
 CALL SCREEN3
;end if
GLOBAL ENDIF4
ENDIF4:
;binary coded decimal (arrgh!!)
;if id7>37 and id7<72 then
 MOVF ID7,W
 MOVWF SYSBYTETEMPB
 MOVLW 37
 MOVWF SYSBYTETEMPA
 CALL SYSCOMPLESSTHAN
 MOVF SYSBYTETEMPX,W
 MOVWF SYSTEMP1
 MOVF ID7,W
 MOVWF SYSBYTETEMPA
 MOVLW 72
 MOVWF SYSBYTETEMPB
 CALL SYSCOMPLESSTHAN
 MOVF SYSTEMP1,W
 ANDWF SYSBYTETEMPX,W
 MOVWF SYSTEMP2
 BTFSS SYSTEMP2,0
 GOTO ENDIF5
;if jj=51 then kmin=kmin+1
 MOVLW 51
 SUBWF JJ,W
 BTFSC STATUS,2
;if jj=51 then kmin=kmin+1
 INCF KMIN,F
;if jj=51 then kmin=kmin+1
;if jj=50 then kmin=kmin+2
 MOVLW 50
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF7
;if jj=50 then kmin=kmin+2
 MOVLW 2
 ADDWF KMIN,F
;if jj=50 then kmin=kmin+2
GLOBAL ENDIF7
ENDIF7:
;if jj=49 then kmin=kmin+4
 MOVLW 49
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF8
;if jj=49 then kmin=kmin+4
 MOVLW 4
 ADDWF KMIN,F
;if jj=49 then kmin=kmin+4
GLOBAL ENDIF8
ENDIF8:
;if jj=48 then kmin=kmin+8
 MOVLW 48
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF9
;if jj=48 then kmin=kmin+8
 MOVLW 8
 ADDWF KMIN,F
;if jj=48 then kmin=kmin+8
GLOBAL ENDIF9
ENDIF9:
;if jj=47 then kmin=kmin+10
 MOVLW 47
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF10
;if jj=47 then kmin=kmin+10
 MOVLW 10
 ADDWF KMIN,F
;if jj=47 then kmin=kmin+10
GLOBAL ENDIF10
ENDIF10:
;if jj=46 then kmin=kmin+20
 MOVLW 46
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF11
;if jj=46 then kmin=kmin+20
 MOVLW 20
 ADDWF KMIN,F
;if jj=46 then kmin=kmin+20
GLOBAL ENDIF11
ENDIF11:
;if jj=45 then kmin=kmin+40
 MOVLW 45
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF12
;if jj=45 then kmin=kmin+40
 MOVLW 40
 ADDWF KMIN,F
;if jj=45 then kmin=kmin+40
GLOBAL ENDIF12
ENDIF12:
;if jj=44 then khour=khour+1
 MOVLW 44
 SUBWF JJ,W
 BTFSC STATUS,2
;if jj=44 then khour=khour+1
 INCF KHOUR,F
;if jj=44 then khour=khour+1
;if jj=43 then khour=khour+2
 MOVLW 43
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF14
;if jj=43 then khour=khour+2
 MOVLW 2
 ADDWF KHOUR,F
;if jj=43 then khour=khour+2
GLOBAL ENDIF14
ENDIF14:
;if jj=42 then khour=khour+4
 MOVLW 42
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF15
;if jj=42 then khour=khour+4
 MOVLW 4
 ADDWF KHOUR,F
;if jj=42 then khour=khour+4
GLOBAL ENDIF15
ENDIF15:
;if jj=41 then khour=khour+8
 MOVLW 41
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF16
;if jj=41 then khour=khour+8
 MOVLW 8
 ADDWF KHOUR,F
;if jj=41 then khour=khour+8
GLOBAL ENDIF16
ENDIF16:
;if jj=40 then khour=khour+10
 MOVLW 40
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF17
;if jj=40 then khour=khour+10
 MOVLW 10
 ADDWF KHOUR,F
;if jj=40 then khour=khour+10
GLOBAL ENDIF17
ENDIF17:
;if jj=39 then khour=khour+20
 MOVLW 39
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF18
;if jj=39 then khour=khour+20
 MOVLW 20
 ADDWF KHOUR,F
;if jj=39 then khour=khour+20
GLOBAL ENDIF18
ENDIF18:
;if jj=35 then kday=kday+1
 MOVLW 35
 SUBWF JJ,W
 BTFSC STATUS,2
;if jj=35 then kday=kday+1
 INCF KDAY,F
;if jj=35 then kday=kday+1
;if jj=34 then kday=kday+2
 MOVLW 34
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF20
;if jj=34 then kday=kday+2
 MOVLW 2
 ADDWF KDAY,F
;if jj=34 then kday=kday+2
GLOBAL ENDIF20
ENDIF20:
;if jj=33 then kday=kday+4
 MOVLW 33
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF21
;if jj=33 then kday=kday+4
 MOVLW 4
 ADDWF KDAY,F
;if jj=33 then kday=kday+4
GLOBAL ENDIF21
ENDIF21:
;if jj=32 then kday=kday+8
 MOVLW 32
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF22
;if jj=32 then kday=kday+8
 MOVLW 8
 ADDWF KDAY,F
;if jj=32 then kday=kday+8
GLOBAL ENDIF22
ENDIF22:
;if jj=31 then kday=kday+10
 MOVLW 31
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF23
;if jj=31 then kday=kday+10
 MOVLW 10
 ADDWF KDAY,F
;if jj=31 then kday=kday+10
GLOBAL ENDIF23
ENDIF23:
;if jj=30 then kday=kday+20
 MOVLW 30
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF24
;if jj=30 then kday=kday+20
 MOVLW 20
 ADDWF KDAY,F
;if jj=30 then kday=kday+20
GLOBAL ENDIF24
ENDIF24:
;if jj=29 then kmonth=kmonth+1
 MOVLW 29
 SUBWF JJ,W
 BTFSC STATUS,2
;if jj=29 then kmonth=kmonth+1
 INCF KMONTH,F
;if jj=29 then kmonth=kmonth+1
;if jj=28 then kmonth=kmonth+2
 MOVLW 28
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF26
;if jj=28 then kmonth=kmonth+2
 MOVLW 2
 ADDWF KMONTH,F
;if jj=28 then kmonth=kmonth+2
GLOBAL ENDIF26
ENDIF26:
;if jj=27 then kmonth=kmonth+4
 MOVLW 27
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF27
;if jj=27 then kmonth=kmonth+4
 MOVLW 4
 ADDWF KMONTH,F
;if jj=27 then kmonth=kmonth+4
GLOBAL ENDIF27
ENDIF27:
;if jj=26 then kmonth=kmonth+8
 MOVLW 26
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF28
;if jj=26 then kmonth=kmonth+8
 MOVLW 8
 ADDWF KMONTH,F
;if jj=26 then kmonth=kmonth+8
GLOBAL ENDIF28
ENDIF28:
;if jj=25 then kmonth=kmonth+10
 MOVLW 25
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF29
;if jj=25 then kmonth=kmonth+10
 MOVLW 10
 ADDWF KMONTH,F
;if jj=25 then kmonth=kmonth+10
GLOBAL ENDIF29
ENDIF29:
;if jj=24 then kyear=kyear+1
 MOVLW 24
 SUBWF JJ,W
 BTFSC STATUS,2
;if jj=24 then kyear=kyear+1
 INCF KYEAR,F
;if jj=24 then kyear=kyear+1
;if jj=23 then kyear=kyear+2
 MOVLW 23
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF31
;if jj=23 then kyear=kyear+2
 MOVLW 2
 ADDWF KYEAR,F
;if jj=23 then kyear=kyear+2
GLOBAL ENDIF31
ENDIF31:
;if jj=22 then kyear=kyear+4
 MOVLW 22
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF32
;if jj=22 then kyear=kyear+4
 MOVLW 4
 ADDWF KYEAR,F
;if jj=22 then kyear=kyear+4
GLOBAL ENDIF32
ENDIF32:
;if jj=21 then kyear=kyear+8
 MOVLW 21
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF33
;if jj=21 then kyear=kyear+8
 MOVLW 8
 ADDWF KYEAR,F
;if jj=21 then kyear=kyear+8
GLOBAL ENDIF33
ENDIF33:
;if jj=20 then kyear=kyear+10
 MOVLW 20
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF34
;if jj=20 then kyear=kyear+10
 MOVLW 10
 ADDWF KYEAR,F
;if jj=20 then kyear=kyear+10
GLOBAL ENDIF34
ENDIF34:
;if jj=19 then kyear=kyear+20
 MOVLW 19
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF35
;if jj=19 then kyear=kyear+20
 MOVLW 20
 ADDWF KYEAR,F
;if jj=19 then kyear=kyear+20
GLOBAL ENDIF35
ENDIF35:
;if jj=18 then kyear=kyear+40
 MOVLW 18
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF36
;if jj=18 then kyear=kyear+40
 MOVLW 40
 ADDWF KYEAR,F
;if jj=18 then kyear=kyear+40
GLOBAL ENDIF36
ENDIF36:
;if jj=17 then kyear=kyear+80
 MOVLW 17
 SUBWF JJ,W
 BTFSS STATUS,2
 GOTO ENDIF37
;if jj=17 then kyear=kyear+80
 MOVLW 80
 ADDWF KYEAR,F
;if jj=17 then kyear=kyear+80
GLOBAL ENDIF37
ENDIF37:
;end if
GLOBAL ENDIF5
ENDIF5:
;tmr0=0
 CLRF TMR0
;loop
 GOTO SYSDOLOOP_S1
GLOBAL SYSDOLOOP_E1
SYSDOLOOP_E1:
;end 'should never get here
 GOTO BASPROGRAMEND
GLOBAL BASPROGRAMEND
BASPROGRAMEND:
 SLEEP
 GOTO BASPROGRAMEND

;********************************************************************************

GLOBAL DELAY_MS
DELAY_MS:
 INCF SYSWAITTEMPMS_H, F
GLOBAL DMS_START
DMS_START:
 MOVLW 8
 MOVWF DELAYTEMP2
GLOBAL DMS_OUTER
DMS_OUTER:
 MOVLW 1
 MOVWF DELAYTEMP
GLOBAL DMS_INNER
DMS_INNER:
 DECFSZ DELAYTEMP, F
 GOTO DMS_INNER
 DECFSZ DELAYTEMP2, F
 GOTO DMS_OUTER
 DECFSZ SYSWAITTEMPMS, F
 GOTO DMS_START
 DECFSZ SYSWAITTEMPMS_H, F
 GOTO DMS_START
 RETURN

;********************************************************************************

;SOURCE: HWI2C.H (709)
GLOBAL HI2CINIT
HI2CINIT:
;asm showdebug This method sets the variable `HI2CCurrentMode`, and, if required calls the method `SI2CInit` to set up new MSSP modules - aka K42s family chips
;HI2CCurrentMode = 0
 CLRF HI2CCURRENTMODE
;Initialise the I2C module
 RETURN

;********************************************************************************

;SOURCE: HWI2C.H (257)
GLOBAL HI2CMODE
HI2CMODE:
;asm showdebug This method sets the variable `HI2CCurrentMode`, and, if required, sets the SSPCON1.bits
;#ifdef var(SSPCON1) added to separate from newer i2C module which does not have an SSPCON1
;set SSPSTAT.((SSP1STAT) and 07Fh), 7 on
 BANKSEL SSP1STAT
 BSF SSP1STAT,7
;set SSPCON1.((SSP1CON1) and 07Fh), 4 on
 BSF SSP1CON1,4
;set SSPCON1.((SSP1CON1) and 07Fh), 7 Off
 BCF SSP1CON1,7
;Select mode and clock
;If HI2CCurrentMode = Master Then
 MOVLW 12
 BANKSEL HI2CCURRENTMODE
 SUBWF HI2CCURRENTMODE,W
 BTFSS STATUS,2
 GOTO ENDIF38
;set SSPCON1.((SSP1CON1) and 07Fh), 3 on
 BANKSEL SSP1CON1
 BSF SSP1CON1,3
;set SSPCON1.((SSP1CON1) and 07Fh), 2 off
 BCF SSP1CON1,2
;set SSPCON1.((SSP1CON1) and 07Fh), 1 off
 BCF SSP1CON1,1
;set SSPCON1.((SSP1CON1) and 07Fh), 0 off
 BCF SSP1CON1,0
;SSPADD = HI2C_BAUD_TEMP and 127
 MOVLW 1
 MOVWF SSP1ADD
;end if
GLOBAL ENDIF38
ENDIF38:
;if HI2CCurrentMode = Slave then
 BANKSEL HI2CCURRENTMODE
 MOVF HI2CCURRENTMODE,F
 BTFSS STATUS,2
 GOTO ENDIF39
;set SSPCON1.((SSP1CON1) and 07Fh), 3 off
 BANKSEL SSP1CON1
 BCF SSP1CON1,3
;set SSPCON1.((SSP1CON1) and 07Fh), 2 on
 BSF SSP1CON1,2
;set SSPCON1.((SSP1CON1) and 07Fh), 1 on
 BSF SSP1CON1,1
;set SSPCON1.((SSP1CON1) and 07Fh), 0 off
 BCF SSP1CON1,0
;end if
GLOBAL ENDIF39
ENDIF39:
;if HI2CCurrentMode = Slave10 then
 MOVLW 3
 BANKSEL HI2CCURRENTMODE
 SUBWF HI2CCURRENTMODE,W
 BTFSS STATUS,2
 GOTO ENDIF40
;set SSPCON1.((SSP1CON1) and 07Fh), 3 off
 BANKSEL SSP1CON1
 BCF SSP1CON1,3
;set SSPCON1.((SSP1CON1) and 07Fh), 2 on
 BSF SSP1CON1,2
;set SSPCON1.((SSP1CON1) and 07Fh), 1 on
 BSF SSP1CON1,1
;set SSPCON1.((SSP1CON1) and 07Fh), 0 on
 BSF SSP1CON1,0
;end if
GLOBAL ENDIF40
ENDIF40:
;Enable I2C
;set SSPCON1.((SSP1CON1) and 07Fh), 5 on
 BANKSEL SSP1CON1
 BSF SSP1CON1,5
 BANKSEL STATUS
 RETURN

;********************************************************************************

;SOURCE: HWI2C.H (428)
GLOBAL HI2CSEND
HI2CSEND:
;asm showdebug This method sets the registers and register bits to send I2C data
GLOBAL RETRYHI2CSEND
RETRYHI2CSEND:
;Clear ((SSP1CON1) and 07Fh), 7
;SET SSPCON1.((SSP1CON1) and 07Fh), 7 OFF
 BANKSEL SSP1CON1
 BCF SSP1CON1,7
;Load data to send
;SSPBUF = I2CByte
 BANKSEL I2CBYTE
 MOVF I2CBYTE,W
 BANKSEL SSP1BUF
 MOVWF SSP1BUF
;HI2CWaitMSSP
 BANKSEL STATUS
 CALL HI2CWAITMSSP
;if ((SSP1CON2) and 07Fh), 6 = 1 then
 BANKSEL SSP1CON2
 BTFSS SSP1CON2,6
 GOTO ELSE43_1
;HI2CAckPollState = true
 MOVLW 255
 BANKSEL HI2CACKPOLLSTATE
 MOVWF HI2CACKPOLLSTATE
;else
 GOTO ENDIF43
GLOBAL ELSE43_1
ELSE43_1:
;HI2CAckPollState = false
 BANKSEL HI2CACKPOLLSTATE
 CLRF HI2CACKPOLLSTATE
;end if
GLOBAL ENDIF43
ENDIF43:
;If SSPCON1.((SSP1CON1) and 07Fh), 7 = On Then
 BANKSEL SSP1CON1
 BTFSS SSP1CON1,7
 GOTO ENDIF44
;If HI2CCurrentMode <= 10 Then Goto RetryHI2CSend
 BANKSEL HI2CCURRENTMODE
 MOVF HI2CCURRENTMODE,W
 SUBLW 10
 BTFSC STATUS,0
;If HI2CCurrentMode <= 10 Then Goto RetryHI2CSend
 GOTO RETRYHI2CSEND
;If HI2CCurrentMode <= 10 Then Goto RetryHI2CSend
;End If
GLOBAL ENDIF44
ENDIF44:
;Release clock (only needed by slave)
;If HI2CCurrentMode <= 10 Then Set SSPCON1.((SSP1CON1) and 07Fh), 4 On
 BANKSEL HI2CCURRENTMODE
 MOVF HI2CCURRENTMODE,W
 SUBLW 10
 BTFSS STATUS,0
 GOTO ENDIF45
;If HI2CCurrentMode <= 10 Then Set SSPCON1.((SSP1CON1) and 07Fh), 4 On
 BANKSEL SSP1CON1
 BSF SSP1CON1,4
;If HI2CCurrentMode <= 10 Then Set SSPCON1.((SSP1CON1) and 07Fh), 4 On
GLOBAL ENDIF45
ENDIF45:
 BANKSEL STATUS
 RETURN

;********************************************************************************

;SOURCE: HWI2C.H (312)
GLOBAL HI2CSTART
HI2CSTART:
;asm showdebug This method sets the registers and register bits to generate the I2C START signal
;If HI2CCurrentMode > 10 Then
 MOVF HI2CCURRENTMODE,W
 SUBLW 10
 BTFSC STATUS,0
 GOTO ELSE41_1
;Master_mode operational
;Set ((SSP1CON2) and 07Fh), 0 On
 BANKSEL SSP1CON2
 BSF SSP1CON2,0
;HI2CWaitMSSP
 BANKSEL STATUS
 CALL HI2CWAITMSSP
;Else
 GOTO ENDIF41
GLOBAL ELSE41_1
ELSE41_1:
;Slave mode operational
;Wait Until SSPSTAT.S = On
GLOBAL SYSWAITLOOP1
SYSWAITLOOP1:
 BANKSEL SSP1STAT
 BTFSS SSP1STAT,3
 GOTO SYSWAITLOOP1
;End If
GLOBAL ENDIF41
ENDIF41:
 BANKSEL STATUS
 RETURN

;********************************************************************************

;SOURCE: HWI2C.H (362)
GLOBAL HI2CSTOP
HI2CSTOP:
;Master_mode
;If HI2CCurrentMode > 10 Then
 MOVF HI2CCURRENTMODE,W
 SUBLW 10
 BTFSC STATUS,0
 GOTO ELSE42_1
;set SSPIE OFF; disable SSP interrupt, tested by Anobium but not implemented.
;wait while R_NOT_W = 1 'wait for completion of activities
GLOBAL SYSWAITLOOP2
SYSWAITLOOP2:
 BANKSEL SSP1STAT
 BTFSC SSP1STAT,2
 GOTO SYSWAITLOOP2
;Set SSPCON2.((SSP1CON2) and 07Fh), 2 On
 BSF SSP1CON2,2
;Set SSPCON2.((SSP1CON2) and 07Fh), 2 On
 BSF SSP1CON2,2
;HI2CWaitMSSP
 BANKSEL STATUS
 CALL HI2CWAITMSSP
;Slave mode
;Else
 GOTO ENDIF42
GLOBAL ELSE42_1
ELSE42_1:
;Wait Until SSPSTAT.P = On
GLOBAL SYSWAITLOOP3
SYSWAITLOOP3:
 BANKSEL SSP1STAT
 BTFSS SSP1STAT,4
 GOTO SYSWAITLOOP3
;End If
GLOBAL ENDIF42
ENDIF42:
 BANKSEL STATUS
 RETURN

;********************************************************************************

;SOURCE: HWI2C.H (515)
GLOBAL HI2CWAITMSSP
HI2CWAITMSSP:
;HI2CWaitMSSPTimeout = 0
 CLRF HI2CWAITMSSPTIMEOUT
GLOBAL HI2CWAITMSSPWAIT
HI2CWAITMSSPWAIT:
;HI2CWaitMSSPTimeout++
 INCF HI2CWAITMSSPTIMEOUT,F
;if HI2CWaitMSSPTimeout < 255 then
 MOVLW 255
 SUBWF HI2CWAITMSSPTIMEOUT,W
 BTFSC STATUS,0
 GOTO ENDIF47
;'Support for SSP1IF
;if ((PIR1) and 07Fh), 3 = 0 then goto HI2CWaitMSSPWait
 BTFSS PIR1,3
;if ((PIR1) and 07Fh), 3 = 0 then goto HI2CWaitMSSPWait
 GOTO HI2CWAITMSSPWAIT
;if ((PIR1) and 07Fh), 3 = 0 then goto HI2CWaitMSSPWait
;((PIR1) and 07Fh), 3 = 0
 BCF PIR1,3
;end if
GLOBAL ENDIF47
ENDIF47:
 RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (159)
GLOBAL INITSYS
INITSYS:
;asm showdebug This code block sets the internal oscillator to ChipMHz
;asm showdebug OSCCON type is 105 'Bit(SPLLEN) Or Bit(IRCF3) And NoBit(INTSRC) and ifdef Bit(IRCF3)
;equates to OSCCON = OSCCON AND b'10000111' & OSCCON = OSCCON OR b'00110000'
;= 0.25Mhz
;Set ((OSCCON) and 07Fh), 6 Off
 BANKSEL OSCCON
 BCF OSCCON,6
;Set ((OSCCON) and 07Fh), 5 On
 BSF OSCCON,5
;Set ((OSCCON) and 07Fh), 4 On
 BSF OSCCON,4
;Set ((OSCCON) and 07Fh), 3 Off
 BCF OSCCON,3
;Set ((OSCCON) and 07Fh), 7 Off
 BCF OSCCON,7
;asm showdebug _Complete_the_chip_setup_of_BSR,ADCs,ANSEL_and_other_key_setup_registers_or_register_bits
;Ensure all ports are set for digital I/O and, turn off A/D
;SET ADFM OFF
 BCF ADCON1,7
;Switch off A/D Var(ADCON0)
;SET ADCON0.ADON OFF
 BCF ADCON0,0
;ANSELA = 0
 BANKSEL ANSELA
 CLRF ANSELA
;
;'Turn off all ports
;GPIO = 0
 BANKSEL PORTA
 CLRF PORTA
;PORTA = 0
 CLRF PORTA
 RETURN

;********************************************************************************

;SOURCE: DCFPROTOTYPE.GCB (176)
GLOBAL ONETWOLINE
ONETWOLINE:
;SL=0x7C 'DISPLAY ID
 MOVLW 124
 MOVWF SL
;COMSEND=0x00 'display COMMAND send
 CLRF COMSEND
;DS=0X40 'display DATA send
 MOVLW 64
 MOVWF DS
;chht=0x38 'two lines
 MOVLW 56
 MOVWF CHHT
;hi2cStart
 CALL HI2CSTART
;hi2cSEND(Sl)
 MOVF SL,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(Comsend)
 MOVF COMSEND,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(chht) 'initialize 16x1or2
 MOVF CHHT,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(COMSEND)
 MOVF COMSEND,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(chht+1) '16x1or2
 INCF CHHT,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(0x10) 'osc set to slowest
 MOVLW 16
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(0x77) 'contrast low byte=3 now 5 now 7
 MOVLW 119
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(0x54) 'pwr booster on
 MOVLW 84
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(0x6F) 'follower
 MOVLW 111
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(0x0C) 'on/off
 MOVLW 12
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(0x01) 'clear
 MOVLW 1
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cstop
 GOTO HI2CSTOP

;********************************************************************************

;SOURCE: DCFPROTOTYPE.GCB (124)
GLOBAL SCREEN3
SCREEN3:
;hi2cstart
 CALL HI2CSTART
;hi2csEND(Sl)
 MOVF SL,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csEND(Comsend)
 MOVF COMSEND,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(0x80) 'first line
 MOVLW 128
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cstop
 CALL HI2CSTOP
;j1=jj/10
 MOVF JJ,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVF SYSBYTETEMPA,W
 MOVWF J1
;j2=jj%10
 MOVF JJ,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVF SYSBYTETEMPX,W
 MOVWF J2
;hi2cstart
 CALL HI2CSTART
;hi2csend(Sl)
 MOVF SL,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(DS)
 MOVF DS,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(khour1/10+48)
 MOVF KHOUR1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPA,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(khour1%10+48)
 MOVF KHOUR1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPX,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(58)
 MOVLW 58
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(kmin1/10+48)
 MOVF KMIN1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPA,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(kmin1%10+48)
 MOVF KMIN1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPX,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(58)
 MOVLW 58
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(j1+48)
 MOVLW 48
 ADDWF J1,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(j2+48)
 MOVLW 48
 ADDWF J2,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSTOP
 CALL HI2CSTOP
;hi2cStart
 CALL HI2CSTART
;hi2cSEND(Sl)
 MOVF SL,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(Comsend)
 MOVF COMSEND,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(0xC0) 'second line
 MOVLW 192
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cstop
 CALL HI2CSTOP
;hi2cstart
 CALL HI2CSTART
;hi2cSEND(Sl)
 MOVF SL,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cSEND(DS)
 MOVF DS,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(kday1/10+48)
 MOVF KDAY1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPA,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(kday1%10+48)
 MOVF KDAY1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPX,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(47)
 MOVLW 47
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(kmonth1/10+48)
 MOVF KMONTH1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPA,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(kmonth1%10+48)
 MOVF KMONTH1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPX,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(47)
 MOVLW 47
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(50)
 MOVLW 50
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(48)
 MOVLW 48
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(kyear1/10+48)
 MOVF KYEAR1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPA,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(kyear1%10+48)
 MOVF KYEAR1,W
 MOVWF SYSBYTETEMPA
 MOVLW 10
 MOVWF SYSBYTETEMPB
 CALL SYSDIVSUB
 MOVLW 48
 ADDWF SYSBYTETEMPX,W
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2csend(32)
 MOVLW 32
 MOVWF I2CBYTE
 CALL HI2CSEND
;hi2cstop
 GOTO HI2CSTOP

;********************************************************************************

;SOURCE: SYSTEM.H (3383)
GLOBAL SYSCOMPLESSTHAN
SYSCOMPLESSTHAN:
;Dim SysByteTempA, SysByteTempB, SysByteTempX as byte
;clrf SysByteTempX
 CLRF SYSBYTETEMPX
;bsf STATUS, C
 BSF STATUS,0
;movf SysByteTempB, W
 MOVF SYSBYTETEMPB, W
;subwf SysByteTempA, W
 SUBWF SYSBYTETEMPA, W
;btfss STATUS, C
 BTFSS STATUS,0
;comf SysByteTempX,F
 COMF SYSBYTETEMPX,F
 RETURN

;********************************************************************************

;SOURCE: SYSTEM.H (2793)
GLOBAL SYSDIVSUB
SYSDIVSUB:
;dim SysByteTempA as byte
;dim SysByteTempB as byte
;dim SysByteTempX as byte
;Check for div/0
;movf SysByteTempB, F
 MOVF SYSBYTETEMPB, F
;btfsc STATUS, Z
 BTFSC STATUS,2
;return
 RETURN
;Main calc routine
;SysByteTempX = 0
 CLRF SYSBYTETEMPX
;SysDivLoop = 8
 MOVLW 8
 MOVWF SYSDIVLOOP
GLOBAL SYSDIV8START
SYSDIV8START:
;bcf STATUS, C
 BCF STATUS,0
;rlf SysByteTempA, F
 RLF SYSBYTETEMPA, F
;rlf SysByteTempX, F
 RLF SYSBYTETEMPX, F
;movf SysByteTempB, W
 MOVF SYSBYTETEMPB, W
;subwf SysByteTempX, F
 SUBWF SYSBYTETEMPX, F
;bsf SysByteTempA, 0
 BSF SYSBYTETEMPA, 0
;btfsc STATUS, C
 BTFSC STATUS,0
;goto Div8NotNeg
 GOTO DIV8NOTNEG
;bcf SysByteTempA, 0
 BCF SYSBYTETEMPA, 0
;movf SysByteTempB, W
 MOVF SYSBYTETEMPB, W
;addwf SysByteTempX, F
 ADDWF SYSBYTETEMPX, F
GLOBAL DIV8NOTNEG
DIV8NOTNEG:
;decfsz SysDivLoop, F
 DECFSZ SYSDIVLOOP, F
;goto SysDiv8Start
 GOTO SYSDIV8START
 RETURN

;********************************************************************************

;
; Declare Power-On-Reset entry point
;
 END RESETVEC
