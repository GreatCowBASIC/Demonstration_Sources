
#chip mega4809
#option explicit


  // Define I2C settings
    #define I2C_MODE Master
    #define I2C_DATA   PORTA.2
    #define I2C_CLOCK  PORTA.3
    #define I2C_DISABLE_INTERRUPTS ON


    // Define GLCD Hardware settings
    #include <glcd.h>
    #define GLCD_TYPE GLCD_TYPE_SSD1306
    #define GLCD_I2C_Address 0x78

    // Define variables

    Dim BYTENUMBER, CCOUNT as Byte

    CCount = 0
    dim longNumber as long
    longNumber = 123456 ' max value = 4294967290
    dim wordNumber as Word
    dim outstring as string
    wordNumber = 0
    byteNumber = 0

    ; ----- Main program

    GLCDPrint 0, 0,   "GCBASIC"
    GLCDPrint (0, 16, "Anobium 2024")
    GLCDPrint (0, 32, "Portability Demo")
    GLCDPrint (0, 48, ChipNameStr )

    wait 5 s
    GLCDCLS

    ' Prepare the static components of the screen
    GLCDPrint ( 0,   0, "PrintStr")                                ; Print some text
    GLCDPrint ( 64,  0, "@")                                    ; Print some more text
    GLCDPrint ( 72,  0, ChipMhz)                                   ; Print chip speed
    GLCDPrint ( 86, 0, "Mhz")                                     ; Print some text
    GLCDDrawString( 0,8,"DrawStr")                                 ; Draw some text
    box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1                            ; Draw a box
    box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1    ; Draw a box
    Circle( 44,41,15)                                              ; Draw a circle
    line 64,31,0,31                                                ; Draw a line

    DO forever

        for CCount = 32 to 127

            GLCDPrint ( 64 ,  36,  hex(longNumber_E ) )                 ; Print a HEX string
            GLCDPrint ( 76 ,  36,  hex(longNumber_U ) )                 ; Print a HEX string
            GLCDPrint ( 88 ,  36,  hex(longNumber_H ) )                 ; Print a HEX string
            GLCDPrint ( 100 ,  36, hex(longNumber   ) )                 ; Print a HEX string
            GLCDPrint ( 112 ,  36, "h" )                                ; Print a HEX string


            GLCDPrint ( 64 ,  44, pad(str(wordNumber), 5 ) )           ; Print a padded string
            GLCDPrint ( 64 ,  52, pad(str(byteNumber), 3 ) )           ; Print a padded string


            box (46,8,56,18)                                           ; Draw a Box
            GLCDDrawChar(48, 9, CCount )                               ; Draw a character
            outString = str( CCount )                                  ; Prepare a string
            GLCDDrawString(64, 9, pad(outString,3) )                   ; Draw a string

            filledbox 3,43,11,51, wordNumber                           ; Draw a filled box

            FilledCircle( 44,41,9, longNumber xor 1)                   ; Draw a filled box
            line 0,63,64,31                                            ; Draw a line

                                                                        ; Do some simple maths
            longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
        NEXT

    LOOP
    end
        