#chip mega4809
#option explicit

#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING
#DEFINE USART_DELAY OFF


    Function ReadAD10AVRDx( ADReadPort ) as Word

        // Dimension of the functionas the ADC return registers.  These will be set to the result upon exit of this function
        Dim ReadAD10AVRDx as Word alias ADC0_RESH, ADC0_RESL
        Dim ADCPort_Ctrl_Cache as Byte


        #DEFINE PORTx_PinyCTRL PORTD_Pin6CTRL

        // Port Specific

            // Cache current settings
            ADCPort_Ctrl_Cache = PORTx_PinyCTRL
            
            // Select PORT ; Disable digital input buffer
            PORTx_PinyCTRL = PORTx_PinyCTRL & NOT PORT_ISC_gm
            PORTx_PinyCTRL = PORTx_PinyCTRL | PORT_ISC_INPUT_DISABLE_gc
        
            // Disable pull-up resistor
            PORTx_PinyCTRL = PORTx_PinyCTRL ~PORT_PULLUPEN_bm

        // Select ADC channel using GCBASIC variable
        ADC0_MUXPOS = ADReadPort

        // Non port specific
            // CLK_PER divided by 4
            ADC0_CTRLC = ADC_PRESC_DIV4_gc  | ADC_REFSEL_INTREF_gc         
                        
            // Internal reference; ADC Enable; 10-bit mode; 
            ADC0_CTRLA = ADC_ENABLE_bm  | ADC_RESSEL_10BIT_gc
                                
            /* Start ADC conversion */
            ADC0_COMMAND = ADC_STCONV_bm
            /* Wait until ADC conversion done */
            wait while ( !(ADC0_INTFLAGS & ADC_RESRDY_bm) )
            
            /* Clear the interrupt flag by writing 1: */
            ADC0_INTFLAGS = ADC_RESRDY_bm
    
        // Port Specific - revert
            PORTx_PinyCTRL = ADCPort_Ctrl_Cache 

    End Function

    HSerPrintStringCRLF "ADC Read"

    Do
        HSerPrintStringCRLF "0x" + WordToHex( ReadAD10AVRDx( 6 ) )
        wait 100 ms
    Loop


