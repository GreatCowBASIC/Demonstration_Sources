'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a GCBASIC implementation of the Picaxe AXE133 Serial LCD/OLED driver.
'''    Uses the GCB One Wire AXE133 emualator via the Serial Port
'''    This requires the GCB AXE133 emulator.
'''    See www.picaxe.com for details of the AXE133 and the Open Source code this is based upon.
'''     Supported Commands, see LCD Wire Usage.txt
'''     0-252	normal ASCII characters
'''     253, X	display 16 character pre-saved message from EEPROM memory, X can be 0-15
'''     254, X	LCD command, X can be 0 to 255
'''     255, X	control outputs A.3, A.2, A.1, A.0 (via lower 4 bits of X)
'''     So, if using a backlit LCD with the active low transistor driver
'''     on output A.2, then 255,%000 switches backlight on and 255,%100 switches off
'''@author 	EvanV
'''@licence	GPL
'''@version	1.0a
'''@date   	14.02.2015
'''********************************************************************************

; ----- Configuration

  #chip mega168, 16
  #option explicit

  ; ----- Define Hardware settings
  'Set up the Serial Port
   #define USART_BAUD_RATE 9600
   Dir PORTD.1 Out
   Dir PORTD.0 In
   ' A delay is required to enable to AXE133 Emulator to process
   #define USART_DELAY 1 ms
   #define USART_BLOCKING
   wait 500 ms

;----- Variables
  Dim DISPLAYEEPROMMESSAGE as Byte

; ----- Constants
  ' No Constants specified in this example.

; ----- Quick Command Reference:

'        The most common control commands are, any standard command will work!
'        HSerSend 254: HSerSend 1         ;Clear Display (must be followed by a "wait 20 ms" command)
'        HSerSend 254: HSerSend 8         ;Hide Display
'        HSerSend 254: HSerSend 12        ;Restore Display
'        HSerSend 254: HSerSend 14        ;Turn on Cursor
'        HSerSend 254: HSerSend 16        ;Move Cursor Left
'        HSerSend 254: HSerSend 20        ;Move Cursor Right
'        HSerSend 254: HSerSend 128       ;Move to line 1, position 1
'        HSerSend 254: HSerSend y         ;Move to line 1, position x (where y = 128 + x)
'        HSerSend 254: HSerSend 192       ;Move to line 2, position 1
'        HSerSend 254: HSerSend y         ;Move to line 2, position x (where y = 192 + x)

; ----- Main body of program commences here.

  do forever
        'CLS
        HSerSend 254: HSerSend 1: wait 20 ms
        HserPrint "START LCD TEST"
        'Locate 1,0
        HSerSend 254: HSerSend 192
        HserPrint "DISPLAY ON"
        wait 1 s

        for displayEEPromMessage = 0 to 15
            'CLS
            HSerSend 254: HSerSend 1: wait 20 ms
            HSerPrint "EEProm Msg#"
            HSerPrint displayEEPromMessage
            'Second Line
            HSerSend 254: HSerSend 192
            'Display an EEprom message
            HSerSend 253: HSerSend displayEEPromMessage
            wait 1 s
        next
        'All LCD outputs on
        HSerSend 255: HSerSend b'00000111'
        wait  1 s
        ;All LCD outputs off
        HSerSend 255: HSerSend b'00000000'         ; all outputs off
        wait  1 s

  loop
