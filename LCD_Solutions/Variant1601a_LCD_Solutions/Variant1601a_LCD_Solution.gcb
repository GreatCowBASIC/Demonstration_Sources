'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates shows one LCD (16x1) being driven using an LCD I2C adapter.
'''
'''This is a sub type LCD and uses the additional constant called 1601a
'''
'''based on the NXP PCF8574T This uses the GCB software implementation of TWI/IC2 for AVR devices.
'''Two types are supported as shown below.  This example is using "#define LCD_IO 10"
'''- Set LCD_I0 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter.
'''- Set LCD_I0 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip.
'''
'''
'''@author  EvanV HiB
'''@licence GPL
'''@version 1.1
'''@date    9.05.2020
'''********************************************************************************

;------ Configuration

  #chip tiny84,1

  ; ----- Define Hardware settings
  ' Define I2C settings - CHANGE PORTS
   #define LCD_I2C_Address 0x0E
   #define I2C_MODE Master
   #define I2C_DATA PORTA.4
   #define I2C_CLOCK PORTA.5
   #define I2C_DISABLE_INTERRUPTS ON
   'Optionally, you can reduce the I2C timings.
   #define I2C_BIT_DELAY 0 us
   #define I2C_CLOCK_DELAY 1 us
   #define I2C_END_DELAY 0 us

  '''Set up LCD
   #define LCD_IO 10
   #define LCD_VARIANT 1601a


   'You may need to use SLOW or MEDIUM if your LCD is a slower device.
   #define LCD_SPEED FAST
   'You may need to invert these states. Dependent of LCD I2C adapter.
   #define LCD_Backlight_On_State  1
   #define LCD_Backlight_Off_State 0

; ----- Constants
  'None required beyond the scope of the hardware.

; ----- Quick Command Reference:

 '''Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
 '''Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip

; ----- Main body of program commences here.
    Locate 0,0
    PRINT "Great Cow BASIC"
    WAIT 2 s

    Do Forever
        CLS
        WAIT 3 s
        locate 0,1
        PRINT "START TEST"



        wait 5 s
        CLS
        Locate 0,1
        Print "Cursor ON"
        LCDcursor CursorOn
        wait 3 S


        CLS
        Locate 0,2
        Print "FLASH ON"
        LCDcursor FLASHON
        wait 3 s

        CLS
        locate 0,2
        Print "FLASH OFF"
        LCDCURSOR FLASHOFF
        wait 3 sec

        Locate 0,0
        Print "CURSR & FLSH ON"
        LCDCURSOR CURSORON
        LCDCURSOR FLASHON
        Wait 3 sec

        Locate 0,0
        Print "CURSR & FLSH OFF"
        LCDCURSOR CursorOFF
        LCDCURSOR FLASHOFF
        Wait 3 sec

        CLS
        Locate 0,0
        PRINT "Flashing Display"
        wait 500 ms

        repeat 10
            LCDCURSOR LCDOFF
            wait 500 ms
            LCDCURSOR LCDON
            wait 500 ms
        end repeat

        CLS
        locate 0,1
        PRINT "END TEST"
        wait 500 ms

    loop


end
