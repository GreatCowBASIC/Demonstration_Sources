'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates shows one LCD (16x2 & 16x4) being driven using a LCD I2C adapters.
'''This uses the GCB hardware implementation of IC2 for Microchip devices.
'''Two types are supported as shown below.  This example is using "#define LCD_IO 10"
'''- Set LCD_I0 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter.
'''- Set LCD_I0 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip.
'''- Use the following to address a diferent I2C device.
'''-     #define LCD_I2C_Address 0x4e            'This is the default value, change as appropiate
'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    17.02.2015
'''********************************************************************************

; ----- Configuration


  #chip 16f1939, 32
  #option explicit

  ; ----- Define Hardware settings
  ' Define I2C settings - CHANGE PORTS
  #define HI2C_BAUD_RATE 100
  #define HI2C_DATA PORTC.4
  #define HI2C_CLOCK PORTC.3
  'Initialise I2C Slave
  'I2C pins need to be input for SSP module
  Dir HI2C_DATA in
  Dir HI2C_CLOCK in
 'MASTER
  HI2CMode Master


  '''Set up LCD
   #define LCD_IO 10
   #define LCD_I2C_Address_1 0x4E

   'You may need to use SLOW or MEDIUM if your LCD is a slower device.
   #define LCD_SPEED slow
   'You may need to invert these states. Dependent of LCD I2C adapter.
   #define LCD_Backlight_On_State  1
   #define LCD_Backlight_Off_State 0

   ' THIS CONFIG OF THE SERIAL PORT WORKS WITH A  MAX232 (or equiv) THEN TO PC
   ' USART settings - CHANGE PORTS if required
   #define USART_BAUD_RATE 9600
   Dir PORTc.6 Out
   Dir PORTc.7 In
   #define USART_TX_BLOCKING
   wait 500 ms

; ----- Constants
  'None required beyond the scope of the hardware.


; ----- Quick Command Reference:

 '''Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
 '''Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip

;----- Variables
  Dim DISPLAYNEWLINE as Byte


; ----- Main body of program commences here.
    PRINT "Great Cow BASIC"
    WAIT 1 s

    Do Forever
        SHOWI2C
        CLS
        WAIT 3 s
        PRINT "START TEST"
        locate 1,0
        PRINT "DISPLAY ON"
        wait 3 s

        CLS
        Locate 0,0
        Print "Cursor ON"
        Locate 1,0
        LCDcursor CursorOn
        wait 3 S
        CLS
        LCDcursor CursorOFF
        locate 0,0
        Print "Cursor OFF"
        wait 3 s
        CLS
        Locate 0,0
        Print "FLASH ON"
        Locate 1,0
        LCDcursor FLASHON
        wait 3 s

        CLS
        locate 0,0
        Print "FLASH OFF"
        LCDCURSOR FLASHOFF
        wait 3 sec

        Locate 0,0
        Print "CURSR & FLSH ON"
        locate 1,0
        LCDCURSOR CURSORON
        LCDCURSOR FLASHON
        Wait 3 sec

        Locate 0,0
        Print "CURSR & FLSH OFF"
        locate 1,0
        LCDCURSOR CursorOFF
        LCDCURSOR FLASHOFF
        Wait 3 sec

        CLS
        Locate 0,4
        PRINT "Flashing"
        Locate 1,4
        Print "Display"
        wait 500 ms

        repeat 10
            LCDCURSOR LCDOFF
            wait 500 ms
            LCDCURSOR LCDON
            wait 500 ms
        end repeat
        CLS
        Locate 0,0
        Print "DISPLAY & BACKL."
        Locate 1,0
        Print "FOR 5 SEC"
        Wait 2 SEC
        LCDCURSOR LCDOFF
        LCDBacklight OFF
        WAIT 5 s
        LCDBacklight ON
        CLS
        Locate 0,0
        LCDCURSOR LCDON
        Print "END TEST"
        wait 3 s
    loop


end


SUB SHOWI2C
; ----- Main body of program commences here.
  ' Now assumes Serial Terminal is operational
  dim DeviceID as byte

  HSerPrintCRLF
  HSerPrint "Hardware I2C "
  HSerPrintCRLF 2

      ' Now assumes Serial Terminal is operational
      HSerPrintCRLF
      HSerPrint "   "
      'Create a horizontal row of numbers
      for DeviceID = 0 to 15
        HSerPrint hex(deviceID)
        HSerPrint " "
      next

      'Create a vertical column of numbers
      for DeviceID = 0 to 255
        DisplayNewLine = DeviceID % 16
        if DisplayNewLine = 0 Then
          HSerPrintCRLF
          HserPrint hex(DeviceID)
          if DisplayNewLine > 0 then
            HSerPrint " "
          end if
        end if
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        if HI2CWaitMSSPTimeout <> True then

          'Send to address to device
          HI2CSend ( deviceID )

          'Did device fail to respond?
          if HI2CAckPollState = false then
            HI2CSend ( 0 )
            HI2CSend ( 0 )
            HSerPrint   hex(deviceID)
          Else
            HSerPrint "--"
          end if

          'Do a stop.
          HI2CStop

        end if

      next

      HSerPrintCRLF 2
      HSerPrint   "End of Search"
      HSerPrintCRLF 2
      wait 1 s
      END SUB
