'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates shows one LCD (16x2 & 16x4) being driven using a LCD I2C adapters.
'''This uses the GCB hardware implementation of IC2 for Microchip devices.
'''Two types are supported as shown below.  This example is using "#define LCD_IO 10"
'''- Set LCD_I0 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter.
'''- Set LCD_I0 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip.
'''- Use the following to address a diferent I2C device.
'''-     #define LCD_I2C_Address 0x4e            'This is the default value, change as appropiate
'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    21.10.2015
'''********************************************************************************

    'Chip Settings.
    #chip 18f25k42, 64
    #option Explicit
    #config mclr=on

    #startup InitPPS, 85

    Sub InitPPS

          RC4PPS =      0x22   'RC4->I2C1:SDA1
          RC3PPS =      0x21   'RC3->I2C1:SCL1
          I2C1SCLPPS =  0x13   'RC3->I2C1:SCL1
          I2C1SDAPPS =  0x14   'RC4->I2C1:SDA1

          'Module: UART1
          RC6PPS = 0x0013     'TX1 > RC6
          U1RXPPS = 0x0017    'RC7 > RX1

    End Sub

    'Template comment at the end of the config file


    '' -------------------PORTA----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    ---------------------------------
    ''-----------------------------------------
    ''

    '' -------------------PORTB----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -------| O | ----------| O | I |-
    ''-----------------------------------------
    ''

    '' ------------------PORTC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' IO:    -S---S-------I---I-| X |---------
    ''-----------------------------------------
    ''


    #define LEDD1 PORTB.1
    #define LEDD2 PORTB.5
    #define SwitchIn        PORTB.0


    Dir     LEDD1         Out
    Dir     LEDD2         Out
    Dir     SwitchIn      In


    'Setup Serial port
    #define USART_BAUD_RATE 9600
    #define USART_TX_BLOCKING


    ' Define I2C settings
    #define HI2C_BAUD_RATE 125
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3

    HI2CMode Master

    'Initialise I2C - For the I2C module the ports need to be set to Output.
    Dir HI2C_DATA out
    Dir HI2C_CLOCK out
    RC3I2C.TH0=0   'Port specific controls may be required - see the datasheet
    RC4I2C.TH0=0   'Port specific controls may be required - see the datasheet
    ODCC4=1        'Port specific controls may be required - see the datasheet
    ODCC3=1        'Port specific controls may be required - see the datasheet

    '''Set up LCD
    #define LCD_IO 10
    #define LCD_I2C_Address_1 0x4E
    #define LCD_WIDTH 20                ;specified lcd width for clarity only.  20 is the default width

    'You may need to use SLOW or MEDIUM if your LCD is a slower device.
    #define LCD_SPEED slow
    'You may need to invert these states. Dependent of LCD I2C adapter.
    #define LCD_Backlight_On_State  1
    #define LCD_Backlight_Off_State 0

; ----- Constants
  'None required beyond the scope of the hardware.

; ----- Quick Command Reference:

 '''Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
 '''Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip

; ----- Main body of program commences here.

    CLS

    Print "Great Cow BASIC"
    Locate 1,0
    Print "Ver 1.00.xx"
    WAIT 3 s

    Do Forever
        CLS
        WAIT 3 s
        PRINT "START TEST"
        locate 1,0
        PRINT "DISPLAY ON"
        wait 3 s

        CLS
        Locate 0,0
        Print "Cursor ON"
        Locate 1,0
        LCDcursor CursorOn
        wait 3 S
        CLS
        LCDcursor CursorOFF
        locate 0,0
        Print "Cursor OFF"
        wait 3 s
        CLS
        Locate 0,0
        Print "FLASH ON"
        Locate 1,0
        LCDcursor FLASHON
        wait 3 s

        CLS
        locate 0,0
        Print "FLASH OFF"
        LCDCURSOR FLASHOFF
        wait 3 sec

        Locate 0,0
        Print "CURSR & FLSH ON"
        locate 1,0
        LCDCURSOR CURSORON
        LCDCURSOR FLASHON
        Wait 3 sec

        Locate 0,0
        Print "CURSR & FLSH OFF"
        locate 1,0
        LCDCURSOR CursorOFF
        LCDCURSOR FLASHOFF
        Wait 3 sec

        CLS
        Locate 0,4
        PRINT "Flashing"
        Locate 1,4
        Print "Display"
        wait 500 ms

        repeat 10
            LCDCURSOR LCDOFF
            wait 500 ms
            LCDCURSOR LCDON
            wait 500 ms
        end repeat
        CLS
        Locate 0,0
        Print "DISPLAY & BACKL."
        Locate 1,0
        Print "FOR 5 SEC"
        Wait 2 SEC
        LCDCURSOR LCDOFF
        LCDBacklight OFF
        WAIT 5 s
        LCDBacklight ON
        CLS
        Locate 0,0
        LCDCURSOR LCDON
        Print "END TEST"
        wait 3 s
    loop


end
