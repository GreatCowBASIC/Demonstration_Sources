/*
  A demonstration program for GCGB and GCB.
  --------------------------------------------------------------------------------------------------------------------------------
  This program demonstrates shows one LCD (16x2 & 16x4) being driven using a LCD I2C adapters.
  This uses the GCB hardware implementation of IC2 for Microchip devices.
  Two types are supported as shown below.  This example is using "#define LCD_IO 10"
  - Set LCD_I0 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter.
  - Set LCD_I0 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip.
  - Use the following to address a diferent I2C device.
  -     #define LCD_I2C_Address 0x4e            'This is the default value, change as appropiate
  @author  EvanV
  @licence GPL
  @version 1.0a
  @date    16.03.2022
  ********************************************************************************
*/

    #chip 16f18855,32
    #option explicit
  
    'Generated by PIC PPS Tool for Great Cow Basic
      'PPS Tool version: 0.0.6.2
      'PinManager data: Not available (3)
      'Generated for 16lf18855
      '
      'Template comment at the start of the config file
      '
      #startup InitPPS, 85
      #define PPSToolPart 16lf18855

      Sub InitPPS
          'RC0->EUSART:TX;
          RC0PPS = 0x0010
          'RC1->EUSART:RX;
          RXPPS  = 0x0011

          'Module: MSSP1
          RC3PPS = 0x0015    'SDA1 > RC3
          SSP1DATPPS = 0x0013    'RC3 > SDA1 (bi-directional)
          RC4PPS = 0x0014    'SCL1 > RC4
          SSP1CLKPPS = 0x0014    'RC4 > SCL1 (bi-directional)
          
      End Sub
      'Template comment at the end of the config file


  ; ----- Define Hardware settings
    ' Define I2C settings
    #define HI2C_BAUD_RATE 400
    #define hi2c_DATA PORTC.3
    #define hi2c_CLOCK PORTC.4
    'I2C pins need to be input for SSP module
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in
    'MASTER MODE
    HI2CMode Master


  'Set up LCD
   #define LCD_IO 10
   #define LCD_I2C_Address_1 0x4E
   #define LCD_WIDTH 20                ;specified lcd width for clarity only.  20 is the default width

   'You may need to use SLOW or MEDIUM if your LCD is a slower device.
   #define LCD_SPEED OPTIMAL
   'You may need to invert these states. Dependent of LCD I2C adapter.
   #define LCD_Backlight_On_State  1
   #define LCD_Backlight_Off_State 0

  ; ----- Constants
  'None required beyond the scope of the hardware.

  ; ----- Quick Command Reference:

  'Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
  'Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip

; ----- Main body of program commences here.
    CLS
    PRINT "Great Cow BASIC 2022"

    Locate 1,0
    PRINT "Great Cow BASIC 2022"
    WAIT 3 s

    Do Forever
        CLS
        PRINT "START TEST"
        locate 1,0
        PRINT "DISPLAY ON"
        wait 3 s

        CLS
        Locate 0,0
        Print "Cursor ON"
        Locate 1,0
        LCDcursor CursorOn
        wait 3 S
        CLS
        LCDcursor CursorOFF
        locate 0,0
        Print "Cursor OFF"
        wait 3 s
        CLS
        Locate 0,0
        Print "FLASH ON"
        Locate 1,0
        LCDcursor FLASHON
        wait 3 s

        CLS
        locate 0,0
        Print "FLASH OFF"
        LCDCURSOR FLASHOFF
        wait 3 sec

        Locate 0,0
        Print "CURSR & FLSH ON"
        locate 1,0
        LCDCURSOR CURSORON
        LCDCURSOR FLASHON
        Wait 3 sec

        Locate 0,0
        Print "CURSR & FLSH OFF"
        locate 1,0
        LCDCURSOR CursorOFF
        LCDCURSOR FLASHOFF
        Wait 3 sec

        CLS
        Locate 0,4
        PRINT "Flashing"
        Locate 1,4
        Print "Display"
        wait 500 ms

        repeat 10
            LCDCURSOR LCDOFF
            wait 500 ms
            LCDCURSOR LCDON
            wait 500 ms
        end repeat
        CLS
        Locate 0,0
        Print "DISPLAY & BACKL."
        Locate 1,0
        Print "FOR 5 SEC"
        Wait 2 SEC
        LCDCURSOR LCDOFF
        LCDBacklight OFF
        WAIT 5 s
        LCDBacklight ON
        CLS
        Locate 0,0
        LCDCURSOR LCDON
        Print "END TEST"
        wait 3 s
    loop


end
