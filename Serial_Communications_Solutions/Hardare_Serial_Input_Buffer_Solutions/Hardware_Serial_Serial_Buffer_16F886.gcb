'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This example code implements a serial buffer ring.
'''This means the incoming serial port data is placed into a buffer that can be read at anytime.
'''This example uses an interrupt and a buffer.
'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    31.01.2015
'''********************************************************************************

; ----- Configuration
  #chip 16F886
  #option explicit

; ----- Define Hardware settings
  ' Pot port
  DIR PORTA.0 IN

; ----- Constants
  ' Define the USART port
  #define USART_BAUD_RATE 9600
  #define USART_BLOCKING
  #define USART_DELAY off

  ' [[change to your config] Ensure these port addresses are correct
  #define SerInPort PORTc.7
  #define SerOutPort PORTc.6
  'Set pin directions
  Dir SerOutPort Out
  Dir SerInPort In

; Constants etc required for Buffer Ring
  #define BUFFER_SIZE 8
  #define bkbhit (next_in <> next_out)
;  Variables for Buffer Ring
  Dim buffer(BUFFER_SIZE)
  Dim next_in as byte: next_in = 1
  Dim next_out as byte: next_out = 1
  Dim TEMPPNT as Byte


; ----- Main body of program commences here.
  'Interrupt Handlers
  On Interrupt UsartRX1Ready Call readUSART

  HSerPrint "Buffer Ring"
  HSerPrintCRLF 2









   Do

          ' wait for incoming data
          do while bkbhit

            ' send back the last data byte received!!
            HSerSend chr(bgetc)

          Loop

  Loop

; ----- Support methods.  Subroutines and Functions

    Sub readUSART

        buffer(next_in) = HSerReceive
        temppnt = next_in
        next_in = ( next_in + 1 ) % BUFFER_SIZE
        if ( next_in = next_out ) then  ' buffer is full!!
           next_in = temppnt
        end if


    End Sub


    function bgetc
       wait while !(bkbhit)
       bgetc = buffer(next_out)
       next_out=(next_out+1) % BUFFER_SIZE
    end Function

