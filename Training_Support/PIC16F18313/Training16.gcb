#chip 16f18313
#config MCLR=ON
#option Explicit
#include <ds18b20.h>

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.6.1
    'PinManager data: v1.79.0
    'Generated for 16f18313
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85
    #define PPSToolPart 16f18313

    Sub InitPPS

            'Module: EUSART
            RA5PPS = 0x0014    'TX > RA5

    End Sub
    'Template comment at the end of the config file

    'USART settings for USART1
    #define USART_BAUD_RATE 115200
    #define USART_TX_BLOCKING
    #define USART_DELAY OFF

    #define LCD_IO 107   'K107


    ; ----- Constants
    ' DS18B20 port settings
    #define DQ RA4


; ----- Quick Command Reference:

 '''Set LCD_10 to 10 for the YwRobot LCD1602 IIC V1 or the Sainsmart LCD_PIC I2C adapter
 '''Set LCD_10 to 12 for the Ywmjkdz I2C adapter with pot bent over top of chip

; ----- Variables
  dim TempC_100 as LONG   ' a variabler to handle the temperature calculations
  Dim DSdata,WHOLE, FRACT, DIG as word
  Dim CCOUNT, SIGNBIT as Byte


; ----- Main body of program commences here.

    ccount = 0
    CLS
    print "GCBasic 2023"
    locate 1,0
    print "DS18B20 Demo"
    wait 2 s
    CLS

    do forever
       ' The function readtemp returns the integer value of the sensor
       DSdata = readtemp

       ' Display the integer value of the sensor on the LCD
       locate 0,0
       print hex(ccount)
       print " Roundup "
       locate 0,11
       print DSdata
       print chr(223)+"C"



       ' Display the integer and decimal value of the sensor on the LCD

       ' The function readtemp12 returns the raw value of the sensor.
       ' The sensor is read as a 12 bit value therefore each unit equates to 0.0625 of a degree
       DSdata = readtemp12


       SignBit = DSdata / 256 / 128
       If SignBit = 0 Then goto Positive
       ' its negative!
       DSdata = ( DSdata # 0xffff ) + 1 ' take twos comp


    Positive:
       ' Convert value * 0.0625 by factorisation
       TempC_100 =  DSdata *  625
       Whole = TempC_100 / 10000
       Fract = TempC_100 % 10000


       If SignBit = 0 Then goto DisplayTemp
       Print "-"

    DisplayTemp:
       Locate 1,0
       print hex(ccount)
       Locate 1,6
       Print Whole
       Print "."
       Print leftpad( str(Fract),4,"0")
       Print chr(223)+"C"

       wait 2 s
       ccount++

    loop
