/*

    Inspect the memory in the simulator to see results.

    Use See https://www.h-schmidt.net/FloatConverter/IEEE754.html

    or    https://babbage.cs.qc.cuny.edu/ieee-754.old/64bit.html

*/
// Chip Settings
#CHIP 18F16Q20
    #OPTION Explicit
    

    #DEFINE USART_BAUD_RATE 9600
    #DEFINE USART_TX_BLOCKING
    #DEFINE USART_DELAY OFF

  // PIC PPS Tool version: 0.0.6.5
    
      #startup InitPPS, 85
    #DEFINE PPSToolPart 18F16Q20

      Sub InitPPS
              
              // Module: UART pin directions
              Dir PORTB.7 Out    ' Make TX1 pin an output
              // Module: UART1
              RB7PPS =    0x0013    // TX1 > RB7
          
          End Sub
      // Add this code segment to your GCBASIC source program

// *****************************************************************************************************

    //! Wait 200 ms to permit any remote serial terminal to settle.
      wait 200 ms
    //! Clear the terminal
      HserSend    0x01 
 
// ---------- Constant and variable definition and main program ---------------------------------

//!Maths and conditional tests
//!

    #script
        Pi = 22/7
    #endscript

    Dim myCircumference, myRadius as Single
    Dim myDiameter as Single Alias myCircumference_E, myCircumference_U, myCircumference_H, myCircumference

    HserPrintCRLF

    //? Change this constant
    myRadius = 10.5

    HSerPrintStringCRLF "myRadius = " + ltrim(SingleToString(myRadius))

    myCircumference = myRadius * Pi * 2
    HSerPrintStringCRLF "myCircumference = " + ltrim(SingleToString(myCircumference))

    If myRadius > 10.5 Then
        HSerPrintStringCRLF "myRadius greater than 10.5" 
    Else If myRadius = 10.5 Then
        HSerPrintStringCRLF "myRadius equals 10.5"
    Else If  myRadius < 10.5 Then
        HSerPrintStringCRLF "myRadius less than 10.5" Then
    End if

    myDiameter = myCircumference / Pi
    HSerPrintStringCRLF "myDiameter = " + ltrim(SingleToString(myDiameter))

    Do
    Loop

    End

