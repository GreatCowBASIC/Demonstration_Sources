/*
A demonstration program for GCBASIC.
The program shows 10 bit PWM options for this device

This demonstration how use the PWM 10 bit Module but with this method you can change the parameters.

You need to ensure the 10bit PWM is valid. See the datasheet.

HPWM CCP is using HPWM command.


Fixed Mode PWM	
        Min: #chip 12f683,8
            #define PWM_Freq 0.5 'Frequency of PWM in KHz
            #define PWM_Duty 50 'Duty cycle of PWM (%)

        Max: #chip 12f683,8
            #define PWM_Freq 15 'Frequency of PWM in KHz
            #define PWM_Duty 50 'Duty cycle of PWM (%)

        Min: #chip 12f683,4
            #define PWM_Freq 0.345 'Frequency of PWM in KHz
            #define PWM_Duty 50 'Duty cycle of PWM (%)

        Max: #chip 12f683,4
            #define PWM_Freq 7 'Frequency of PWM in KHz
            #define PWM_Duty 50 'Duty cycle of PWM (%)

        Min:#chip 12f683,2
            #define PWM_Freq 0.123 'Frequency of PWM in KHz
            #define PWM_Duty 50 'Duty cycle of PWM (%)

        Max: #chip 12f683,2
            #define PWM_Freq 3 'Frequency of PWM in KHz
            #define PWM_Duty 50 'Duty cycle of PWM (%)

        Min: #chip 12f683,1
            #define PWM_Freq 0.062 'Frequency of PWM in KHz
            #define PWM_Duty 50 'Duty cycle of PWM (%)

        Max: #chip 12f683,1
            #define PWM_Freq 1 'Frequency of PWM in KHz
            #define PWM_Duty 50 'Duty cycle of PWM (%)

*/
'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    23.08.2018
'''*************************************************************************



    'Chip Settings
    #chip 12F683, 8
    #option Explicit 

    'Set the direction of the CCP1/PWM port
    DIR GP2 Out

    // Turn on Fixed Mode PWM/CPP1
    PWMON
    
    // The maximum duty is four times the PR2. So, we can calc that and assign.
    Dim maxduty as Word
    maxduty = [WORD]( PR2 ) * 4

do
            Dim dutyvalue, dutycalc as Word
            Dim dutytransformed as Word

            // Need to cast the calc to ensure the WORD is the result of the BYTE calculation
            for dutyvalue = 0 to maxduty
                // Set the 10bit value using CCPR1L and CCP1CON register two LSbs DC1B<1:0>
                DC1B1  = dutyvalue.1
                DC1B0  = dutyvalue.0
                CCPR1L = dutyvalue / 4  // shift the 10 bit value right
                wait 1 ms
            next
            for dutyvalue = maxduty to 0 Step -1
                // Set the 10bit value using CCPR1L and CCP1CON register two LSbs DC1B<1:0>
                DC1B1  = dutyvalue.1
                DC1B0  = dutyvalue.0
                CCPR1L = dutyvalue / 4  // shift the 10 bit value right
                wait 1 ms
            next
                
    loop


