'''A demonstration program for GCBASIC.
'''The program shows PWM options for this device
''':
'''This demonstration how use the PWM 8 bit Module but with this method you can change the parameters.
''':
'''You can make the ASM smaller, adapt the PWM Optimisation!!
'''
'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    23.08.2018
'''*************************************************************************

    'Chip Settings
    #chip 16f690, 8

    'Set the direction of the CCP1/PWM port
    DIR portc.5 Out

    #define HPWM_FAST                   'This constant will optimised the code by caching the complex PWM calculations.
    HPWM 1, 38, 127

    do

        'use for-loop to show the duty changing a 8bit value
        dim dutyvalue as byte
        for dutyvalue = 0 to 255
            HPWMUpdate 1, dutyvalue       'Only update the duty value
            wait 10 ms
        next
        for dutyvalue = 254 to 1
            HPWMUpdate 1, dutyvalue       'Only update the duty value
            wait 10 ms
        next
    loop

''' GCB Optimisation file

'Optmise PWM.h
    #define USE_HPWMCCP1 TRUE
    #define USE_HPWMCCP2 FALSE
    #define USE_HPWMCCP3 FALSE
    #define USE_HPWMCCP4 FALSE
    #define USE_HPWMCCP5 FALSE

    #define USE_HPWM1 FALSE
    #define USE_HPWM2 FALSE
    #define USE_HPWM3 FALSE
    #define USE_HPWM4 FALSE
    #define USE_HPWM5 FALSE
    #define USE_HPWM6 FALSE
    #define USE_HPWM7 FALSE
    #define USE_HPWM8 FALSE

    #define USE_HPWM_TIMER2 TRUE
    #define USE_HPWM_TIMER4 FALSE
    #define USE_HPWM_TIMER6 FALSE
