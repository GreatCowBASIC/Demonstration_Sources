' Use program uses the GCBASIC CCP2 PWM.
' This program will setup the specified CCP2 PWM Channel using the in-build GCBASIC PWM calculations
' The registers and bits used can setup any CCP PWM module.  This assumes that yoor desired PWM frequency is higher than the microcontrollers frequency.
' You will need to add the Postscaler register code to enable lower frequencies. Currently, commented out.
'
' This example uses CCP2 with timer 2 - you have to use timer2 - you cannot change.
'
' Fixed frequency of 100mhz with 50% duty
'
#chip 16f1705,32


     'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.5
    'PinManager data: 07/03/2017
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

    Sub InitPPS

        'Module: CCP2
        RC5PPS = 0x000D    'CCP2 > RC5

    End Sub
    'Template comment at the end of the config file


    'Set the PWM pin to output mode
    DIR PORTC.5 out

    #define PWM_Freq 100
    #define PWM_Duty 50

    'The pwm channel MUST match the PPS!!!!!!

    ' Writing to 8 MSBs of pwm duty cycle in CCPRL register
    CCPR2L = FnLSR((DutyCycle & 0x03FC),2)    'DutyCycle is a system wide constants based on the PWM_Duty constant

    ' Writing to 2 LSBs of pwm duty cycle in CCPCON register
    CCP2CON = (CCP2CON & 0xCF) | FnLSL((DutyCycle & 0x0003),4) | 0x0C  'Set the PWM ON (with the OR 0x0C and set the two bits of the 10bit number)

'    C2TSEL0 = 0x00          'Reassert CCP2 clock source is timer2. Not really needed as this is the default
'    C2TSEL1 = 0x00          'Reassert CCP2 clock source is timer2. Not really needed as this is the default

    'The timer parameters
    pr2 = PRxPeriodRegister 'PRxPeriodRegister is a system wide constant based on the PWM_Freq constant. Change the prX to pr2|pr4|pr6

' if your desired PWM_FREQ is less than the microcontroller clock speed then you NEED this section
'
'    ' if TimerXPrescaleSelectValue is not equal to 1 then you need this code to set the Prescaler
'    if TimerXprescaleselectValue = 1 then
'          'change TxCKPS0 and TxCKPS1 to match your desired timer
'          SET T2CKPS0 OFF
'          SET T2CKPS1 OFF
'
'    else if TimerXprescaleselectValue = 4 then
'          'change TxCKPS0 and TxCKPS1 to match your desired timer
'          SET T2CKPS0 ON
'          SET T2CKPS1 OFF
'
'    else if TimerXprescaleselectValue = 16 then
'          'change TxCKPS0 and TxCKPS1 to match your desired timer
'          SET T2CKPS0 OFF
'          SET T2CKPS1 ON
'
'    end if

    StartTimer 2            'start timer 2

    do
        'maintain the processor....
    Loop


