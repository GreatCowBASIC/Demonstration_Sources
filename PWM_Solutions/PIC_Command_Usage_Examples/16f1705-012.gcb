' Use program uses the GCBASIC 10-bit PWM. This chip has a 10-bit PWM module.
' This program will setup the specified PWM Channel using the in-build GCBASIC PWM calculations
' The registers and bits used can setup any 10-bit PWM module.
'
' This example uses PWM4 with timer 2.
'
' Fixed frequency of 100mhz with 50% duty
'
#chip 16f1705,32


     'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.5
    'PinManager data: 07/03/2017
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

    Sub InitPPS

        'Module: PWM4
        RC5PPS = 0x000F    'PWM4OUT > RC5

    End Sub
    'Template comment at the end of the config file


    'Set the PWM pin to output mode
    DIR PORTC.5 out

    #define PWM_Freq 100
    #define PWM_Duty 50

    'The pwm channel MUST match the PPS!!!!!!

    'The PWM duty parameters - you will need to change the pXsel0 and pXsel0 (change the X), change PWMXEN (change the X) and select the correct bit value for pXsel0 and pXsel0 from the datasheet
    pwm4dch = DutyCycleH    'this is a system wide constants based on the PWM_Duty constant
    pwm4dcl = DutyCycleL    'this is a system wide constants based on the PWM_Duty constant

    'The PWM timer select parameters - you will need to change the pXsel0 and pXsel0 (change the X), change PWMXEN (change the X) and select the correct bit value for pXsel0 and pXsel0 from the datasheet
    p4tsel0 = 0             'select timer 6 for PWM4  - see the datasheet
    p4tsel1 = 1             'select timer 6 for PWM4  - see the datasheet

    'The PWM enable parameter
    PWM4EN = 1              'finally, enable PWM4

    'The timer parameters
    pr6 = PRxPeriodRegister 'PRxPeriodRegister is a system wide constants based on the PWM_Freq constant. Change the prX to pr2|pr4|pr6
    StartTimer 6            'start timer 6


    do
        'maintain the processor....
    Loop
