'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the T6963 LCD and GLCD capabilities.
'''This program will draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV
'''@licence GPL
'''@version 1.0
'''@date    3.1.19
'''********************************************************************************

  #chip 16f1939,32
  #option explicit

  #include <glcd.h>
  #define GLCD_TYPE GLCD_TYPE_T6963_64

  '***********************************************************************************************
  'define the connectivity - the 8bit port
  #define GLCD_DATA_PORT PORTD             'Library support contigous 8-bit port

'  or
'  #define GLCD_DB0      PORTD.0            'chip specific configuration where the ibrary supports 8-bit port defined via 8 constants
'  #define GLCD_DB1      PORTD.1            'chip specific configuration
'  #define GLCD_DB2      PORTD.2            'chip specific configuration
'  #define GLCD_DB3      PORTD.3            'chip specific configuration
'  #define GLCD_DB4      PORTD.4            'chip specific configuration
'  #define GLCD_DB5      PORTD.5            'chip specific configuration
'  #define GLCD_DB6      PORTD.6            'chip specific configuration
'  #define GLCD_DB7      PORTD.7            'chip specific configuration

  #define GLCD_CS        PORTa.7           'Chip Enable (Active Low)
  #define GLCD_CD        PORTa.0           'Command or Data conrol line port
  #define GLCD_RD        PORTA.1           'Read control line  port
  #define GLCD_WR        PORTA.2           'Write control line port
  #define GLCD_RESET     PORTA.3           'Reset port
  #define GLCD_FS        PORTA.5           'FS port
  #define GLCD_FS_SELECT 1                 'FS1 Font Select port. 6x8 font: FS1=�High�=1 8x8 font FS1=�Low�=0 for GLCD_FS_SELECT

  '***********************************************************************************************
  '*
  '* Note    :   The T6963 controller's RAM address space from $0000 - $7FFF, total 32kbyte RAM, or it could be 64kbyte RAM best check!!
  '*
  '***********************************************************************************************
  #define TEXT_HOME_ADDR      0x0000                                                         'This is specific to the GLCD display
  #define GRH_HOME_ADDR       0x3FFF                                                         'This is specific to the GLCD display
  #define CG_HOME_ADDR        0x77FF                                                         'This is specific to the GLCD display
  #define COLUMN              40    'Set column number to be 40 , 32, 30 etc.                 This is specific to the GLCD display
  #define MAX_ROW_PIXEL       64    'MAX_ROW_PIXEL the physical matrix length (y direction)   This is specific to the GLCD display
  #define MAX_COL_PIXEL       240   'MAX_COL_PIXEL the physical matrix width (x direction)    This is specific to the GLCD display

  '***********************************************************************************************
  '* End of configuration
  '***********************************************************************************************


;Start of demonstration main program

    do Forever

        GLCDPrintLargeFont ( 0, 0, "WG24064A-TMI-TZ#")
        GLCDPrintLargeFont ( 0, 20, "Feb 2019")
        wait 2 s

        CLS

        locate 5, 3
        Print "40cols x 8rows character mode"
        locate 6, 3
        Print "Mixed mode LCD and GLCD!!"
        locate 7, 32
        Print "Anobium"
        wait 4 s
        cls
        GLCDCLS

        GLCDPrintLargeFont ( 0, 0, "WG24064A-TMI-TZ#")
        GLCDPrintLargeFont ( 0, 20, "LCD Capability")
        wait 4 s
        CLS
        GLCDCLS

        ; ----- Main body of program commences here.
            Repeat 1
                CLS
                PRINT "START TEST"
                locate 1,12
                PRINT "Version 0x"
                LCDHex ( 1, LeadingZeroActive )
                locate 1,0
                PRINT "DISPLAY ON"
                wait 2 s

                CLS
                Locate 0,0
                Print "Cursor ON"
                Locate 1,0
                LCDcursor CursorOn
                wait 1 S

                CLS
                LCDcursor CursorOFF
                locate 0,0
                Print "Cursor OFF"
                wait 1 s

                CLS
                Locate 0,0
                Print "FLASH ON"
                Locate 1,0
                LCDcursor FLASHON
                wait 1 s

                CLS
                locate 0,0
                Print "FLASH OFF"
                LCDCURSOR FLASHOFF
                wait 1 sec

                Locate 0,0
                Print "CURSR & FLSH ON"
                locate 1,0
                LCDCURSOR CURSORON
                LCDCURSOR FLASHON, 8
                Wait 1 sec

                Locate 0,0
                Print "CURSR & FLSH OFF"
                locate 1,0
                LCDCURSOR CursorOFF
                LCDCURSOR FLASHOFF
                Wait 1 sec

                CLS
                Locate 0,4
                PRINT "Flashing"
                Locate 1,4
                Print "Display"
                wait 500 ms

                repeat 10
                    LCDCURSOR LCDOFF
                    wait 500 ms
                    LCDCURSOR LCDON
                    wait 500 ms
                end repeat

                CLS
                Locate 0,0
                Print "DISPLAY OFF"
                Locate 1,0
                Print "FOR 2 SEC"
                Wait 2 SEC
                LCDCURSOR LCDOFF
                WAIT 2 s

                CLS
                Dim Xposition, Yposition as byte
                locate 20, 4
                Print "Put ( row, column, ascii character )"
                for Yposition = 0 to MAX_ROWS -1
                    put Yposition, 0, "*"
                    wait 10 ms
                next
                for Xposition = 0 to MAX_COLUMNS -1
                    put 0, Xposition ,"*"
                    put MAX_ROWS -1, Xposition, "*"
                    wait 10 ms
                next
                for Yposition = 0 to MAX_ROWS -1
                    put Yposition, MAX_COLUMNS -1 , "*"
                    wait 10 ms
                next

                wait 2 s

                CLS
                Locate 0,0
                LCDCURSOR LCDON
                Print "END TEST"
                wait 1 s

            end Repeat


        GLCDTest:
        '#DEFINE GLCD_OLED_FONT
        CLS
        GLCDCLS
        GLCDPrintLargeFont ( 0, 0, "WG24064A-TMI-TZ#")
        GLCDPrintLargeFont ( 0, 20, "GLCD Capability")
        wait 2 s
        glcdprint 50, 40, "240 * 64  pixels mode"

        glcdprint 50, 50, "Full GCB GLCD capable"
        wait 4 s
        CLS
        GLCDCLS


        Dim BYTENUMBER, CCOUNT as Byte

        CCount = 0
        dim longNumber as long
        longNumber = 4294967290 ' max value = 4294967296
        dim wordNumber as Word
        dim outString as string
        wordNumber = 0
        byteNumber = 0


        ' Prepare the static components of the screen
        GLCDPrint ( 2,   0, "PrintStr")                                ; Print some text
        GLCDPrint ( 64,  0, "LAT@")                                    ; Print some more text
        GLCDPrint ( 88,  0, ChipMhz)                                   ; Print chip speed
        GLCDPrint ( 100, 0, "Mhz")                                     ; Print some text
        GLCDDrawString( 2,8,"DrawStr")                                 ; Draw some text
        box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1                            ; Draw a box
        box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1    ; Draw a box
        Circle( 44,41,15)                                              ; Draw a circle
        line 64,31,0,31                                                ; Draw a line

        Repeat 1
           for CCount = 32 to 127
                GLCDPrint ( 64 ,  36,  hex(longNumber_E ) )                ; Print a HEX string
                GLCDPrint ( 76 ,  36,  hex(longNumber_U ) )                ; Print a HEX string
                GLCDPrint ( 88 ,  36,  hex(longNumber_H ) )                ; Print a HEX string
                GLCDPrint ( 100 ,  36, hex(longNumber   ) )                ; Print a HEX string
                GLCDPrint ( 112 ,  36, "h" )                               ; Print a HEX string


                GLCDPrint ( 64 ,  44, pad(str(wordNumber), 5 ) )           ; Print a padded string
                GLCDPrint ( 64 ,  52, pad(str(byteNumber), 3 ) )           ; Print a padded string


                filledbox (46,9,56,19,0)                                   ; Draw a Box
                box (46,9,56,19)
                GLCDDrawChar(49, 10, CCount )                              ; Draw a character
                outString = str( CCount )                                  ; Prepare a string
                GLCDDrawString(64, 9, pad(outString,3) )                   ; Draw a string

                filledbox 3,43,11,51, wordNumber.1                         ; Draw a filled box

                FilledCircle( 44,41,9, longNumber.3)                       ; Draw a filled box
                line 0,63,64,31                                            ; Draw a line

                                                                           ; Do some simple maths
                longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
            NEXT
        End repeat

        CLS
        GLCDCLS
        GLCDPrintLargeFont ( 0, 0, "WG24064A-TMI-TZ#")
        GLCDPrintLargeFont ( 0, 40, "Anobium :-)")

        wait 5 s
        CLS
        GLCDCLS

    loop
    end
