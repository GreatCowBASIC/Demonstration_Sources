'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ILI9340 GLCD capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program scrolls the screen.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author 	EvanV
'''@licence	GPL
'''@version	1.0
'''@date   	03.08.2015
'''********************************************************************************
'''********************************************************************************

; ----- Configuration
  #chip 16f1938,32
  #option explicit

  #include <glcd.h>
  #include <chipino.h>

; ----- Define Hardware settings
  ' Hardware is setup in the GLCD method
    #define GLCD_TYPE GLCD_TYPE_ILI9340

    'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
    #define GLCD_DC 			D8					' Data command line
    #define GLCD_CS 			D10					' Chip select line
    #define GLCD_RESET 		D9					' Reset line

    #define GLCD_DI  			D3 					' Data in | MISO
    #define GLCD_DO  			D2					' Data out | MOSI
    #define GLCD_SCK 			D4					' Clock Line

    #define ILI9340_HardwareSPI    ' remove/comment out if you want to use software SPI.

; ----- Variables
    dim GLCDChar as Byte

; ----- Main body of program commences here.  This is reusable code.


		SetVerticalScrollDefinition (32, 0)

    GLCDfntDefaultsize = 2
    GLCDDrawString(0,8, "GCBASIC 2023", ILI9340_GREEN )

		dim ScrollPosition as word
		ScrollPosition = 32
    dim ypos as Word
    GLCDChar = 1

    do Forever


        if ScrollPosition = 32 Then
            ypos = 304
        Else
            ypos = ScrollPosition - 16
        End if
				ypos--

        GLCDDrawString( 0, ypos, pad( "", 20, Chr(GLCDChar+64) ) )


        if  GLCDChar < 26 then
          GLCDChar++
        else
          GLCDChar = 1
        end if
        ScrollScreen


Loop

; ----- Methods and Subs


sub SetVerticalScrollDefinition( TFA as word, BFA as word )
  'TFA+VSA=BFA must equal 320, see datasheet

  'Vertical Scroll definition.
  SendCommand_ILI9340 ( 0x33 )
  SendWord_ILI9340(TFA)
  SendWord_ILI9340(320-(TFA+BFA))
  SendWord_ILI9340(BFA)

end sub

sub ScrollScreen

  ScrollPosition += 16;
  if (ScrollPosition = 320) then ScrollPosition = 32
  SendVerticalScrollStartAddress(ScrollPosition)
end sub

sub SendVerticalScrollStartAddress( VSP as Word )
	' Vertical Scrolling Start Address definition.
  SendCommand_ILI9340(0x37)
  SendWord_ILI9340(VSP)
end sub

