'''A program  for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates theGCBASIC GCBASIC GLCD commands plus the Nextion specifics to use Nextion fonts.
'''
'''The setup is:
'''     Include the <glcd.h>
'''     Specify the Nextion.  #define GLCD_TYPE GLCD_TYPE_Nextion
'''     Set the device size. #define GLCD_WIDTH xxx and #define GLCD_HEIGHT yyy
'''     Specify the fonts:
'''        #define NextionFont0      0, 8, 16    'Arial 8x16
'''        #define NextionFont1      1, 12, 24   '24point 12x24 charset
'''        #define NextionFont2      2, 16, 32   '32point 16x32 charset
'''     Specify hardware or software serial. If using PPS you must setup the serial port.
'''
'''     Then, enjoy.
'''
'''
'''@author     EvanV
'''@licence    GPL
'''@version    1.00
'''@date       24.04.18
'''********************************************************************************


' ----- Configuration
    'Chip Settings.
    #chip 16f18855
    #option explicit

' ----- Set up the Nextion GLCD
    #include <glcd.h>
    #define GLCD_TYPE GLCD_TYPE_Nextion


    ;VERY IMPORTANT!!
    ;Change the width and height to match the rotation in the Nextion Editor
    #define GLCD_WIDTH  800
    #define GLCD_HEIGHT 480


    ;VERY IMPORTANT!!
    ;Fonts installed in the Nextion MUST match the fonts parameters loading to the GLCD.
    ;Obtain parameters from Nextion Editor/Font dialog.
    #define NextionFont0      0, 8, 16    'Arial 8x16
    #define NextionFont1      1, 12, 24   '24point 12x24 charset
    #define NextionFont2      2, 16, 32   '32point 16x32 charset

' ----- End of set up for Nextion GLCD

' ----- Set up for Hardware Serial
    ;VERY IMPORTANT!!
    ;The Nextion MUST be setup for 9600 bps.
    #define USART_BAUD_RATE 9600
    #define USART_DELAY 0 MS

    ;VERY IMPORTANT!!
    ;These two are optional. These constants are set in the library.
    #define GLCD_NextionSerialPrint HSerPrint
    #define GLCD_NextionSerialSend  HSerSend


' ----- Set up for Software Serial - this is optional - shown to explain the method.
'    ;Remove Hardware Serial before using Software serial
'    ;You MUST also remove PPS setup, for hardware serial, when using Software serial
'    #include <softserial.h>
'
'    ; ----- Config Serial UART for sending:
'    #define SER1_BAUD 9600     ; baudrate must be defined
'    #define SER1_TXPORT PORTC ; I/O port (without .bit) must be defined
'    #define SER1_TXPIN 5       ; portbit  must be defined
'
'    ;VERY IMPORTANT!!
'    ;These two constants are required to support the the library.
'    #define GLCD_NextionSerialPrint        Ser1Print
'    #define GLCD_NextionSerialSend         Ser1Send
'
' ----- End of set up for Serial


    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.11
    'PinManager data: v1.55
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

    Sub InitPPS

            'Module: EUSART
            RXPPS = 0x0016    'RC6 > RX

            'Module: EUSART
            RC0PPS = 0x0010    'TX > RC0
            TXPPS = 0x0010    'RC0 > TX (bi-directional)
            RC5PPS = 0x0010    'TX > RC5
            TXPPS = 0x0015    'RC5 > TX (bi-directional)

    End Sub
    'Template comment at the end of the config file





// ----- Main program

    'show front screen
    wait 1 s


'************************ Graphics Main program ***********************

    #define x_C GLCD_WIDTH/2
    #define y_C GLCD_HEIGHT/2
    #define xx2 GLCD_WIDTH
    #define yy2 GLCD_HEIGHT

    Table Colors as Word
        TFT_BLACK       'BLACK
        TFT_NAVY        'Navy
        TFT_DARKGREEN   'DARKGREEN
        TFT_DARKCYAN    'DARKCYAN
        TFT_MAROON      'MAROON
        TFT_PURPLE      'PURPLE
        TFT_OLIVE       'OLIVE
        TFT_LIGHTGREY   'LIGHTGREY
        TFT_DARKGREY    'DARKGREY
        TFT_BLUE        'BLUE
        TFT_GREEN       'GREEN
        TFT_CYAN        'CYAN
        TFT_RED         'RED
        TFT_MAGENTA     'MAGENTA
        TFT_YELLOW      'YELLOW
        TFT_WHITE       'WHITE
        TFT_ORANGE      'ORANGE
        TFT_GREENYELLOW 'GREENYELLOW
        TFT_PINK        'PINK
    End Table

    Dim port_rev          as byte
    Dim cleared           as byte
    Dim delx,dely,ind     as byte
    Dim nx, ny            as byte
    Dim n_color           as byte
    Dim xx1,yy1           as Word
    Dim color             as word

    GLCDCLS(TFT_BLUE)'black'white 'NAVY

    n_color=19
    delx=10
    dely=10
    nx=(GLCD_WIDTH/delx)+1
    ny=(GLCD_HEIGHT/dely)+1
    xx1=0
    yy1=0
do
            'scan circle
      ScanCircle(x_C,y_C)
            'from center
      scanx(x_C,y_C,xx1,yy1,1)
      scany(x_C,y_C,xx2,yy1,1)
      scanx(x_C,y_C,xx2,yy2,2)
      scany(x_C,y_C,xx1,yy2,2)
            'from angles case 1
      scany(xx1,yy1,xx2,yy1,1)
      scanx(xx1,yy1,xx2,yy2,2)
      scanx(xx1,yy1,xx1,yy2,1)
      scany(xx1,yy1,xx2,yy2,2)
            'case2
      scanx(xx2,yy1,xx2,yy2,2)
      scany(xx2,yy1,xx1,yy2,2)
      scany(xx2,yy1,xx1,yy1,1)
      scanx(xx2,yy1,xx1,yy2,1)
           'case3
      scany(xx2,yy2,xx1,yy2,2)
      scanx(xx2,yy2,xx1,yy1,1)
      scanx(xx2,yy2,xx2,yy1,2)
      scany(xx2,yy2,xx1,yy1,1)
            'case4
      scanx(xx1,yy2,xx1,yy1,1)
      scany(xx1,yy2,xx2,yy1,1)
      scany(xx1,yy2,xx2,yy2,2)
      scanx(xx1,yy2,xx2,yy1,2)

'      ScanEllipse(x_C,y_C)

      wait 1 s

      GLCDCLS(TFT_BLUE)

loop


sub scany(x_1,y_1,x_2,y_2,incr)

    Dim x_1,x_2,y_1,y_2 as Word
    Dim ind, del    as word
    Dim ind1,ind2  as Word
    Dim ycurr       as Word
    if incr=1 then
      del=dely
      ycurr=y_2-del
    else
      del=-dely
      ycurr=y_2-del
    end if
    for ind=1  to ny
      ycurr=ycurr+del
      readtable colors,ind%n_color,color
      line(x_1,y_1,x_2,ycurr,color)
    next

end sub

sub scanx(x_1,y_1,x_2,y_2,incr)

    Dim x_1, x_2, y_1, y_2 as Word
    Dim ind, del   as Word
    Dim ind1,ind2 as Word
    Dim xcurr      as Word
    if incr=1 then
      del=delx
      xcurr=x_2-del
    else
      del=-delx
      xcurr=x_2-del
    end if
    for ind=1  to nx
      xcurr=xcurr+del
      readtable colors,ind%n_color,color
      line(x_1,y_1,xcurr,y_2,color)
    next

end sub

sub ScanCircle(x0,y0)

    Dim x0,y0,delrad, rad, ind as word
    Dim color as Word
    delrad=0
    for ind=1 to 102
      delrad=delrad+1
      readtable colors,ind%n_color,color
      circle(x0,y0,delrad,color)
    next

end sub

sub ScanEllipse(x0,y0)

    Dim x0,y0,radx, rady, ind as word
    Dim color as Word
    radx=0
    for ind=1 to 40
      radx=radx+1
      rady=2*radx
      readtable colors,ind%n_color,color
      Ellipse(x0,y0,radx,rady,color)
    next

end sub
