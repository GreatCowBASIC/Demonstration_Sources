'''
'''  THIS IS A PROOF OF CONCEPT GLCD DRIVER. THERE IS NOT SUPPORT FOR GLCD COMMANDS.
'''
'''
'''  This demonstration shows the I2C devices attached the microcontroller support harware I2C.
'''
'''  I2C device required a data bus and a clock bus 'devices also required an input voltage and 0v.
'''   I2C data bus is connected as shown below.
'''   I2C clock bus is connected as shown below.
'''   Serial output is connected as shown below.
'''
'''  Connect your IC2 devices and see the results on the ST7567S GLCD
'''
'''************************************************************************
'''@author  EvanV
'''@licence GPL
'''@version1.00
'''@date    05.06.2023
' ----- Configuration

'Chip Settings.
#CHIP 18F26Q71, 1
#OPTION Explicit

    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.6.2
    'PinManager data: v1.81.0
    'Generated for 18F26Q71
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS '85
    #define PPSToolPart 18F26Q71

    Sub InitPPS

            'Module: I2C1
            RB6PPS = 0x0020    'SCL1 > RB6
            I2C1SCLPPS = 0x000E    'RB6 > SCL1 (bi-directional)
            RB4PPS = 0x0021    'SDA1 > RB4
            I2C1SDAPPS = 0x000C    'RB4 > SDA1 (bi-directional)

            'Module: UART pin directions
            Dir PORTC.6 Out    ' Make TX1 pin an output
            'Module: UART1
            RC6PPS = 0x0015    'TX01 > RC6

    End Sub
    'Template comment at the end of the config file


'' -------------------PORTA----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:   -----------------SW---ADC---------
''-----------------------------------------
''

'' -------------------PORTB----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----SCL-----SDA------------------
''-----------------------------------------
''

'' ------------------PORTC-----------------
'' Bit#:  -7---6---5---4---3---2---1---0---
'' IO:    ----TX1--------LED--LED-LED LED--
''-----------------------------------------


'Define constants to make things easier. We can reuse these at any time.
#DEFINE LEDPORT LATC


Dir     RC0         Out
Dir     RC1         Out
Dir     RC2         Out
Dir     RC3         Out

#DEFINE POTENTIOMETER PORTA.2
Dir     POTENTIOMETER In
#DEFINE SWITCHIN      PORTA.3
Dir     SWITCHIN      In

'Setup Serial port
#DEFINE USART_BAUD_RATE 9600
#DEFINE USART_TX_BLOCKING
#DEFINE USART_DELAY 0


' Define I2C settings
#DEFINE HI2C_BAUD_RATE 100
#DEFINE HI2C_DATA PORTB.4
#DEFINE HI2C_CLOCK PORTB.6

Dir HI2C_DATA Out
Dir HI2C_CLOCK Out

' Define I2C clock sources for minimal operation
#DEFINE I2C1ClockSource     I2C1CLOCK_FOSC4
#DEFINE HI2CITSCLWaitPeriod 100    'minimum for this type of GLCD

'*****************************************************************************************************
'Main program commences here.. everything before this is setup for the board.

Dim DeviceID As Byte
Dim DISPLAYNEWLINE As Byte


' LCD Commands definition
#DEFINE CMD_DISPLAY_ON          0xAF
#DEFINE CMD_DISPLAY_OFF         0xAE
#DEFINE CMD_SET_START_LINE      0x40
#DEFINE CMD_SET_PAGE            0xB0
#DEFINE CMD_COLUMN_UPPER        0x10
#DEFINE CMD_COLUMN_LOWER        0x00
#DEFINE CMD_SET_ADC_NORMAL      0xA0
#DEFINE CMD_SET_ADC_REVERSE     0xA1
#DEFINE CMD_SET_COL_NORMAL      0xC0
#DEFINE CMD_SET_COL_REVERSE     0xC8
#DEFINE CMD_SET_DISPLAY_NORMAL  0xA6
#DEFINE CMD_SET_DISPLAY_REVERSE 0xA7
#DEFINE CMD_SET_ALLPX_ON        0xA5
#DEFINE CMD_SET_ALLPX_NORMAL    0xA4
#DEFINE CMD_SET_BIAS_9          0xA2
#DEFINE CMD_SET_BIAS_7          0xA3
#DEFINE CMD_DISPLAY_RESET       0xE2
#DEFINE CMD_NOP                 0xE3
#DEFINE CMD_TEST                0xF0   'Exit this mode with CMD_NOP
#DEFINE CMD_SET_POWER           0x28
#DEFINE CMD_SET_RESISTOR_RATIO  0x20
#DEFINE CMD_SET_VOLUME          0x81

' Display parameters
#DEFINE DISPLAY_W               128
#DEFINE DISPLAY_H               64
#DEFINE DISPLAY_CONTRAST        0x1B
#DEFINE DISPLAY_RESISTOR_RATIO  5
#DEFINE DISPLAY_POWER_MODE      7

#DEFINE       cmddisplayON  = 0xaf   //display on.
#DEFINE       cmddisplayOFF = 0xae   //display off.
      
#DEFINE       startLine  = 0x40   //Set display start line.
#DEFINE       restart    = 0xe2   //restart command.
#DEFINE       seg        = 0xa0   //Set scan direction of SEG, SEG = 1-0-1-0-0-0-0-MX; 
                          //MX=1-->reverse direction, MX=0-->normal direction.

#DEFINE       INV_normal = 0xa6   //normal display.
#DEFINE       AP_normal  = 0xa4   //normal display.
      
#DEFINE       BS         = 0xa3   //select bias setting, bias = 1-0-1-0-0-0-1-BS, BS(0)=1/9,  BS(1)=1/7(at 1/65 duty).
#DEFINE       com        = 0xc8   //Set output direction of COM, COM = 1-1-0-0-MY-X-X-X;
                          //MY=1-->reverse direction, MY=0-->normal direction.
                          
#DEFINE       powerCon1  = 0x2c   //Controls the built-in power circuits;
#DEFINE       powerCon2  = 0x2e   //Define instructions on page 43 of the ST7567A data sheet.
#DEFINE       powerCon3  = 0x2f   //

      /********Adjust display brightness********/
#DEFINE       regRatio   = 0x22   //Controls the regulation ratio of the built-in regulator;
                          //Define instructions on page 43 of the ST7567A data sheet.
#DEFINE       EV1        = 0x81   //Define instructions on page 44 of the ST7567A data sheet.
#DEFINE       EV2        = 0x30   //  

      /**********entension command set**********/
#DEFINE       exit_EC    = 0xfe   //exit extension command set.
#DEFINE       enter_EC   = 0xff   //enter extension command set.

#DEFINE       DSM_ON     = 0x72   //display setting mode on.
#DEFINE       DSM_OFF    = 0x70   //display setting mode off.
#DEFINE       DT         = 0xd6   //set the display duty, DT=33.
#DEFINE       BA         = 0x90   //BA=1/9, selects LCD bias ratio for the internal voltage follower to drive the LCD. 
                          //This command has priority over the Bias Select (BS).
#DEFINE       FR         = 0x9d   //specifies the frame rate for duty.

#DEFINE       RMW        = 0xe0   //Read-modify-Write command on page 42 of ST7567A datasheet.


 Sub WriteByte_Command ( in _i2cdata )
    HI2CStart
    HI2CSend 0x7E
    HI2CSend 0x80
    HI2CSend _i2cdata
    HI2CStop
 End Sub

Sub WriteByte_Data ( in _i2cdata )
    HI2CStart
    HI2CSend 0x7E
    HI2CSend 0x40
    HI2CSend _i2cdata
    HI2CStop
End Sub

  HI2CStart
  Wait 10 ms
    HI2CSend 0x7E
    HI2CSend 0x80
    HI2CSend restart
    HI2CStop

//   WriteByte_command(restart);     //resets Start Line (S[5:0]), Column Address (X[7:0]), 
  wait 10 ms                      //Page Address (Y[3:0]) and COM Direction (MY) to their default setting.

  WriteByte_command(BS);          //select bias
  WriteByte_command(seg);         //seg output scan direction setting
  WriteByte_command(com);         //com output scan direction setting
  
  /********Adjust display brightness********/
  WriteByte_command(regRatio);    //Controls the regulation ratio of the built-in regulator.
  WriteByte_command(EV1);
  WriteByte_command(EV2);

  WriteByte_command(powerCon1);   //Controls the built-in power circuits.
  WriteByte_command(powerCon2);
  WriteByte_command(powerCon3);
  
    Dim xx, ii
    for xx=0 to 3 
        WriteByte_command(0xb0 + xx);   //y, page address y=1-0-1-1-y3-y2-y1-y0, 1-page with 8-rows
        
        /*******automatically increased by one******/
        WriteByte_command(0x10);       //x, column address x=0-0-0-0-1-x7-x6-x5-x4
        WriteByte_command(0x00);       //x, column address x=0-0-0-0-0-x3-x2-x1-x0
        
        for ii=0 to 127 
        WriteByte_Data(0xff);         //row=bit0--bit7
        next

    next


    /**********display setting mode**********/
  WriteByte_command(enter_EC);    //enter extension command set.
  WriteByte_command(DSM_ON);      //display settin mode on.
  WriteByte_command(exit_EC);     //exit extension command set.
  WriteByte_command(DT);          //set the display duty, DT=33.
  WriteByte_command(BA);          //This command has priority over the Bias Select (BS).
  WriteByte_command(FR);          //specifies the frame rate for duty. duty=250.
  //*/

  WriteByte_command(cmddisplayON);   //display on.
  WriteByte_command(startLine);   //Set display start line.
    

END


' ----- Support methods.  Subroutines and Functions
