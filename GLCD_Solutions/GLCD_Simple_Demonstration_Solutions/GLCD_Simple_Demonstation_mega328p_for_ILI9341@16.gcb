'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ILI9341 GLCD capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
''':
'''This has been tested using the hardware SPI option.
''':
'''Note: for the correct operation of this display you MUST connect via a CD4050, see http://forum.arduino.cc/index.php?topic=181679.90
''':
'''@author
'''@licence GPL
'''@version 1.1
'''@date
'''********************************************************************************

  'Chip Settings.
  #chip mega328p, 16
  #option explicit

    #include <glcd.h>
    #include <uno_mega328p.h >

    #define GLCD_TYPE GLCD_TYPE_ILI9341

    'Pin mappings for SPI - this GLCD driver supports Hardware SPI and Software SPI
    #define GLCD_DC       DIGITAL_8         ' Data command line
    #define GLCD_CS       DIGITAL_10          ' Chip select line
    #define GLCD_RESET          DIGITAL_9         ' Reset line

    #define GLCD_DI       DIGITAL_12          ' Data in | MISO    - Not used therefore not really required
    #define GLCD_DO       DIGITAL_11          ' Data out | MOSI
    #define GLCD_SCK      DIGITAL_13          ' Clock Line

    #define ILI9341_HardwareSPI    ' remove/comment out if you want to use software SPI.


    'GLCD selected extension font set. ASCII characters 31-254, the extended font uses 1358 bytes of program memory
    #define GLCD_EXTENDEDFONTSET1
    GLCDfntDefaultsize = 1

    'GLCDCLS  supports GLCDBackground as default
    'GLCDCLS  also support passing color parameter.
    'GLCDCLS [color]
    GLCDRotate ( Landscape_rev )     ' optionally you can rotate the screen.


    'Available colors
    'ILI9341_BLACK
    'ILI9341_RED
    'ILI9341_GREEN
    'ILI9341_BLUE
    'ILI9341_WHITE
    'ILI9341_PURPLE
    'ILI9341_YELLOW
    'ILI9341_CYAN
    'ILI9341_D_GRAY
    'ILI9341_L_GRAY
    'ILI9341_SILVER
    'ILI9341_MAROON
    'ILI9341_OLIVE
    'ILI9341_LIME
    'ILI9341_AQUA
    'ILI9341_TEAL
    'ILI9341_NAVY
    'ILI9341_FUCHSIA

    Dim CCOUNT, BYTENUMBER, OLDFONT, OLDFONT as Byte

    CCount = 31
    dim longNumber as long
    longNumber = 0 ' max value = 4294967290
    dim wordNumber as Word
    wordNumber = 0
    byteNumber = 0


    repeat 2

            GLCDRotate ( Landscape_rev )
            GLCDCLS ILI9341_BLUE

            GLCDForeground = ILI9341_MAROON
            GLCDfntDefaultsize = 1
            GLCDPrint ( 2, 2, "GLCDPrint String" )


            GLCDForeground = ILI9341_WHITE
            GLCDfntDefaultsize = 2
            GLCDPrint ( 2, 12, "GLCDPrint String" )


            GLCDForeground = ILI9341_YELLOW
            GLCDfntDefaultsize = 3
            GLCDPrint ( 2,30, "GLCDPrint String" )

            longNumber = 0xFFFFFFFF
            wordNumber = 0xFFFF
            byteNumber = 0xFF

            GLCDRotate ( Portrait )
            GLCDCLS ILI9341_WHITE

            GLCDForeground = ILI9341_MAROON
            GLCDfntDefaultsize = 1
            GLCDPrint ( 2, 2, bytenumber )


            GLCDForeground = ILI9341_BLACK
            GLCDfntDefaultsize = 2
            GLCDPrint ( 2, 12, wordNumber )


            GLCDForeground = ILI9341_CYAN
            GLCDfntDefaultsize = 3
            GLCDPrint ( 2,30, longnumber )

            wait 2 s

    end Repeat



  GLCDCLS ILI9341_BLUE
  'Set font size.
  GLCDfntDefaultsize = 2
  longNumber = 0 ' max value = 4294967290
  wordNumber = 0
  byteNumber = 0

    'Using the global variable GLCDfntDefaultsize to show the different capabilities
    Select Case GLCDfntDefaultsize

    Case 1

      ShowCase1

    Case 2

      ShowCase2

    Case 3

      GLCDDrawString (2, 1, "GLCD font")
      GLCDDrawString (2, 25, "size = 3")
      box 0,0,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_BLUE
      box ILI9341_GLCD_WIDTH-5, ILI9341_GLCD_HEIGHT-5,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_WHITE

  End Select

end


sub ShowCase1

        GLCDRotate ( Portrait )

        GLCDDrawString (2, 1, "GCB", ILI9341_WHITE )
        GLCDDrawString (56,1,"v.9804", ILI9341_YELLOW )
        GLCDDrawString (2, 16, "DrawStr", ILI9341_WHITE )

        GLCDDrawString ( 60, 31, "Long Number" )
        GLCDDrawString ( 60, 39, "Word Number" )
        GLCDDrawString ( 60, 47, "Byte Number" )

        GLCDDrawString ( 74, 16, "Asc:" )

        box 0,0,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_YELLOW
        box ILI9341_GLCD_WIDTH-5, ILI9341_GLCD_HEIGHT-5,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_WHITE

        Circle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 50, ILI9341_SILVER )            ;center
        FilledCircle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 25, ILI9341_D_GRAY  )

        line 0,  ILI9341_GLCD_HEIGHT-1 , ILI9341_GLCD_WIDTH/2 +100,  (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN
        line  0, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_GLCD_WIDTH/2 +100, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN

        filledbox 2,ILI9341_GLCD_HEIGHT/2+10,42,ILI9341_GLCD_HEIGHT/2+50, ILI9341_RED

        oldfont = GLCDfntDefaultsize
        GLCDfntDefaultsize = 3
        GLCDDrawString ( 42, ILI9341_GLCD_HEIGHT - 30 , "ILI9341 Driver" , ILI9341_WHITE )

        GLCDfntDefaultsize = 1
        GLCDDrawString ( ILI9341_GLCD_WIDTH - 60, 2 , "Dec 2019" , ILI9341_WHITE )
        #ifdef ILI9341_HardwareSPI
            GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "HW SPI" , ILI9341_WHITE )
        #endif

        #ifndef ILI9341_HardwareSPI
            GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "SW SPI" , ILI9341_WHITE )
        #endif

        'Revert the font size
        GLCDfntDefaultsize = oldfont
        GLCDForeground = ILI9341_WHITE

        DO forever

            GLCDPrint ( 144 , 31, longNumber)
            GLCDPrint ( 144 , 39, pad( str(wordnumber),5))
            GLCDPrint ( 144 , 47, pad( str(bytenumber),3))

            GLCDDrawChar(54, 16, CCount )
            Box 52,15,62,26, ILI9341_WHITE                'Draw a box around the Char below

            GLCDDrawString ( 100, 16 , pad( str(CCount),3) )

            CCount++
            if CCount = 0 then CCount = 31
            if CCount = 128 then CCount = 192
            longNumber = longNumber + 7

            wordNumber = wordNumber + 3
            byteNumber++

        LOOP

end sub

sub ShowCase2

        GLCDRotate ( Landscape_rev )

        GLCDDrawString (2, 1, "GCB",ILI9341_WHITE)
        GLCDDrawString (56,1,"v1.xx",ILI9341_YELLOW)
        GLCDDrawString (2, 18, "DrawStr",ILI9341_WHITE)

        GLCDDrawString ( 2, 52, "Long:" )
        GLCDDrawString ( 2, 70, "Word:" )
        GLCDDrawString ( 2, 88, "Byte:" )

        GLCDDrawString ( 128, 18, "Asc:"+"  " )

        box 0,0,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_YELLOW
        box ILI9341_GLCD_WIDTH-5, ILI9341_GLCD_HEIGHT-5,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_WHITE

        Circle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 50, ILI9341_SILVER )            ;center
        FilledCircle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 25, ILI9341_D_GRAY  )

        line 0,  ILI9341_GLCD_HEIGHT-1 , ILI9341_GLCD_WIDTH/2 +100,  (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN
        line  0, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_GLCD_WIDTH/2 +100, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN

        filledbox 2,ILI9341_GLCD_HEIGHT/2+10,42,ILI9341_GLCD_HEIGHT/2+50, ILI9341_RED

        oldfont = GLCDfntDefaultsize
        GLCDfntDefaultsize = 3
        GLCDDrawString ( 50, ILI9341_GLCD_HEIGHT - 30 , "ILI9341 Driver" , ILI9341_WHITE )

        GLCDfntDefaultsize = 1
        GLCDDrawString ( ILI9341_GLCD_WIDTH - 58, 2 , "Dec 2019" , ILI9341_WHITE )

        #ifdef ILI9341_HardwareSPI
            GLCDDrawString ( ILI9341_GLCD_WIDTH - 44, 10 , "HW SPI" , ILI9341_WHITE )
        #endif

        #ifndef ILI9341_HardwareSPI
            GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "SW SPI" , ILI9341_WHITE )
        #endif

        'Revert the font size
        GLCDfntDefaultsize = oldfont
        GLCDForeground = ILI9341_WHITE
        BigPrint_ILI9341 ( 100 , ILI9341_GLCD_HEIGHT - 60 , "Great Cow BASIC" )

        DO forever

          GLCDPrint ( 64 , 52, longNumber)
          GLCDPrint ( 64 , 70, pad( str(wordnumber),5))
          GLCDPrint ( 64 , 88, pad( str(bytenumber),3))

          GLCDDrawChar(99, 18, CCount )
          Box 98,18,117,42, ILI9341_WHITE               'Draw a box around the Char below

          GLCDDrawString ( 180, 18 , pad( str(CCount),3) )

          CCount++
          if CCount = 0 then CCount = 31
          if CCount = 128 then CCount = 192
          longNumber = longNumber + 7
          wordNumber = wordNumber + 3
          byteNumber++

        LOOP
end sub
