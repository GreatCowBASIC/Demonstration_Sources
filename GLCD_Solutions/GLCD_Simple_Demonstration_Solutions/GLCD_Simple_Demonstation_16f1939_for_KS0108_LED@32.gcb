'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the KS0108 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV with works of ChuckH
'''@licence GPL
'''@version 1.2c
'''@date    22.12.14
'''********************************************************************************

  #chip 16f1939,32
  #option explicit

  #include <glcd.h>
  #define GLCD_TYPE GLCD_TYPE_KS0108               ' This is the Default value, not required.
' #define GLCDDirection 1                          ' Invert display, not always required

  #define GLCD_CS1 PORTC.1    'D12 to actually since CS1, CS2 can be reversed on some devices
  #define GLCD_CS2 PORTC.0
  #define GLCD_DB0 PORTD.0 'D0 to pin 7 on LCD
  #define GLCD_DB1 PORTD.1 'D1 to pin 8 on LCD
  #define GLCD_DB2 PORTD.2 'D2 to pin 9 on LCD
  #define GLCD_DB3 PORTD.3 'D3 to pin 10 on LCD
  #define GLCD_DB4 PORTD.4 'D4 to pin 11 on LCD
  #define GLCD_DB5 PORTD.5 'D5 to pin 12 on LCD
  #define GLCD_DB6 PORTD.6 'D6 to pin 13 on LCD
  #define GLCD_DB7 PORTD.7 'D7 to pin 14 on LCD

  #define GLCD_RS PORTe.0
  #define GLCD_Enable PORTe.2
  #define GLCD_RW PORTe.1
  #define GLCD_RESET PORTC.2

  ' Changed timing for 32 mhz device
  #define KS0108ReadDelay    2   ; = 2 normal usage, 6 or above is OK at 32 mhz!
  #define KS0108WriteDelay   1    ; = 1 normal usage you may get away with 0, 2 or above is OK at 32 mhz!
  #define KS0108ClockDelay   1     ; = 1 normal usage you may get away with 0, 2 or above is OK at 32 mhz!
  'change to LED height, this, avoids set the 4 LED signals
  #define LED_GLCD_HEIGHT GLCD_HEIGHT-1


      Dim BYTENUMBER, CCOUNT as Byte

      CCount = 0
      dim longNumber as long
      longNumber = 4294967290 ' max value = 4294967296
      dim wordNumber as Word
      dim outString as string
      wordNumber = 0
      byteNumber = 0

      GLCDPrint ( 0,   0, "Great Cow BASIC 2019")                                ; Print some text
      GLCDPrint ( 0,   16, "@Evan R. Venn")                                ; Print some text
      wait 3 s
      GLCDCLS

      ' Prepare the static components of the screen
      GLCDPrint ( 0,   0, "PrintStr")                                ; Print some text
      GLCDPrint ( 64,  0, "LAT@")                                    ; Print some more text
      GLCDPrint ( 88,  0, ChipMhz)                                   ; Print chip speed
      GLCDPrint ( 100, 0, "Mhz")                                     ; Print some text
      GLCDDrawString( 0,8,"DrawStr")                                 ; Draw some text
      box 0,0,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1                        ; Draw a box
      box GLCD_WIDTH-5, LED_GLCD_HEIGHT-5,GLCD_WIDTH-1, LED_GLCD_HEIGHT-1    ; Draw a box
      Circle( 44,41,15)                                              ; Draw a circle
      line LED_GLCD_HEIGHT,31,0,31                                                ; Draw a line

      DO forever
         for CCount = 32 to 127
              GLCDPrint ( LED_GLCD_HEIGHT ,  36,  hex(longNumber_E ) )                 ; Print a HEX string
              GLCDPrint ( 76 ,  36,  hex(longNumber_U ) )                 ; Print a HEX string
              GLCDPrint ( 88 ,  36,  hex(longNumber_H ) )                 ; Print a HEX string
              GLCDPrint ( 100 ,  36, hex(longNumber   ) )                 ; Print a HEX string
              GLCDPrint ( 112 ,  36, "h" )                                ; Print a HEX string


              GLCDPrint ( LED_GLCD_HEIGHT ,  44, pad(str(wordNumber), 5 ) )           ; Print a padded string
              GLCDPrint ( LED_GLCD_HEIGHT ,  52, pad(str(byteNumber), 3 ) )           ; Print a padded string


              box (46,9,56,19)                                           ; Draw a Box
              GLCDDrawChar(48, 9, CCount )                               ; Draw a character
              outString = str( CCount )                                  ; Prepare a string
              GLCDDrawString(LED_GLCD_HEIGHT, 9, pad(outString,3) )                   ; Draw a string

              filledbox 3,43,11,51, wordNumber                           ; Draw a filled box

              FilledCircle( 44,41,9, longNumber xor 1)                   ; Draw a filled box
              line 0,63,LED_GLCD_HEIGHT,31                                            ; Draw a line

                                                                         ; Do some simple maths
              longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
          NEXT
      LOOP

  end

