'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the KS0108 GLCD capabilities.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''@author  EvanV
'''@licence GPL
'''@version 1.3A
'''@date    31.01.15
'''********************************************************************************

; ----- Configuration

 #chip 16F886,16
 #option explicit
 #include <glcd.h>

; ----- Define Hardware settings
  ' Hardware is setup in the GLCD methods, therefore none are requied here.

; ----- Constants
  #define GLCD_TYPE GLCD_TYPE_KS0108               ' This is the Default value, not required.
  ' the comments shows the Chipino connections
  #define GLCD_RW PORTB.1  'D9 to pin 5 of LCD
  #define GLCD_RESET PORTB.5 'D13 to pin 17 of LCD
  #define GLCD_CS1 PORTB.3 'D12 to CS1
  #define GLCD_CS2 PORTB.4 'D11 to CS2
  #define GLCD_RS PORTB.0  'D8 to pin 4 D/I pin on LCD
  #define GLCD_ENABLE PORTB.2 'D10 to Pin 6 on LCD
  #define GLCD_DB0 PORTC.7 'D0 to pin 7 on LCD
  #define GLCD_DB1 PORTC.6 'D1 to pin 8 on LCD
  #define GLCD_DB2 PORTC.5 'D2 to pin 9 on LCD
  #define GLCD_DB3 PORTC.4 'D3 to pin 10 on LCD
  #define GLCD_DB4 PORTC.3 'D4 to pin 11 on LCD
  #define GLCD_DB5 PORTC.2 'D5 to pin 12 on LCD
  #define GLCD_DB6 PORTC.1 'D6 to pin 13 on LCD
  #define GLCD_DB7 PORTC.0 'D7 to pin 14 on LCD

  #define KS0108ReadDelay    4    ; = 2 normal usage, 6 or above is OK at 32 mhz!
  #define KS0108WriteDelay   0    ; = 1 normal usage you may get away with 0, 2 or above is OK at 32 mhz!
  #define KS0108ClockDelay   0     ; = 1 normal usage you may get away with 0, 2 or above is OK at 32 mhz!

; ----- Variables
  Dim BYTENUMBER, CCOUNT as Byte

  CCount = 0
  dim longNumber as long
  longNumber = 4294967290 ' max value = 4294967296
  dim wordNumber as Word
  dim outString as string
  wordNumber = 0
  byteNumber = 0




; ----- Main body of program commences here.

  ' Prepare the static components of the screen
  GLCDPrint ( 0,   0, "PrintStr")                                ; Print some text
  GLCDPrint ( 64,  0, "@")                                    ; Print some more text
  GLCDPrint ( 69,  0, str(ChipMhz) + "Mhz")                                   ; Print chip speed
 ' GLCDPrint ( 84, 0, "Mhz")                                     ; Print some text
  GLCDDrawString( 0,8,"DrawStr")                                 ; Draw some text
  box 0,0,GLCD_WIDTH-1, GLCD_HEIGHT-1                            ; Draw a box
  box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1    ; Draw a box
  Circle( 44,41,15)                                              ; Draw a circle
  line 64,31,0,31                                                ; Draw a line

  DO forever
     for CCount = 32 to 127
          GLCDPrint ( 64 ,  36,  hex(longNumber_E ) )                 ; Print a HEX string
          GLCDPrint ( 76 ,  36,  hex(longNumber_U ) )                 ; Print a HEX string
          GLCDPrint ( 88 ,  36,  hex(longNumber_H ) )                 ; Print a HEX string
          GLCDPrint ( 100 ,  36, hex(longNumber   ) )                 ; Print a HEX string
          GLCDPrint ( 112 ,  36, "h" )                                ; Print a HEX string


          GLCDPrint ( 64 ,  44, pad(str(wordNumber), 5 ) )           ; Print a padded string
          GLCDPrint ( 64 ,  52, pad(str(byteNumber), 3 ) )           ; Print a padded string


          box (46,9,56,19)                                           ; Draw a Box
          GLCDDrawChar(48, 9, CCount )                               ; Draw a character
          outString = str( CCount )                                  ; Prepare a string
          GLCDDrawString(64, 9, pad(outString,3) )                   ; Draw a string

          filledbox 3,43,11,51, wordNumber                           ; Draw a filled box

          FilledCircle( 44,41,9, longNumber xor 1)                   ; Draw a filled box
          line 0,63,64,31                                            ; Draw a line

                                                                     ; Do some simple maths
          longNumber = longNumber + 7 : wordNumber = wordNumber + 3 : byteNumber++
      NEXT
  LOOP

  end

