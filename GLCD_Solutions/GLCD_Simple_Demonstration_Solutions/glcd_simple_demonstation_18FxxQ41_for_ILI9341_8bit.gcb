'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program is a simple GLCD demonstration of the ILI9341 GLCD capabilities.
'''It is a nice graphical LCD, suitable for a lot of various projects.
'''This program draws lines, boxes, circles and prints strings and numbers.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
''':
'''This has been tested using the 8Bit PORT option.
''':
''':
'''@author EvanV
'''@licence GPL
'''@version 1.1
'''@date 27/03/2025
'''********************************************************************************

#chip 18F16Q41
#option explicit

#include <glcd.h>
#define GLCD_TYPE GLCD_TYPE_ILI9341

// Control lines for the GLCD
#define GLCD_RD    PORTB.4 //Read
#define GLCD_WR    PORTB.5 //Write
#define GLCD_RS    PORTB.6 //Command_/Data
#define GLCD_CS    PORTB.7 //ChipSelect
#define GLCD_RESET PORTA.2 //Reset

// Activates the 8-bit parallel mode for PIC and defines the port used in the glcd_ili9341.h library
#define GLCD_DATA_PORT PORTC  


// Main program

    Dim CCOUNT, BYTENUMBER, OLDFONT, OLDFONT as Byte

    CCount = 31
    dim longNumber as long
    longNumber = 0 ' max value = 4294967290
    dim wordNumber as Word
    wordNumber = 0
    byteNumber = 0


    repeat 2

            GLCDRotate ( Landscape_rev )
            GLCDCLS ILI9341_BLUE

            GLCDForeground = ILI9341_MAROON
            GLCDfntDefaultsize = 1
            GLCDPrint ( 2, 2, "GLCDPrint String" )


            GLCDForeground = ILI9341_WHITE
            GLCDfntDefaultsize = 2
            GLCDPrint ( 2, 12, "GLCDPrint String" )


            GLCDForeground = ILI9341_YELLOW
            GLCDfntDefaultsize = 3
            GLCDPrint ( 2,30, "GLCDPrint String" )

            longNumber = 0xFFFFFFFF
            wordNumber = 0xFFFF
            byteNumber = 0xFF

            GLCDRotate ( Portrait )
            GLCDCLS ILI9341_WHITE

            GLCDForeground = ILI9341_MAROON
            GLCDfntDefaultsize = 1
            GLCDPrint ( 2, 2, bytenumber )


            GLCDForeground = ILI9341_BLACK
            GLCDfntDefaultsize = 2
            GLCDPrint ( 2, 12, wordNumber )


            GLCDForeground = ILI9341_CYAN
            GLCDfntDefaultsize = 3
            GLCDPrint ( 2,30, longnumber )

            wait 2 s

    end Repeat



  GLCDCLS ILI9341_BLUE
  'Set font size.
  GLCDfntDefaultsize = 2
  longNumber = 0 ' max value = 4294967290
  wordNumber = 0
  byteNumber = 0

    'Using the global variable GLCDfntDefaultsize to show the different capabilities
    Select Case GLCDfntDefaultsize

    Case 1

      ShowCase1

    Case 2

      ShowCase2

    Case 3

      GLCDDrawString (2, 1, "GLCD font")
      GLCDDrawString (2, 25, "size = 3")
      box 0,0,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_BLUE
      box ILI9341_GLCD_WIDTH-5, ILI9341_GLCD_HEIGHT-5,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_WHITE

  End Select

end


sub ShowCase1

        GLCDRotate ( Portrait )

        GLCDDrawString (2, 1, "GCB", ILI9341_WHITE )
        GLCDDrawString (56,1,"v.9804", ILI9341_YELLOW )
        GLCDDrawString (2, 16, "DrawStr", ILI9341_WHITE )

        GLCDDrawString ( 60, 31, "Long Number" )
        GLCDDrawString ( 60, 39, "Word Number" )
        GLCDDrawString ( 60, 47, "Byte Number" )

        GLCDDrawString ( 74, 16, "Asc:" )

        box 0,0,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_YELLOW
        box ILI9341_GLCD_WIDTH-5, ILI9341_GLCD_HEIGHT-5,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_WHITE

        Circle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 50, ILI9341_SILVER )            ;center
        FilledCircle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 25, ILI9341_D_GRAY  )

        line 0,  ILI9341_GLCD_HEIGHT-1 , ILI9341_GLCD_WIDTH/2 +100,  (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN
        line  0, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_GLCD_WIDTH/2 +100, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN

        filledbox 2,ILI9341_GLCD_HEIGHT/2+10,42,ILI9341_GLCD_HEIGHT/2+50, ILI9341_RED

        oldfont = GLCDfntDefaultsize
        GLCDfntDefaultsize = 3
        GLCDDrawString ( 42, ILI9341_GLCD_HEIGHT - 30 , "ILI9341 Driver" , ILI9341_WHITE )

        GLCDfntDefaultsize = 1
        GLCDDrawString ( ILI9341_GLCD_WIDTH - 60, 2 , "Mar 2025" , ILI9341_WHITE )
        #ifdef ILI9341_HardwareSPI
            GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "HW SPI" , ILI9341_WHITE )
        #endif

        #ifndef ILI9341_HardwareSPI
            GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "SW SPI" , ILI9341_WHITE )
        #endif

        'Revert the font size
        GLCDfntDefaultsize = oldfont
        GLCDForeground = ILI9341_WHITE

        DO forever

            GLCDPrint ( 144 , 31, longNumber)
            GLCDPrint ( 144 , 39, pad( str(wordnumber),5))
            GLCDPrint ( 144 , 47, pad( str(bytenumber),3))

            GLCDDrawChar(54, 16, CCount )
            Box 52,15,62,26, ILI9341_WHITE                'Draw a box around the Char below

            GLCDDrawString ( 100, 16 , pad( str(CCount),3) )

            CCount++
            if CCount = 0 then CCount = 31
            if CCount = 128 then CCount = 192
            longNumber = longNumber + 7

            wordNumber = wordNumber + 3
            byteNumber++

        LOOP

end sub

sub ShowCase2

        GLCDRotate ( Landscape_rev )

        GLCDDrawString (2, 1, "GCB",ILI9341_WHITE)
        GLCDDrawString (56,1,"v1.xx",ILI9341_YELLOW)
        GLCDDrawString (2, 18, "DrawStr",ILI9341_WHITE)

        GLCDDrawString ( 2, 52, "Long:" )
        GLCDDrawString ( 2, 70, "Word:" )
        GLCDDrawString ( 2, 88, "Byte:" )

        GLCDDrawString ( 128, 18, "Asc:"+"  " )

        box 0,0,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_YELLOW
        box ILI9341_GLCD_WIDTH-5, ILI9341_GLCD_HEIGHT-5,ILI9341_GLCD_WIDTH-1, ILI9341_GLCD_HEIGHT-1, ILI9341_WHITE

        Circle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 50, ILI9341_SILVER )            ;center
        FilledCircle( ILI9341_GLCD_WIDTH/2, ILI9341_GLCD_HEIGHT/2, 25, ILI9341_D_GRAY  )

        line 0,  ILI9341_GLCD_HEIGHT-1 , ILI9341_GLCD_WIDTH/2 +100,  (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN
        line  0, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_GLCD_WIDTH/2 +100, (ILI9341_GLCD_HEIGHT /2) - 50, ILI9341_CYAN

        filledbox 2,ILI9341_GLCD_HEIGHT/2+10,42,ILI9341_GLCD_HEIGHT/2+50, ILI9341_RED

        oldfont = GLCDfntDefaultsize
        GLCDfntDefaultsize = 3
        GLCDDrawString ( 50, ILI9341_GLCD_HEIGHT - 30 , "ILI9341 Driver" , ILI9341_WHITE )

        GLCDfntDefaultsize = 1
        GLCDDrawString ( ILI9341_GLCD_WIDTH - 58, 2 , "Mar 2025" , ILI9341_WHITE )

        #ifdef ILI9341_HardwareSPI
            GLCDDrawString ( ILI9341_GLCD_WIDTH - 44, 10 , "HW SPI" , ILI9341_WHITE )
        #endif

        #ifndef ILI9341_HardwareSPI
            GLCDDrawString ( ILI9341_GLCD_WIDTH - 42, 10 , "SW SPI" , ILI9341_WHITE )
        #endif

        'Revert the font size
        GLCDfntDefaultsize = oldfont
        GLCDForeground = ILI9341_WHITE
        BigPrint_ILI9341 ( 100 , ILI9341_GLCD_HEIGHT - 60 , "GCBASIC" )

        DO forever

          GLCDPrint ( 64 , 52, longNumber)
          GLCDPrint ( 64 , 70, pad( str(wordnumber),5))
          GLCDPrint ( 64 , 88, pad( str(bytenumber),3))

          GLCDDrawChar(99, 18, CCount )
          Box 98,18,117,42, ILI9341_WHITE               'Draw a box around the Char below

          GLCDDrawString ( 180, 18 , pad( str(CCount),3) )

          CCount++
          if CCount = 0 then CCount = 31
          if CCount = 128 then CCount = 192
          longNumber = longNumber + 7
          wordNumber = wordNumber + 3
          byteNumber++

        LOOP
end sub
