'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program displays a BMP file on a GLCD.
'''This uses the BMPtoGCB converter to create the required GCB table.  Any mono BMP can be converted.
'''A GCB table has been imported to this program.  The table was created using BMP2GCB.EXE then imported.
'''The main code is generic.  This uses a table called 'TableData'.  The 'TableData' table contains the required information to describe the original BMP.
'''To support thr generic approach the instruction '#define TableData GCB' redirects TableData to a table called GCB.  If you import a new BMP table simply change the define to the new table definition.
'''The GLCD hardware configuation is shown in the hardware section of this program.
'''
'''
'''@author          EvanV plus works of HughC        	
'''@licence	GPL
'''@version	1.0a
'''@date   	31.01.2015
'''********************************************************************************

; ----- Configuration

 #chip 16F886,16
 #option explicit
 #include <glcd.h>

; ----- Define Hardware settings
  ' Hardware is setup in the GLCD methods, therefore none are required here.

; ----- Constants
  ' the comments shows the Chipino connections
  #define GLCD_RW PORTB.1  'D9 to pin 5 of LCD
  #define GLCD_RESET PORTB.5 'D13 to pin 17 of LCD
  #define GLCD_CS1 PORTB.3 'D12 to CS1
  #define GLCD_CS2 PORTB.4 'D11 to CS2
  #define GLCD_RS PORTB.0  'D8 to pin 4 D/I pin on LCD
  #define GLCD_ENABLE PORTB.2 'D10 to Pin 6 on LCD
  #define GLCD_DB0 PORTC.7 'D0 to pin 7 on LCD
  #define GLCD_DB1 PORTC.6 'D1 to pin 8 on LCD
  #define GLCD_DB2 PORTC.5 'D2 to pin 9 on LCD
  #define GLCD_DB3 PORTC.4 'D3 to pin 10 on LCD
  #define GLCD_DB4 PORTC.3 'D4 to pin 11 on LCD
  #define GLCD_DB5 PORTC.2 'D5 to pin 12 on LCD
  #define GLCD_DB6 PORTC.1 'D6 to pin 13 on LCD
  #define GLCD_DB7 PORTC.0 'D7 to pin 14 on LCD

  ' Table Name. This is required.
  #define TableData GCB

; ----- Variables
  ' These must be WORDs as this a large table.    These are required!!
  dim TableReadPosition as word
  dim TableLen as word
  Dim OBJWIDTH, OBJHEIGHT, GLCDXPOS, GLCDYPOS, OLDGLCDXPOS, WHOLEYBYTES, HCOUNT, GLCDY, WIDTHCOUNT, WBYTE, OPTMISEGLCDDRAW, ONPAGEBOUNDARY, GLCDX, CURRPAGE, MAXHEIGHT, CURRCHARROW as Byte


; ----- Main body of program commences here.  This is reusable code.


        ' These must be WORDs as this a large table.
        dim TableReadPosition, TableLen as word

        ' either 0 or 1.  Needs to match the background pixel state.
        OptmiseGLCDDraw  = 0

        ' Start of code
        TableReadPosition = 1
        ReadTable TableData, TableReadPosition, objwidth: TableReadPosition++
        ReadTable TableData, TableReadPosition, objHeight: TableReadPosition++

        ' sart draw at the upper left corner is set with GLCDXPos, GLCDYPos
        GLCDXPos = 0
        GLCDYPos = 0

        oldGLCDXPos = GLCDXPos
        TableReadPosition = 3

        ' Number of whole bytes within Y Axis.  This is integer maths!
        WholeYBytes = objHeight /  8

        ' If GLCDYPos as a memory page boundary.  Used to fast write the byte
        onPageBoundary = ( GLCDYPos % 8 ) = 0

          if WholeYBytes <> 0 then

              ' counter to number of whole bytes
              for hCount = 0 to (WholeYBytes - 1)

                  ' it is safe to use GLCDY and X here as PSET is not called when this is used as a variable
                    GLCDY = GLCDYPos+hCount
                    ' increment thru bytes horizontally
                    for widthCount = 0 to (objwidth - 1)
                        ' get the next byte
                        ReadTable TableData, TableReadPosition, wByte: TableReadPosition++
                        ' if the incoming byte is the same as the background, dont draw
                        if wByte <> OptmiseGLCDDraw then
                           ' So,  we have to draw this byte
                           ' If a a page boundary  this is a faster draw routine
                           if onPageBoundary = true then
                              ' use fast draw byte - essentially just write the data out, no, reading whats there.
                              GLCDX = GLCDXPos+widthCount
                              If GLCDX.6 = Off Then
                                 Set GLCD_CS2 On
                                 Set GLCD_CS1 off
                              end if
                              If GLCDX.6 = On Then
                                 Set GLCD_CS1 On
                                 GLCDX -= 64
                                 Set GLCD_CS2 off
                              end if

                              'Select page
                              CurrPage = GLCDY / 8
                              Set GLCD_RS Off
                              GLCDWriteByte b'10111000' Or CurrPage
                      		
                              'Select column
                              GLCDWriteByte 64 Or GLCDX
                              'Write data back
                              Set GLCD_RS On
                              GLCDWriteByte wByte

                           else

                              ' slow draw using X Y position and interate throught the bits
                              For CurrCharRow = 0 to 7
                                        If wByte.0 = 0 Then
                                                  PSet GLCDXPos+widthCount, CurrCharRow + GLCDYPos, GLCDBackground
                                        Else
                                                  PSet GLCDXPos+widthCount, CurrCharRow + GLCDYPos, GLCDForeground
                                        End If
                                        Rotate wByte Right
                              Next
                           end if

                         end if

                    next widthCount

                    GLCDXPos =  oldGLCDXPos
                    GLCDYPos = GLCDYPos + 8

              next hCount

          end if

          ' calculate the remaining bits to be dealt with
          maxHeight = objHeight % 8

          'writes and remaining bits, if any
          if maxHeight <> 0 then

            for widthCount = 0 to objwidth - 1
              ReadTable TableData, TableReadPosition, wByte: TableReadPosition++
                  ' slow draw using X Y position and interate throught the bits
                  For CurrCharRow = 0 to maxHeight-1
                            If wByte.0 = 0 Then
                                      PSet GLCDXPos+widthCount, ( CurrCharRow + GLCDYPos ), GLCDBackground
                            Else
                                      PSet GLCDXPos+widthCount, ( CurrCharRow + GLCDYPos ), GLCDForeground
                            End If
                            Rotate wByte Right
                  Next
            next
          end if
          Set GLCD_CS1 Off
          Set GLCD_CS2 Off


  END


  '      Commencing Examination of BMP file
  '      BMP Metrics
  '      BMP Magic Number = BM, Width < 129, Height < 65, CompressionType = 0 & BitsPerPixel = 1
  '
  '      BMP MagicNumber = BM
  '      BMP Width = 84
  '      BMP Height = 63
  '      BMP CompressionType = 0
  '      BMP BitsPerPixel = 1
  '      Valid BMP file found
  '>      Completed Examination of BMP file
  Table GCB as Byte

  ' start data
  0x54
  0x3F
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x20
  0x60
  0xC0
  0x80
  0x80
  0xC0
  0xE0
  0xE0
  0xE0
  0xF0
  0xB8
  0xDE
  0xC0
  0x80
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x80
  0xC0
  0xE0
  0xF0
  0xF8
  0xF8
  0xF8
  0xF8
  0xF8
  0xF8
  0xF8
  0xF0
  0xF0
  0xF0
  0xF0
  0xF0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xE0
  0xF0
  0xF0
  0xF0
  0xF0
  0xF0
  0xF8
  0xF8
  0xF8
  0xF8
  0xFC
  0xFC
  0xFC
  0xFC
  0xFC
  0xFC
  0xFC
  0xFC
  0xFE
  0xFE
  0xFE
  0xFE
  0xFE
  0xFE
  0xFE
  0xFE
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xF1
  0xC0
  0x80
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0xF8
  0xFE
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0x7F
  0x3F
  0x3F
  0x3F
  0x3F
  0x1E
  0x0C
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0xE0
  0xFF
  0x07
  0x3F
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0x3F
  0x3F
  0x3F
  0x19
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x80
  0xFC
  0xFF
  0xFF
  0x00
  0x00
  0x01
  0x0F
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0x7F
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0x7F
  0x7F
  0x7F
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0x7F
  0x3F
  0x1F
  0x0F
  0x07
  0x03
  0x01
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x80
  0xFF
  0xFF
  0xFF
  0x1F
  0x00
  0x00
  0xF0
  0xFC
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0xFF
  0x0F
  0x1F
  0x0F
  0x07
  0x0F
  0x01
  0x00
  0x00
  0x00
  0x00
  0x01
  0x01
  0x01
  0x01
  0x01
  0x01
  0x01
  0x01
  0x01
  0x01
  0x01
  0x01
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0xFF
  0xFF
  0x3F
  0x0F
  0x03
  0x00
  0x2F
  0xFF
  0xFF
  0xFF
  0x7F
  0x01
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x03
  0x03
  0x01
  0x00
  0x00
  0x00
  0x00
  0xFF
  0xFF
  0xFF
  0x07
  0x01
  0x07
  0x1F
  0xFF
  0xFF
  0xF0
  0xC0
  0x80
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x14
  0x1F
  0x1F
  0x1F
  0x10
  0x00
  0x00
  0x00
  0x00
  0xFF
  0xFF
  0xFF
  0xC0
  0x80
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x0C
  0x3F
  0x7F
  0x7F
  0x78
  0x00
  0x00
  0x00
  0x03
  0x03
  0x07
  0x03
  0x03
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x01
  0x01
  0x01
  0x01
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  0x00
  End Table

