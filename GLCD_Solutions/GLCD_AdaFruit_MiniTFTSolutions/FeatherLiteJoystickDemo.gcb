'Demo uses ADAFruit_mini_colorTFT_joystick_featherwing.h.
'Demot is attached to Microchip XPressboard 15f18855



#CHIP 16f18855,32
#OPTION Explicit

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.2
    'PinManager data: 09/02/2017
    '
    'Template comment at the start of the config file
    '
    #STARTUP InitPPS, 85

    Sub InitPPS

        'Module: MSSP1
        'RC3 > SDA1
        SSP1DATPPS = 0x0013
        'SDA1 > RC3 (bi-directional)
        RC3PPS = 0x0015
        'SCL1 > RC4
        RC4PPS = 0x0014
        'RC4 > SCL1 (bi-directional)
        SSP1CLKPPS = 0x0014

    End Sub


    ' ----- Define Hardware settings for hwi2c
    ' Define I2C settings - CHANGE PORTS if required for your specific device.
    #DEFINE hi2c_BAUD_RATE 400
    #DEFINE hi2c_DATA PORTC.3
    #DEFINE hi2c_CLOCK PORTC.4
    'Initialise I2C Master
    'I2C pins need to be input for SSP2 module
    Dir hi2c_DATA In
    Dir hi2c_CLOCK In

    HI2CMode Master

    #INCLUDE <ADAFruit_mini_colorTFT_joystick_featherwing.h>
    'Pin mappings for ADAFruit_mini_colorTFT_joystick_featherwing - you cannot use hwspi.  Only use software SPI
    #define GLCD_DC         portC.2              'Data/Command select
    #define GLCD_CS         portB.2              'CS Chip select
    #define GLCD_RESET      portB.1              'RESET
    #define GLCD_DO         portB.5              'SPI SDO (MOSI)
    #define GLCD_DI         portB.4              'SPI SDI (MISO)  assume bi-directional DO/DI
    #define GLCD_SCK        portB.3              'SPI SCK


'    GLCDRotate ( Landscape )
'
'    GLCDPrint (4, 0, "GCBASIC", TFT_YELLOW )
'    GLCDForeground = TFT_GREEN
'    GLCDPrintString ("GCBASIC")
'    GLCDForeground = TFT_WHITE
'    GLCDPrintString ( "GCBASIC 2023" )
'    Circle  80,40, 10
'    FilledCircle  80,40, 9, TFT_RED
'    Wait 2 s
'    GLCDCLS


    'Set up some variables using in this program
    dim FeatherWingRegister, oldFeatherWingRegister as long
    oldFeatherWingRegister = 0xffff
    dim ccount as byte
    ccount = 0

'    box 0, 5, 158, 79
    GLCDPrint(4, 16, "Button A", TFT_RED )
    GLCDPrint(4, 24, "Button B", TFT_RED )
    GLCDPrint(4, 32, "Select", TFT_GREEN )
    GLCDPrint(4, 40, "Up  ", TFT_GREEN )
    GLCDPrint(4, 48, "Left  ", TFT_GREEN )
    GLCDPrint(4, 56, "Down", TFT_GREEN )
    GLCDPrint(4, 64, "Right  ", TFT_GREEN )

'    filledbox 5,1,154,7, GLCDBackground
'    GLCDPrint( 7, 1, "ADAFRUIT MINICOLORTFT", TFT_WHITE )
'    GLCDPrint( 10, 9,  "JOYSTICK FEATHERWING", TFT_WHITE )


    DO

        'Read the ReadMiniTFT registers
        'exposes the following states
        ' Minitft_Button_A, Minitft_Button_B, Minitft_Joy_Select, and Minitft_Joy_Up, Minitft_Joy_Down, Minitft_Joy_Left and Minitft_Joy_Right as 0 or 1 bits
        FeatherWingRegister = ReadMiniTFT()

        if [word]FeatherWingRegister <>  [word]oldFeatherWingRegister then

            'Button A
            GLCDLocateString 66, 3
            GLCDPrintString str(Minitft_Button_A)

            'Button B
            GLCDLocateString 66, 4
            GLCDPrintString str(Minitft_Button_B)

            'Select
            GLCDLocateString 66, 5
            GLCDPrintString str(Minitft_Joy_Select)

            GLCDLocateString 66, 6
            GLCDPrintString str(Minitft_Joy_Up)

            GLCDLocateString 66, 7
            GLCDPrintString str(Minitft_Joy_Left)

            GLCDLocateString 66, 8
            GLCDPrintString str(Minitft_Joy_Down)

            GLCDLocateString 66, 9
            GLCDPrintString str(Minitft_Joy_Right)

            'Optionally show the number of reads
'            FilledBox 100,66, 130, 78, GLCDBackground
'            GLCDPrint 100,66, ccount
'            ccount++

            'Optionally, show the register values
'            GLCDPrint(100, 16, hex(FeatherWingRegister_E) )
'            GLCDPrintString hex(FeatherWingRegister_U)
'            GLCDPrintString hex(FeatherWingRegister_h)
'            GLCDPrintString hex(FeatherWingRegister)
'
'            GLCDPrint(100, 25, hex(oldFeatherWingRegister_E) )
'            GLCDPrintString hex(oldFeatherWingRegister_U)
'            GLCDPrintString hex(oldFeatherWingRegister_h)
'            GLCDPrintString hex(oldFeatherWingRegister)

            oldFeatherWingRegister = [word]FeatherWingRegister

        End if


    LOOP




'Need to user SW SPI as we are using MSSP1 for HWI2C
'#define ST7735_HardwareSPI     ' remove comment out if you want to use software SPI.

#define ST7735TABCOLOR ST7735_GREENTAB  ' can be ST7735_BLACKTAB, ST7735_GREENTAB or ST7735_REDTAB.  Each tab is a different ST7735 configuration.


#DEFINE MINITFT_WRITEADDR 188             ;0XBC
#DEFINE MINITFT_READADDR 189              ;0XBD

'Define a set of constants to the register bits
#Define Minitft_Button_A    Readminitft_H.2
#Define Minitft_Button_B    Readminitft_H.1
#Define Minitft_Joy_Select  Readminitft_H.3
#Define Minitft_Joy_Up      Readminitft.2
#Define Minitft_Joy_Down    Readminitft.4
#Define Minitft_Joy_Left    Readminitft.3
#Define Minitft_Joy_Right   Readminitft.7

#Define MINITFT_MODULE_BASE_ADDRESS_GPIO 1          ;GPIO = 1  Pg 21 of Seesaw Tutorial
#Define MINITFT_GPIO_BULK 4                         ;GPIO = 4 Reading this register reads all pins on PORTA of the seesaw device.

'Buttons
#Define MINITFT_DIRCLR_GPIO 3                         ;0x03 Pg 22 of Seesaw Tutorial - Writing a 1 to any bit in this register sets the direction of the corresponding pin to INPUT.
#Define MINITFT_PULLENSET_GPIO 11                     ;0x0B Pg 23 of Seesaw Tutorial - Writing a 1 to any bit in this register enables the internal pullup or pulldown on the corresponding pin.
#Define MINITFT_SET_FUNCTIONREG 5                     ;Writing a 1 to any bit in this register writes the corresponding pin HIGH. pg 22


#Define MINITFT_MODULE_BASE_ADDRESS_PWM 8                      ;PWM = 8  Pg 34 of Seesaw Tutorial
#Define MINITFT_MODULE_BASE_ADDRESS_AD  9                      ;AD = 9  Pg 24 of Seesaw Tutorial
#Define MINITFT_MODULE_FUNCTION_REGISTER_ADDRESS_AD0 7        ;PA02_A0 AD  = 7
#Define MINITFT_MODULE_FUNCTION_REGISTER_ADDRESS_AD1 8        ;PA03_A1 AD  = 8

#DEFINE MINITFT_REGISTER_4_DEFAULT 211
#DEFINE MINITFT_REGISTER_3_DEFAULT 195
#DEFINE MINITFT_REGISTER_2_DEFAULT 14
#DEFINE MINITFT_REGISTER_1_DEFAULT 156



Function ReadMiniTFT as long


        HI2CStart
            HI2CSend MINITFT_WRITEADDR
            HI2CSend MINITFT_MODULE_BASE_ADDRESS_GPIO ;Writing a 1 to any bit in this register enables the internal pullup or pulldown on the corresponding pin. The pull direction
            HI2CSend MINITFT_PULLENSET_GPIO ;(up/down) is determined by the GPIO (output) value - if the corresponding GPIO register bit is low, its a pulldown. High, its a pullup.
            HI2CSend MINITFT_REGISTER_4_DEFAULT
            HI2CSend MINITFT_REGISTER_3_DEFAULT
            HI2CSend MINITFT_REGISTER_2_DEFAULT
            HI2CSend MINITFT_REGISTER_1_DEFAULT
'        HI2CStop

        HI2CStart
            HI2CSend MINITFT_WRITEADDR
            HI2CSend MINITFT_MODULE_BASE_ADDRESS_GPIO
            HI2CSend MINITFT_DIRCLR_GPIO
            HI2CSend MINITFT_REGISTER_4_DEFAULT ;Writing a 1 to any bit in this register sets the direction of the corresponding pin to INPUT.
            HI2CSend MINITFT_REGISTER_3_DEFAULT ;Writing zeros to this register has no effect.
            HI2CSend MINITFT_REGISTER_2_DEFAULT ;PA15:PA08 = 1100 1111 - Pin 12 to Pin 7
            HI2CSend MINITFT_REGISTER_1_DEFAULT ;PA07:PA02 = 1101 1100 - Pin 6 to Pin 1   LSB
'        HI2CStop

        HI2CStart
            HI2CSend MINITFT_WRITEADDR
            HI2CSend MINITFT_MODULE_BASE_ADDRESS_GPIO ;Writing a 1 to any bit in this register writes the corresponding pin HIGH.  Writing zeros to this register has no effect.
            HI2CSend MINITFT_SET_FUNCTIONREG
            HI2CSend MINITFT_REGISTER_4_DEFAULT
            HI2CSend MINITFT_REGISTER_3_DEFAULT
            HI2CSend MINITFT_REGISTER_2_DEFAULT
            HI2CSend MINITFT_REGISTER_1_DEFAULT
'        HI2CStop

        HI2CStart
        HI2CSend MINITFT_WRITEADDR
        HI2CSend MINITFT_MODULE_BASE_ADDRESS_GPIO
        HI2CSend MINITFT_GPIO_BULK ;Reading this register reads all pins on PORTA of the seesaw device.
        HI2CRestart
        HI2CSend MINITFT_READADDR
        HI2CReceive [BYTE]ReadMiniTFT_E         ;Bits [31:24] MSB      Seems like BIG_ENDIAN is being used - Data sheet says LITTLE_ENDIAN ????????????
        HI2CReceive [BYTE]ReadMiniTFT_U         ;Bits [23:16]         I show bit order as if it is BIG ENDIAN
        HI2CReceive [BYTE]ReadMiniTFT_H         ;Bits [15:8]
        HI2CReceive [BYTE]ReadMiniTFT, Nack     ;Bits [7:0] LSB
        HI2CStop


End Function
