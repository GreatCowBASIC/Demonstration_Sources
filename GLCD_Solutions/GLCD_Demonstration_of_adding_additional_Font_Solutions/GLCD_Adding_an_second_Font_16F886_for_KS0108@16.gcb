'''A demonstration program for GCBASIC.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates adding an additional font for use on the GLCD.
'''Multiple fonts can be added - this example shows adding one font.
'''Adding a new fontset uses the global variable GLCDfntDefault where 0 is normal font, 1 is our new font). Font 1 addresses the new font table, see code.
'''To add additional fonts requires a replacement AltGLCDDrawChar subroutine, the instruction '#define GLCDDrawChar AltGLCDDrawChar' and the Table(s) of the fonts definitions.
'''By adding the new subroutine this redirects GLCD character writing routines to enable the additional font handling.
'''To select a Font use GLCDfntDefault = 0 for the standard,, or GLCDfntDefault = 1 for the alternative font.
'''This supports the KS0108 and the ST7920.  The subroutine can be easily adapted to support other GLCD displays.
'''The GLCD is connected to the microprocessor as shown in the hardware section of this code.
'''
'''
'''@author 	EvanV based on works on ChuckH
'''@licence	GPL
'''@version	1.0a
'''@date   	23.02.2015
'''********************************************************************************

; ----- Configuration

 #chip 16F886
 #option explicit
 #include <glcd.h>


; ----- Define Hardware settings
  ' All hardware is defined with respect to GLCD in the support methods.

; ----- Constants
  #define GLCD_RW PORTB.1  'D9 to pin 5 of LCD
  #define GLCD_RESET PORTB.5 'D13 to pin 17 of LCD
  #define GLCD_CS1 PORTB.3 'D12 to actually to CS1, sometimes CS2 is backward
  #define GLCD_CS2 PORTB.4 'D11 to actually to CS2, sometimes CS1 are backward
  #define GLCD_RS PORTB.0  'D8 to pin 4 D/I pin on LCD
  #define GLCD_ENABLE PORTB.2 'D10 to Pin 6 on LCD
  #define GLCD_DB0 PORTC.7 'D0 to pin 7 on LCD
  #define GLCD_DB1 PORTC.6 'D1 to pin 8 on LCD
  #define GLCD_DB2 PORTC.5 'D2 to pin 9 on LCD
  #define GLCD_DB3 PORTC.4 'D3 to pin 10 on LCD
  #define GLCD_DB4 PORTC.3 'D4 to pin 11 on LCD
  #define GLCD_DB5 PORTC.2 'D5 to pin 12 on LCD
  #define GLCD_DB6 PORTC.1 'D6 to pin 13 on LCD
  #define GLCD_DB7 PORTC.0 'D7 to pin 14 on LCD

; ----- Variables
  Dim CHAR, XVAR, GLCDFNTDEFAULTSPACING, CURRCHARVAL, CURRCHARCOL, CURRCHARROW, CURRCHARVAL, GLCDPRINTLOC as Byte

; ----- Main body of program commences here.
  Start:
    GLCDfntDefault = 0
    GLCDCLS
    'Print Hello
    GLCDPrint 0,10,"Hello"
    wait 5 s
    'Print ASCII #:
    GLCDPrint 0,10, "ASCII #:"
    'Draw Box Around ASCII Character
    Box 18,30,28,40	
    'Print 0 through 9
    for char = 15 to 129
        GLCDPrint 17, 20 , Str(char)
        GLCDdrawCHAR 20,30, char
        wait 1 s
    next
    'Draw Line using line command
    line 0,50,127,50
    for xvar = 0 to 80
        'draw line using Pset command
        pset xvar,63,on
    next	

    GLCDfntDefault = 1
        GLCDCLS
    'Print Hello
    GLCDPrint 0,10,"Hello"
    wait 5 s
    'Print ASCII #:
    GLCDPrint 0,10, "ASCII #:"
    'Draw Box Around ASCII Character
    Box 18,30,28,40	
    'Print 0 through 9
    for char = 15 to 129
        GLCDPrint 17, 20 , Str(char)
        GLCDdrawCHAR 20,30, char
        wait 1 s
    next
    'Draw Line using line command
    line 0,50,127,50
    for xvar = 0 to 80
        'draw line using Pset command
        pset xvar,63,on
    next	


    Wait 10 s
  Goto Start
end

; ----- Support methods.  Subroutines and Functions


' Adding a new fontset uses the global variable GLCDfntDefault where 0 is normal font, 1 is our new font). Font 1 addresses the new font table, see below.
#define GLCDDrawChar AltGLCDDrawChar
Sub AltGLCDDrawChar(In CharLocX, In CharLocY, In CharCode, Optional In LineColour = GLCDForeground )



	'CharCode needs to have 16 subtracted, table starts at char 16 not char 0
	CharCode -= 15

	'invert colors if required

          if LineColour <> GLCDForeground and GLCD_TYPE <> GLCD_TYPE_ST7735 then
            'Inverted Colours
            GLCDBackground = 1
            GLCDForeground = 0
          end if

	select case GLCDfntDefault			' I have used a case to expand later.

                 case 0
                      GLCDfntDefaultSpacing = 6

                      ' Original GCB Code
                      'Need to read characters from CharColn (n = 0:7) tables
                      '(First 3, ie 0:2 are blank, so can ignore)
                      For CurrCharCol = 1 to 5
                                Select Case CurrCharCol
                                          Case 1: ReadTable GLCDCharCol3, CharCode, CurrCharVal
                                          Case 2: ReadTable GLCDCharCol4, CharCode, CurrCharVal
                                          Case 3: ReadTable GLCDCharCol5, CharCode, CurrCharVal
                                          Case 4: ReadTable GLCDCharCol6, CharCode, CurrCharVal
                                          Case 5: ReadTable GLCDCharCol7, CharCode, CurrCharVal
                                End Select
                                For CurrCharRow = 1 to 8
                                          If CurrCharVal.0 = 0 Then
                                                    PSet CharLocX + CurrCharCol, CharLocY + CurrCharRow, GLCDBackground
                                          Else
                                                    PSet CharLocX + CurrCharCol, CharLocY + CurrCharRow, GLCDForeground
                                          End If
                                          Rotate CurrCharVal Right
                                Next
                      Next
                 case 1

                      CharCode = CharCode - 16
                      For CurrCharCol = 1 to 5
                                Select Case CurrCharCol
                                          Case 1: ReadTable GLCDCharCol13, CharCode, CurrCharVal
                                          Case 2: ReadTable GLCDCharCol14, CharCode, CurrCharVal
                                          Case 3: ReadTable GLCDCharCol15, CharCode, CurrCharVal
                                          Case 4: ReadTable GLCDCharCol16, CharCode, CurrCharVal
                                          Case 5: ReadTable GLCDCharCol17, CharCode, CurrCharVal
                                End Select
                                For CurrCharRow = 1 to 8
                                          If CurrCharVal.0 = 0 Then
                                                    PSet CharLocX + CurrCharCol, CharLocY + CurrCharRow, GLCDBackground
                                          Else
                                                    PSet CharLocX + CurrCharCol, CharLocY + CurrCharRow, GLCDForeground
                                          End If
                                          Rotate CurrCharVal Right
                                Next
                      Next			
                      GLCDPrintLoc = GLCDPrintLoc - 1             ' adjust for font width
          end select
          'Colours
          GLCDBackground = 0
          GLCDForeground = 1

End Sub



'''Reset GLCD
'''@hide
'Character bitmaps for print routines
Table GLCDCharCol13
0x00
0x00
0x00
0x34
0x00
0x32
0x18
0x00
0x00
0x41
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x3C
0x30
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x3E
0x00
0x1C
0x00
0x1C
0x00
0x00
0x02
0x00
0x00
0x0E
0x22
0x02
0x00
0x00
0x01
0x00
0x18
0x40
0x00
0x00
0x00
0x00
0x18
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x00
0x3C
0x00
0x00
0x00
0x18
0x00
0x00
0x00
0x00
0x00
0x0C
0x00
0x40
0x00
0x00
0x00
0x00
0x10
End Table

Table GLCDCharCol14
0x00
0x00
0x03
0x1C
0x26
0x0D
0x26
0x00
0x1C
0x41
0x0A
0x10
0x80
0x08
0x00
0x60
0x1E
0x22
0x31
0x25
0x0C
0x27
0x1E
0x01
0x1A
0x06
0x00
0x80
0x08
0x14
0x22
0x01
0x42
0x1C
0x3E
0x1C
0x3E
0x3E
0x3E
0x1C
0x3E
0x22
0x22
0x3E
0x3E
0x04
0x3E
0x22
0x3E
0x22
0x3E
0x24
0x02
0x1E
0x0E
0x30
0x14
0x04
0x32
0x00
0x06
0x41
0x06
0x40
0x01
0x34
0x3F
0x18
0x24
0x18
0x04
0x58
0x3F
0x04
0x44
0x3F
0x01
0x08
0x3C
0x18
0x7C
0x24
0x3C
0x28
0x04
0x1C
0x0C
0x30
0x24
0x4C
0x34
0x08
0x00
0x41
0x08
End Table

Table GLCDCharCol15
0x00
0x2F
0x00
0x36
0x7F
0x1E
0x2D
0x03
0x22
0x22
0x05
0x38
0x60
0x08
0x20
0x18
0x21
0x3F
0x29
0x25
0x0A
0x25
0x25
0x39
0x25
0x29
0x24
0x64
0x08
0x14
0x14
0x29
0x59
0x12
0x2A
0x22
0x22
0x2A
0x0A
0x22
0x08
0x3E
0x22
0x08
0x20
0x18
0x04
0x22
0x0A
0x22
0x0A
0x2A
0x3E
0x20
0x30
0x0C
0x08
0x38
0x2A
0x7F
0x18
0x7F
0x01
0x40
0x02
0x34
0x24
0x24
0x24
0x2C
0x3E
0x54
0x08
0x3D
0x44
0x08
0x3F
0x3C
0x08
0x24
0x24
0x24
0x08
0x2C
0x1E
0x20
0x30
0x1C
0x18
0x70
0x2C
0x36
0x7F
0x36
0x08
End Table

Table GLCDCharCol16
0x00
0x00
0x03
0x1C
0x32
0x2C
0x12
0x00
0x41
0x1C
0x0A
0x10
0x00
0x08
0x00
0x06
0x21
0x20
0x26
0x1A
0x3F
0x19
0x25
0x05
0x25
0x29
0x00
0x00
0x14
0x14
0x08
0x05
0x55
0x1C
0x36
0x22
0x22
0x2A
0x0A
0x2A
0x08
0x22
0x1E
0x14
0x20
0x04
0x08
0x22
0x0A
0x62
0x14
0x12
0x02
0x20
0x30
0x30
0x14
0x04
0x2A
0x41
0x60
0x00
0x06
0x40
0x00
0x38
0x24
0x24
0x3F
0x28
0x05
0x54
0x04
0x00
0x3D
0x14
0x00
0x08
0x04
0x24
0x24
0x7C
0x04
0x14
0x24
0x10
0x30
0x30
0x18
0x30
0x2C
0x41
0x00
0x08
0x10

End Table

Table GLCDCharCol17
0x00
0x00
0x00
0x16
0x00
0x13
0x28
0x00
0x41
0x00
0x00
0x00
0x00
0x00
0x00
0x01
0x1E
0x00
0x00
0x00
0x08
0x00
0x18
0x03
0x1A
0x1E
0x00
0x00
0x22
0x14
0x08
0x02
0x5E
0x30
0x00
0x22
0x1C
0x00
0x00
0x3A
0x3E
0x00
0x00
0x22
0x20
0x3E
0x3E
0x1C
0x04
0x9C
0x20
0x00
0x02
0x1E
0x0E
0x0E
0x22
0x02
0x26
0x00
0x00
0x00
0x18
0x40
0x00
0x20
0x18
0x00
0x00
0x00
0x05
0x3C
0x38
0x00
0x00
0x20
0x00
0x3C
0x38
0x18
0x18
0x00
0x00
0x00
0x04
0x3C
0x0C
0x0C
0x24
0x0C
0x00
0x00
0x00
0x00
0x08
End Table

