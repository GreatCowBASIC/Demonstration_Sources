'''A program  for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''
''' A bluetooth Temperature Pressure & Humidity  Transmitter using the BME280 sensor.
'''Feature list:
'''     BlueTooth communication is through a HC05 BT module hooked to the serial output of the 16F1705
'''     Supports the BME/BMP280 Sensor
'''
'''@author     Mike Otte
'''@licence    GPL
'''@version    1.00
'''@date       04.05.2018
'''********************************************************************************


    #chip 16F1705,8

    #include <bme280.h>

    'Generated by PIC PPS Tool for GCBASIC
    'PPS Tool version: 0.0.5.4
    'PinManager data: 2/9/2017
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

     Sub InitPPS
        UNLOCKPPS

            'Module: EUSART
            RXPPS = 0x0011    'RC1 > RX
            RC0PPS = 0x0014    'TX > RC0
               'Module: MSSP
            RC5PPS = 0x0011    'SDA > RC5
            SSPDATPPS = 0x0015    'RC5 > SDA (bi-directional)
            RC4PPS = 0x0010    'SCL > RC4
            SSPCLKPPS = 0x0014    'RC4 > SCL (bi-directional)

        LOCKPPS
    End Sub
    'Template comment at the end of the config file

    'USART settings - these MUST be set after the PPS settings
    #define USART_BAUD_RATE 9600
    #define USART_TX_BLOCKING



   ' Define I2C settings - CHANGE PORTS if required
    #define HI2C_BAUD_RATE 400
    #define HI2C_DATA PORTC.4
    #define HI2C_CLOCK PORTC.3
    'Initialise I2C Slave
    'I2C pins need to be input for SSP module
    Dir HI2C_DATA in
    Dir HI2C_CLOCK in
   'MASTER
    HI2CMode Master


    ; ----- Variables
    dim Temp  as integer        
    dim Press, Humidity  as long
    dim adc_P, adc_T as long
    dim adc_H as long
    dim Frac as Byte

    wait 1 s

    
    do forever

            HSerPrint ">"    ' just indicates beginning of a scan

     Temp = BME280_GetTemperature
            printIntWd ("  Temp C =  ", Temp)
            temp = temp *9/5+3205
            printIntWd ("  Temp F =  ", Temp)
            'HserPrint ","
            HSerPrintCRLF

     Press = BME280_GetPressure

             printwd ("  Pressure hpa = ", Press)
             Press = Press*100/3386
             printwd("     Pressure inHg = ", Press)
             'HserPrint ","
             HSerPrintCRLF

     Humidity = BME280_GetHumidity
          'HSerPrint "  adc_H = "
          'HSerPrint adc_H
          'HSerPrint "  "
          'HserPrint humidity
          printwd("     Humidity = ", Humidity/10)
          HSerPrintCRLF

     wait 10 sec

  loop

    sub printwd (in prntstr as string, in prnval as long)
        HSerPrint prntstr
             HSerPrint prnval/100
             HSerPrint "."
             Frac = prnval%100
             If Frac < 10 then HSerPrint "0"
             HSerPrint Frac
    end sub

    sub printIntWd (in prntstr as string, in prnval as integer)
        HSerPrint prntstr
             HSerPrint prnval/100
             HSerPrint "."
             Frac = prnval%100
             If Frac < 10 then HSerPrint "0"
             HSerPrint Frac
    end sub

    
